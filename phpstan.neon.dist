parameters:
	level: 5
	paths:
		- src
		- tests
		- tests/Fixtures/app/console
	inferPrivatePropertyTypeFromConstructor: true
	symfony:
		container_xml_path: tests/Fixtures/app/var/cache/test/appAppKernelTestDebugContainer.xml
		constant_hassers: false
	autoload_files:
		- tests/Fixtures/app/AppKernel.php
	excludes_analyse:
		- tests/Fixtures/app/var/cache
		# The Symfony Configuration API isn't good enough to be analysed
		- src/Bridge/Symfony/Bundle/DependencyInjection/Configuration.php
		# Imported code (temporary)
		- src/Bridge/Symfony/Bundle/Test/BrowserKitAssertionsTrait.php
		- tests/Bridge/Symfony/Bundle/Test/WebTestCaseTest.php
	earlyTerminatingMethodCalls:
		PHPUnit\Framework\Constraint\Constraint:
			- fail
	ignoreErrors:
		# Real problems, hard to fix
		- '#Parameter \#2 \$dqlPart of method Doctrine\\ORM\\QueryBuilder::add\(\) expects array\|object, string given\.#'
		-
			message: '#Return type \(int\) of method ApiPlatform\\Core\\Identifier\\Normalizer\\IntegerDenormalizer::denormalize\(\) should be compatible with return type \(array\|object\) of method Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface::denormalize\(\)#'
			path: src/Identifier/Normalizer/IntegerDenormalizer.php

		# False positives
		-
			message: '#Variable \$iri might not be defined\.#'
			path: src/JsonApi/Serializer/ItemNormalizer.php
		-
			message: '#Variable \$positionPm might not be defined\.#'
			path: src/Util/ClassInfoTrait.php
		-
			message: "#Cannot access offset 'node' on bool\\.#"
			path: src/GraphQl/Serializer/SerializerContextBuilder.php
		- '#Access to an undefined property Prophecy\\Prophecy\\ObjectProphecy<(\\?[a-zA-Z0-9_]+)+>::\$[a-zA-Z0-9_]+#'
		-
			message: '#Call to an undefined method Doctrine\\Persistence\\ObjectManager::getConnection\(\)#'
			path: src/Bridge/Doctrine/Common/Util/IdentifierManagerTrait.php
		# https://github.com/willdurand/Negotiation/issues/89#issuecomment-513283286
		-
			message: '#Call to an undefined method Negotiation\\AcceptHeader::getType\(\)\.#'
			path: src/EventListener/AddFormatListener.php
		# https://github.com/symfony/symfony/issues/31814#issuecomment-498749590
		-
			message: '#Call to an undefined method Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface::getReachableRoles\(\)\.#'
			path: src/Security/ResourceAccessChecker.php
		- '#Parameter \#1 \$vars of class GraphQL\\Language\\AST\\(IntValue|ObjectField|ObjectValue|BooleanValue|ListValue|StringValue)Node constructor expects array<bool\|float\|GraphQL\\Language\\AST\\Location\|GraphQL\\Language\\AST\\NameNode\|GraphQL\\Language\\AST\\NodeList\|GraphQL\\Language\\AST\\SelectionSetNode\|int\|string\|null>, array<string, .+> given\.#'
		- '#Parameter \#1 \$defaultContext of class Symfony\\Component\\Serializer\\Encoder\\Json(De|En)code constructor expects array, (int|true) given\.#'
		- '#Parameter \#(2|3) \$(resourceMetadataFactory|pagination) of class ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\PaginationExtension constructor expects (ApiPlatform\\Core\\Metadata\\Resource\\Factory\\ResourceMetadataFactoryInterface\|Symfony\\Component\\HttpFoundation\\RequestStack|ApiPlatform\\Core\\DataProvider\\Pagination\|ApiPlatform\\Core\\Metadata\\Resource\\Factory\\ResourceMetadataFactoryInterface), stdClass given\.#'
		# https://github.com/phpDocumentor/ReflectionDocBlock/pull/209
		-
			message: '#Parameter \#1 \$docblock of method phpDocumentor\\Reflection\\DocBlockFactoryInterface::create\(\) expects string, ReflectionClass<mixed> given\.#'
			path: src/Metadata/Resource/Factory/PhpDocResourceMetadataFactory.php
		-
			message: '#Parameter \#[0-9] \$filterLocator of class .+ constructor expects ApiPlatform\\Core\\Api\\FilterCollection|Psr\\Container\\ContainerInterface, ArrayObject<mixed, mixed> given\.#'
			paths:
				- tests/Bridge/Doctrine/Orm/Extension/FilterExtensionTest.php
				- tests/Bridge/NelmioApiDoc/Extractor/AnnotationsProvider/ApiPlatformProviderTest.php
				- tests/Hydra/Serializer/CollectionFiltersNormalizerTest.php
				- tests/Swagger/Serializer/DocumentationNormalizerV2Test.php
				- tests/Swagger/Serializer/DocumentationNormalizerV3Test.php
		-
			message: '#Parameter \#1 \$objectValue of method GraphQL\\Type\\Definition\\InterfaceType::resolveType\(\) expects object, array(<string, string>)? given.#'
			path: tests/GraphQl/Type/TypeBuilderTest.php
		# https://github.com/phpstan/phpstan-doctrine/issues/115
		-
			message: '#Property ApiPlatform\\Core\\Test\\DoctrineMongoDbOdmFilterTestCase::\$repository \(Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository\) does not accept Doctrine\\ORM\\EntityRepository<ApiPlatform\\Core\\Tests\\Fixtures\\TestBundle\\Document\\Dummy>\.#'
			path: src/Test/DoctrineMongoDbOdmFilterTestCase.php
		-
			message: "#Call to method PHPUnit\\\\Framework\\\\Assert::assertSame\\(\\) with array\\('(collection_context|item_context|subresource_context)'\\) and array<Symfony\\\\Component\\\\VarDumper\\\\Cloner\\\\Data>\\|bool\\|float\\|int\\|string\\|null will always evaluate to false\\.#"
			path: tests/Bridge/Symfony/Bundle/DataCollector/RequestDataCollectorTest.php
		# https://github.com/phpstan/phpstan-phpunit/issues/62
		-
			message: '#Call to method PHPUnit\\Framework\\Assert::assertSame\(\) with 2 and int will always evaluate to false\.#'
			path: tests/Identifier/Normalizer/IntegerDenormalizerTest.php
		-
			message: '#Binary operation "\+" between (float\|int\|)?string and 0 results in an error\.#'
			path: src/Bridge/Doctrine/Common/Filter/RangeFilterTrait.php
		# https://github.com/phpstan/phpstan-symfony/issues/27
		-
			message: '#Service "api_platform\.json_schema\.schema_factory" is private\.#'
			path: src/Bridge/Symfony/Bundle/Test/ApiTestAssertionsTrait.php
		-
			message: '#Service "api_platform\.iri_converter" is private\.#'
			path: src/Bridge/Symfony/Bundle/Test/ApiTestCase.php
		# https://github.com/phpstan/phpstan-symfony/issues/76
		-
			message: '#Service "api_platform\.graphql\.fields_builder" is private\.#'
			path: src/GraphQl/Type/TypeBuilder.php
		-
			message: '#Service "test" is not registered in the container\.#'
			path: tests/GraphQl/Type/TypesContainerTest.php
		# https://github.com/phpstan/phpstan/issues/2999
		-
			message: '#ArrayObject<string, string> does not accept true\.#'
			path: src/JsonSchema/SchemaFactory.php
		-
			message: '#ArrayObject<string, string> does not accept array<string, mixed>\.#'
			path: src/JsonSchema/SchemaFactory.php
		-
			message: '#Cannot assign new offset to string\.#'
			path: src/JsonSchema/SchemaFactory.php

		# Expected, due to optional interfaces
		- '#Method ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryCollectionExtensionInterface::applyToCollection\(\) invoked with 5 parameters, 3-4 required\.#'
		- '#Method ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryResult(Item|Collection)ExtensionInterface::getResult\(\) invoked with 4 parameters, 1 required\.#'
		- '#Method ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryResult(Item|Collection)ExtensionInterface::supportsResult\(\) invoked with 3 parameters, 1-2 required\.#'
		- '#Method ApiPlatform\\Core\\Bridge\\Symfony\\Routing\\RouteNameResolverInterface::getRouteName\(\) invoked with 3 parameters, 2 required\.#'
		- '#Method ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::persist\(\) invoked with 2 parameters, 1 required\.#'
		- '#Method ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::remove\(\) invoked with 2 parameters, 1 required\.#'
		- '#Method ApiPlatform\\Core\\DataPersister\\DataPersisterInterface::supports\(\) invoked with 2 parameters, 1 required\.#'
		- '#Method ApiPlatform\\Core\\DataProvider\\CollectionDataProviderInterface::getCollection\(\) invoked with 3 parameters, 1-2 required\.#'
		- '#Method Symfony\\Component\\Serializer\\NameConverter\\NameConverterInterface::denormalize\(\) invoked with (2|3|4) parameters, 1 required\.#'
		- '#Method Symfony\\Component\\Serializer\\NameConverter\\NameConverterInterface::normalize\(\) invoked with (2|3|4) parameters, 1 required\.#'
		- '#Method Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface::supportsNormalization\(\) invoked with 3 parameters, 1-2 required\.#'

		# Expected, due to deprecations
		- '#Method ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\(Abstract|Exists|Order)Filter::filterProperty\(\) invoked with 7 parameters, 5-6 required\.#'
		- '#Method ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\(AbstractFilter|FilterInterface)::apply\(\) invoked with 5 parameters, 3-4 required\.#'
		- '#Method ApiPlatform\\Core\\PathResolver\\OperationPathResolverInterface::resolveOperationPath\(\) invoked with 4 parameters, 3 required\.#'

		# Expected, due to backward compatibility
		-
			message: "#Call to function method_exists\\(\\) with ApiPlatform\\\\Core\\\\JsonApi\\\\Serializer\\\\ItemNormalizer and 'setCircularReferencâ€¦' will always evaluate to false\\.#"
			path: tests/JsonApi/Serializer/ItemNormalizerTest.php
