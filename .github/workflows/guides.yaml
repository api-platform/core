name: Guides

on:
    push:
    pull_request:

env:
    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    COVERAGE: '0'
    SYMFONY_DEPRECATIONS_HELPER: max[self]=0

jobs:
    docs:
        name: Test guides
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Setup PHP with pre-release PECL extension
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.2
                    tools: pecl, composer
                    extensions: intl, bcmath, curl, openssl, mbstring, pdo_sqlite
                    coverage: none
                    ini-values: memory_limit=-1
            -   name: Get composer cache directory
                id: composercache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                shell: bash
            -   name: Global require pdg
                run: |
                    cd $(composer -n config --global home)
                    echo "{\"repositories\":[{\"type\":\"vcs\",\"url\":\"https://github.com/php-documentation-generator/php-documentation-generator\"}]}" > composer.json
                    composer global config --no-plugins allow-plugins.symfony/runtime true
                    composer global require php-documentation-generator/php-documentation-generator:dev-main
            -   name: Cache dependencies
                uses: actions/cache@v4
                with:
                    path: ${{ steps.composercache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: ${{ runner.os }}-composer-
            -   name: Install project dependencies
                working-directory: docs
                run: |
                    composer update --no-interaction --no-progress --ansi
                    cp -r ../src ./vendor/api-platform/core/
            -   name: Test guides
                working-directory: docs
                env:
                    APP_DEBUG: 0
                    PDG_AUTOLOAD: ${{ github.workspace }}/docs/vendor/autoload.php
                    KERNEL_CLASS: \ApiPlatform\Playground\Kernel
                run: |
                    for d in guides/*.php; do
                      rm -f var/data.db
                      echo "Testing guide $d"
                      pdg-phpunit $d || exit 1
                    done
