name: CI

on:
  push:
  pull_request:

env:
  COMPOSER_ALLOW_SUPERUSER: '1' # https://getcomposer.org/doc/03-cli.md#composer-allow-superuser
  COMPOSER_INSTALLER_COMMIT: fb22b78362d31c0d2bf516d1f8cdfd2745caa431
  COVERAGE: '0'
  EXT_MONGODB_VERSION: '1.5.5'
  EXT_PCOV_VERSION: '1.0.6'
  LEGACY: '0'
  SYMFONY_REQUIRE: ^3.4 || ^4.0 || ^5.0

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    strategy:
      matrix:
        php:
          - '7.1'
          - '7.2'
          - '7.3'
          - '7.4-rc'
        include:
          - php: '7.3'
            coverage: true
      fail-fast: false
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Get PHP extension directory
        id: php-extension-directory
        run: |
          directory=$(php -r "echo ini_get('extension_dir');")
          echo "::set-output name=directory::$directory"
      - name: Cache PHP extensions
        id: cache-php-extensions
        uses: actions/cache@v1
        with:
          path: steps.php-extension-directory.outputs.directory
          key: php-extensions-php${{ matrix.php }}-mongo-$EXT_MONGODB_VERSION-pcov-$EXT_PCOV_VERSION
      - name: Install mongodb PHP extension
        if: (!startsWith(matrix.php, '7.1')) && steps.cache-php-extensions.outputs.cache-hit != 'true'
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Install pcov PHP extension
        if: matrix.coverage && steps.cache-php-extensions.outputs.cache-hit != 'true'
        run: |
          apk add $PHPIZE_DEPS
          pecl install pcov-$EXT_PCOV_VERSION
          docker-php-ext-enable pcov
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Cache Composer packages
        uses: actions/cache@v1
        with:
          path: ~/.composer/cache
          key: composer-php${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            composer-php${{ matrix.php }}-
            composer-
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Remove Doctrine MongoDB ODM
        if: startsWith(matrix.php, '7.1')
        run: |
          composer remove --dev --no-progress --no-update --ansi \
            doctrine/mongodb-odm \
            doctrine/mongodb-odm-bundle \
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Enable code coverage
        if: matrix.coverage
        run: echo '::set-env name=COVERAGE::1'
      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          if [ "$COVERAGE" = '1' ]; then
            vendor/bin/phpunit --coverage-clover build/logs/phpunit/clover.xml --log-junit build/logs/phpunit/junit.xml --colors=always
          else
            vendor/bin/phpunit --log-junit build/logs/phpunit/junit.xml --colors=always
          fi
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: phpunit-logs-php${{ matrix.php }}
          path: build/logs/phpunit
      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v1.0.3
        with:
          name: phpunit-php${{ matrix.php }}
          flags: phpunit
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload coverage results to Coveralls
        if: matrix.coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi cedx/coveralls
          export PATH="$PATH:$HOME/.composer/vendor/bin"
          coveralls build/logs/phpunit/clover.xml
