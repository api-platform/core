name: CI

on:
  push:
  pull_request:

env:
  COMPOSER_ALLOW_SUPERUSER: '1' # https://getcomposer.org/doc/03-cli.md#composer-allow-superuser
  COMPOSER_INSTALLER_COMMIT: fb22b78362d31c0d2bf516d1f8cdfd2745caa431
  EXT_MONGODB_VERSION: '1.5.5'
  LEGACY: '0'
  SYMFONY_REQUIRE: ^3.4 || ^4.0

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    strategy:
      matrix:
        php:
          - '7.2'
          - '7.3'
          - '7.4-rc'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always

  behat:
    name: Behat (PHP ${{ matrix.php }})
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    strategy:
      matrix:
        php:
          - '7.2'
          - '7.3'
          - '7.4-rc'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Enable legacy integrations
        if: startsWith(matrix.php, '7.2') || startsWith(matrix.php, '7.3')
        run: echo '::set-env name=LEGACY::1'
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run Behat tests
        run: |
          if [ "$LEGACY" = '1' ]; then
            vendor/bin/behat --format=progress --no-interaction --colors
          else
            vendor/bin/behat --format=progress --profile=default-no-legacy --no-interaction --colors
          fi

  phpunit-lowest-deps:
    name: PHPUnit (PHP ${{ matrix.php }}) (lowest dependencies)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4-rc'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --prefer-stable --prefer-lowest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always

  behat-lowest-deps:
    name: Behat (PHP ${{ matrix.php }}) (lowest dependencies)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4-rc'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --prefer-stable --prefer-lowest --ansi
      - name: Enable legacy integrations
        if: startsWith(matrix.php, '7.3')
        run: echo '::set-env name=LEGACY::1'
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run Behat tests
        run: |
          if [ "$LEGACY" = '1' ]; then
            vendor/bin/behat --format=progress --no-interaction --colors
          else
            vendor/bin/behat --format=progress --profile=default-no-legacy --no-interaction --colors
          fi

  phpunit-postgresql:
    name: PHPUnit (PHP ${{ matrix.php }}) (PostgreSQL)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      postgres:
        image: postgres:10-alpine
        env:
          POSTGRES_DB: api_platform_test
          POSTGRES_PASSWORD: hk7dFAByeQVVxpLtmZ6GVUzP
          POSTGRES_USER: api-platform
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: postgres
      DATABASE_URL: postgres://api-platform:hk7dFAByeQVVxpLtmZ6GVUzP@postgres/api_platform_test
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install PHP extensions
        run: |
          apk add \
            $PHPIZE_DEPS \
            postgresql-dev \
          ;
          docker-php-ext-install -j$(nproc) \
            pdo_pgsql \
          ;
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always

  behat-postgresql:
    name: Behat (PHP ${{ matrix.php }}) (PostgreSQL)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      postgres:
        image: postgres:10-alpine
        env:
          POSTGRES_DB: api_platform_test
          POSTGRES_PASSWORD: hk7dFAByeQVVxpLtmZ6GVUzP
          POSTGRES_USER: api-platform
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: postgres
      DATABASE_URL: postgres://api-platform:hk7dFAByeQVVxpLtmZ6GVUzP@postgres/api_platform_test
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install PHP extensions
        run: |
          apk add \
            $PHPIZE_DEPS \
            postgresql-dev \
          ;
          docker-php-ext-install -j$(nproc) \
            pdo_pgsql \
          ;
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Enable legacy integrations
        if: startsWith(matrix.php, '7.3')
        run: echo '::set-env name=LEGACY::1'
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run Behat tests
        run: |
          if [ "$LEGACY" = '1' ]; then
            vendor/bin/behat --format=progress --profile=postgres --no-interaction --colors
          else
            vendor/bin/behat --format=progress --profile=postgres-no-legacy --no-interaction --colors
          fi

  phpunit-mysql:
    name: PHPUnit (PHP ${{ matrix.php }}) (MySQL)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: api_platform_test
          MYSQL_PASSWORD: LUhGR5tJ7WA2gbGumknCYBcB
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
          MYSQL_USER: api-platform
        options: >-
          --mount type=tmpfs,destination=/var/lib/mysql
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: mysql
      DATABASE_URL: mysql://api-platform:LUhGR5tJ7WA2gbGumknCYBcB@mysql/api_platform_test
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install PHP extensions
        run: |
          apk add \
            $PHPIZE_DEPS \
          ;
          docker-php-ext-install -j$(nproc) \
            pdo_mysql \
          ;
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always

  behat-mysql:
    name: Behat (PHP ${{ matrix.php }}) (MySQL)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: api_platform_test
          MYSQL_PASSWORD: LUhGR5tJ7WA2gbGumknCYBcB
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
          MYSQL_USER: api-platform
        options: >-
          --mount type=tmpfs,destination=/var/lib/mysql
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: mysql
      DATABASE_URL: mysql://api-platform:LUhGR5tJ7WA2gbGumknCYBcB@mysql/api_platform_test
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install PHP extensions
        run: |
          apk add \
            $PHPIZE_DEPS \
          ;
          docker-php-ext-install -j$(nproc) \
            pdo_mysql \
          ;
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Enable legacy integrations
        if: startsWith(matrix.php, '7.3')
        run: echo '::set-env name=LEGACY::1'
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run Behat tests
        run: |
          if [ "$LEGACY" = '1' ]; then
            vendor/bin/behat --format=progress --no-interaction --colors
          else
            vendor/bin/behat --format=progress --profile=default-no-legacy --no-interaction --colors
          fi

  phpunit-mongodb:
    name: PHPUnit (PHP ${{ matrix.php }}) (MongoDB)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      mongo:
        image: mongo:4
        options: >-
          --health-cmd "mongo --quiet --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: mongodb
      MONGODB_URL: mongodb://mongo:27017
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always --configuration phpunit_mongodb.xml

  behat-mongodb:
    name: Behat (PHP ${{ matrix.php }}) (MongoDB)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      mongo:
        image: mongo:4
        options: >-
          --health-cmd "mongo --quiet --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: mongodb
      MONGODB_URL: mongodb://mongo:27017
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Enable legacy integrations
        if: startsWith(matrix.php, '7.3')
        run: echo '::set-env name=LEGACY::1'
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run Behat tests
        run: |
          if [ "$LEGACY" = '1' ]; then
            vendor/bin/behat --format=progress --profile=mongodb --no-interaction --colors
          else
            vendor/bin/behat --format=progress --profile=mongodb-no-legacy --no-interaction --colors
          fi

  phpunit-elasticsearch:
    name: PHPUnit (PHP ${{ matrix.php }}) (Elasticsearch)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3 # https://github.com/elastic/elasticsearch/issues/43627
        env:
          discovery.type: single-node
        options: >-
          --health-cmd "curl -fsSL http://127.0.0.1:9200/_cluster/health | grep -q '\"status\":[[:space:]]*\"green\"'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always

  behat-elasticsearch:
    name: Behat (PHP ${{ matrix.php }}) (Elasticsearch)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3 # https://github.com/elastic/elasticsearch/issues/43627
        env:
          discovery.type: single-node
        options: >-
          --health-cmd "curl -fsSL http://127.0.0.1:9200/_cluster/health | grep -q '\"status\":[[:space:]]*\"green\"'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      APP_ENV: elasticsearch
      ELASTICSEARCH_URL: http://elasticsearch:9200
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Enable legacy integrations
        if: startsWith(matrix.php, '7.3')
        run: echo '::set-env name=LEGACY::1'
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run Behat tests
        run: |
          if [ "$LEGACY" = '1' ]; then
            vendor/bin/behat --format=progress --profile=elasticsearch --no-interaction --colors
          else
            vendor/bin/behat --format=progress --profile=elasticsearch-no-legacy --no-interaction --colors
          fi

  phpunit-no-deprecations:
    name: PHPUnit (PHP ${{ matrix.php }}) (no deprecations)
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-alpine
      options: >-
        --tmpfs /tmp:exec
    strategy:
      matrix:
        php:
          - '7.3'
      fail-fast: false
    env:
      SYMFONY_DEPRECATIONS_HELPER: max[total]=5 # 5 deprecation notices from FOSUserBundle
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install system packages
        run: |
          apk add \
            unzip \
      - name: Install mongodb PHP extension
        run: |
          apk add $PHPIZE_DEPS
          pecl install mongodb-$EXT_MONGODB_VERSION
          docker-php-ext-enable mongodb
      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini
      - name: Install Composer
        run: wget -qO - https://raw.githubusercontent.com/composer/getcomposer.org/$COMPOSER_INSTALLER_COMMIT/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet
      - name: Install Symfony Flex
        run: |
          composer global require --prefer-dist --no-progress --no-suggest --ansi \
            symfony/flex
      - name: Update project dependencies
        run: |
          mkdir -p /tmp/api-platform/core/vendor
          ln -s /tmp/api-platform/core/vendor vendor
          composer update --no-progress --no-suggest --ansi
      - name: Clear test app cache
        run: |
          mkdir -p /tmp/api-platform/core/var
          ln -s /tmp/api-platform/core/var tests/Fixtures/app/var
          tests/Fixtures/app/console cache:clear --ansi
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --colors=always
        continue-on-error: true
