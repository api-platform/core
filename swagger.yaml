openapi: 3.0.2
info:
  title: 'My Dummy API'
  version: 0.0.0
  description: 'This is a test API.'
paths:
  /abstract_dummies:
    get:
      tags:
        - AbstractDummy
      operationId: getAbstractDummyCollection
      summary: 'Retrieves the collection of AbstractDummy resources.'
      responses:
        200:
          description: 'AbstractDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbstractDummy'
      parameters:
        -
          name: id
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  '/abstract_dummies/{id}':
    get:
      tags:
        - AbstractDummy
      operationId: getAbstractDummyItem
      summary: 'Retrieves a AbstractDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'AbstractDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/AbstractDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - AbstractDummy
      operationId: deleteAbstractDummyItem
      summary: 'Removes the AbstractDummy resource.'
      responses:
        204:
          description: 'AbstractDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /answers:
    get:
      tags:
        - Answer
      operationId: get_subresource_answerAnswerCollection
      summary: 'Retrieves the collection of Answer resources.'
      responses:
        200:
          description: 'Answer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer-foobar'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  '/answers/{id}':
    get:
      tags:
        - Answer
      operationId: getAnswerItem
      summary: 'Retrieves a Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Answer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            text/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Answer
      operationId: deleteAnswerItem
      summary: 'Removes the Answer resource.'
      responses:
        204:
          description: 'Answer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Answer
      operationId: putAnswerItem
      summary: 'Replaces the Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Answer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            text/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Answer'
          text/xml:
            schema:
              $ref: '#/components/schemas/Answer'
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          text/html:
            schema:
              $ref: '#/components/schemas/Answer'
        description: 'The updated Answer resource'
    patch:
      tags:
        - Answer
      operationId: patchAnswerItem
      summary: 'Updates the Answer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Answer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            text/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Answer'
          text/xml:
            schema:
              $ref: '#/components/schemas/Answer'
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          text/html:
            schema:
              $ref: '#/components/schemas/Answer'
        description: 'The updated Answer resource'
  '/answers/{id}/related_questions':
    get:
      tags:
        - Question
        - Answer
      operationId: api_answers_related_questions_get_subresource
      summary: 'Retrieves the collection of Question resources.'
      responses:
        200:
          description: 'Question collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/answers/{id}/related_questions/{relatedQuestions}/answer':
    get:
      tags:
        - Answer
        - Question
      operationId: api_answers_related_questions_answer_get_subresource
      summary: 'Retrieves a Answer resource.'
      responses:
        200:
          description: 'Answer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            text/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedQuestions
          in: path
          required: true
          schema:
            type: string
  '/api/custom-call/{id}':
    get:
      tags:
        - RelationEmbedder
      operationId: custom1RelationEmbedderItem
      summary: 'Retrieves a RelationEmbedder resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelationEmbedder resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
        404:
          description: 'Resource not found'
    put:
      tags:
        - RelationEmbedder
      operationId: custom2RelationEmbedderItem
      summary: 'Replaces the RelationEmbedder resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelationEmbedder resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          text/html:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
        description: 'The updated RelationEmbedder resource'
  /array_filter_validators:
    get:
      tags:
        - ArrayFilterValidator
      operationId: getArrayFilterValidatorCollection
      summary: 'Retrieves the collection of ArrayFilterValidator resources.'
      responses:
        200:
          description: 'ArrayFilterValidator collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArrayFilterValidator'
      parameters:
        -
          name: 'arrayRequired[]'
          in: query
          required: true
          schema:
            type: string
        -
          name: 'indexedArrayRequired[foo]'
          in: query
          required: true
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - ArrayFilterValidator
      operationId: postArrayFilterValidatorCollection
      summary: 'Creates a ArrayFilterValidator resource.'
      responses:
        201:
          description: 'ArrayFilterValidator resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/xml:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          text/xml:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          text/html:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
        description: 'The new ArrayFilterValidator resource'
  '/array_filter_validators/{id}':
    get:
      tags:
        - ArrayFilterValidator
      operationId: getArrayFilterValidatorItem
      summary: 'Retrieves a ArrayFilterValidator resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ArrayFilterValidator resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - ArrayFilterValidator
      operationId: deleteArrayFilterValidatorItem
      summary: 'Removes the ArrayFilterValidator resource.'
      responses:
        204:
          description: 'ArrayFilterValidator resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - ArrayFilterValidator
      operationId: putArrayFilterValidatorItem
      summary: 'Replaces the ArrayFilterValidator resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ArrayFilterValidator resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/xml:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          text/xml:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          text/html:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
        description: 'The updated ArrayFilterValidator resource'
    patch:
      tags:
        - ArrayFilterValidator
      operationId: patchArrayFilterValidatorItem
      summary: 'Updates the ArrayFilterValidator resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ArrayFilterValidator resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/ArrayFilterValidator'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/xml:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          text/xml:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          application/json:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
          text/html:
            schema:
              $ref: '#/components/schemas/ArrayFilterValidator'
        description: 'The updated ArrayFilterValidator resource'
  /circular_references:
    get:
      tags:
        - CircularReference
      operationId: getCircularReferenceCollection
      summary: 'Retrieves the collection of CircularReference resources.'
      responses:
        200:
          description: 'CircularReference collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CircularReference-circular'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CircularReference
      operationId: postCircularReferenceCollection
      summary: 'Creates a CircularReference resource.'
      responses:
        201:
          description: 'CircularReference resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/html:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/xml:
            schema:
              $ref: '#/components/schemas/CircularReference'
          text/xml:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          text/html:
            schema:
              $ref: '#/components/schemas/CircularReference'
        description: 'The new CircularReference resource'
  '/circular_references/{id}':
    get:
      tags:
        - CircularReference
      operationId: getCircularReferenceItem
      summary: 'Retrieves a CircularReference resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CircularReference resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/html:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CircularReference
      operationId: deleteCircularReferenceItem
      summary: 'Removes the CircularReference resource.'
      responses:
        204:
          description: 'CircularReference resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CircularReference
      operationId: putCircularReferenceItem
      summary: 'Replaces the CircularReference resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CircularReference resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/html:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/xml:
            schema:
              $ref: '#/components/schemas/CircularReference'
          text/xml:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          text/html:
            schema:
              $ref: '#/components/schemas/CircularReference'
        description: 'The updated CircularReference resource'
    patch:
      tags:
        - CircularReference
      operationId: patchCircularReferenceItem
      summary: 'Updates the CircularReference resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CircularReference resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/xml:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            application/json:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
            text/html:
              schema:
                $ref: '#/components/schemas/CircularReference-circular'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/xml:
            schema:
              $ref: '#/components/schemas/CircularReference'
          text/xml:
            schema:
              $ref: '#/components/schemas/CircularReference'
          application/json:
            schema:
              $ref: '#/components/schemas/CircularReference'
          text/html:
            schema:
              $ref: '#/components/schemas/CircularReference'
        description: 'The updated CircularReference resource'
  /composite_items:
    get:
      tags:
        - CompositeItem
      operationId: getCompositeItemCollection
      summary: 'Retrieves the collection of CompositeItem resources.'
      responses:
        200:
          description: 'CompositeItem collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeItem'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CompositeItem
      operationId: postCompositeItemCollection
      summary: 'Creates a CompositeItem resource.'
      responses:
        201:
          description: 'CompositeItem resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeItem'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeItem'
        description: 'The new CompositeItem resource'
  '/composite_items/{id}':
    get:
      tags:
        - CompositeItem
      operationId: getCompositeItemItem
      summary: 'Retrieves a CompositeItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeItem'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CompositeItem
      operationId: deleteCompositeItemItem
      summary: 'Removes the CompositeItem resource.'
      responses:
        204:
          description: 'CompositeItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CompositeItem
      operationId: putCompositeItemItem
      summary: 'Replaces the CompositeItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeItem'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeItem'
        description: 'The updated CompositeItem resource'
    patch:
      tags:
        - CompositeItem
      operationId: patchCompositeItemItem
      summary: 'Updates the CompositeItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeItem'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeItem'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeItem'
        description: 'The updated CompositeItem resource'
  /composite_labels:
    get:
      tags:
        - CompositeLabel
      operationId: getCompositeLabelCollection
      summary: 'Retrieves the collection of CompositeLabel resources.'
      responses:
        200:
          description: 'CompositeLabel collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeLabel'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CompositeLabel
      operationId: postCompositeLabelCollection
      summary: 'Creates a CompositeLabel resource.'
      responses:
        201:
          description: 'CompositeLabel resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
        description: 'The new CompositeLabel resource'
  '/composite_labels/{id}':
    get:
      tags:
        - CompositeLabel
      operationId: getCompositeLabelItem
      summary: 'Retrieves a CompositeLabel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeLabel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CompositeLabel
      operationId: deleteCompositeLabelItem
      summary: 'Removes the CompositeLabel resource.'
      responses:
        204:
          description: 'CompositeLabel resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CompositeLabel
      operationId: putCompositeLabelItem
      summary: 'Replaces the CompositeLabel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeLabel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
        description: 'The updated CompositeLabel resource'
    patch:
      tags:
        - CompositeLabel
      operationId: patchCompositeLabelItem
      summary: 'Updates the CompositeLabel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeLabel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeLabel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeLabel'
        description: 'The updated CompositeLabel resource'
  /composite_primitive_items:
    get:
      tags:
        - CompositePrimitiveItem
      operationId: getCompositePrimitiveItemCollection
      summary: 'Retrieves the collection of CompositePrimitiveItem resources.'
      responses:
        200:
          description: 'CompositePrimitiveItem collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositePrimitiveItem'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CompositePrimitiveItem
      operationId: postCompositePrimitiveItemCollection
      summary: 'Creates a CompositePrimitiveItem resource.'
      responses:
        201:
          description: 'CompositePrimitiveItem resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
        description: 'The new CompositePrimitiveItem resource'
  '/composite_primitive_items/{id}':
    get:
      tags:
        - CompositePrimitiveItem
      operationId: getCompositePrimitiveItemItem
      summary: 'Retrieves a CompositePrimitiveItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositePrimitiveItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CompositePrimitiveItem
      operationId: deleteCompositePrimitiveItemItem
      summary: 'Removes the CompositePrimitiveItem resource.'
      responses:
        204:
          description: 'CompositePrimitiveItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CompositePrimitiveItem
      operationId: putCompositePrimitiveItemItem
      summary: 'Replaces the CompositePrimitiveItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositePrimitiveItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
        description: 'The updated CompositePrimitiveItem resource'
    patch:
      tags:
        - CompositePrimitiveItem
      operationId: patchCompositePrimitiveItemItem
      summary: 'Updates the CompositePrimitiveItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositePrimitiveItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositePrimitiveItem'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositePrimitiveItem'
        description: 'The updated CompositePrimitiveItem resource'
  /composite_relations:
    get:
      tags:
        - CompositeRelation
      operationId: getCompositeRelationCollection
      summary: 'Retrieves the collection of CompositeRelation resources.'
      responses:
        200:
          description: 'CompositeRelation collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CompositeRelation'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CompositeRelation
      operationId: postCompositeRelationCollection
      summary: 'Creates a CompositeRelation resource.'
      responses:
        201:
          description: 'CompositeRelation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
        description: 'The new CompositeRelation resource'
  '/composite_relations/{id}':
    get:
      tags:
        - CompositeRelation
      operationId: getCompositeRelationItem
      summary: 'Retrieves a CompositeRelation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeRelation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CompositeRelation
      operationId: deleteCompositeRelationItem
      summary: 'Removes the CompositeRelation resource.'
      responses:
        204:
          description: 'CompositeRelation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CompositeRelation
      operationId: putCompositeRelationItem
      summary: 'Replaces the CompositeRelation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeRelation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
        description: 'The updated CompositeRelation resource'
    patch:
      tags:
        - CompositeRelation
      operationId: patchCompositeRelationItem
      summary: 'Updates the CompositeRelation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CompositeRelation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
            text/html:
              schema:
                $ref: '#/components/schemas/CompositeRelation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
          text/html:
            schema:
              $ref: '#/components/schemas/CompositeRelation'
        description: 'The updated CompositeRelation resource'
  /concrete_dummies:
    get:
      tags:
        - ConcreteDummy
      operationId: getConcreteDummyCollection
      summary: 'Retrieves the collection of ConcreteDummy resources.'
      responses:
        200:
          description: 'ConcreteDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcreteDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - ConcreteDummy
      operationId: postConcreteDummyCollection
      summary: 'Creates a ConcreteDummy resource.'
      responses:
        201:
          description: 'ConcreteDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
        description: 'The new ConcreteDummy resource'
  '/concrete_dummies/{id}':
    get:
      tags:
        - ConcreteDummy
      operationId: getConcreteDummyItem
      summary: 'Retrieves a ConcreteDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ConcreteDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - ConcreteDummy
      operationId: deleteConcreteDummyItem
      summary: 'Removes the ConcreteDummy resource.'
      responses:
        204:
          description: 'ConcreteDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - ConcreteDummy
      operationId: putConcreteDummyItem
      summary: 'Replaces the ConcreteDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ConcreteDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
        description: 'The updated ConcreteDummy resource'
    patch:
      tags:
        - ConcreteDummy
      operationId: patchConcreteDummyItem
      summary: 'Updates the ConcreteDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ConcreteDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/ConcreteDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/ConcreteDummy'
        description: 'The updated ConcreteDummy resource'
  /contain_non_resources:
    get:
      tags:
        - ContainNonResource
      operationId: getContainNonResourceCollection
      summary: 'Retrieves the collection of ContainNonResource resources.'
      responses:
        200:
          description: 'ContainNonResource collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContainNonResource'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - ContainNonResource
      operationId: postContainNonResourceCollection
      summary: 'Creates a ContainNonResource resource.'
      responses:
        201:
          description: 'ContainNonResource resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/html:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          text/html:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
        description: 'The new ContainNonResource resource'
  '/contain_non_resources/{id}':
    get:
      tags:
        - ContainNonResource
      operationId: getContainNonResourceItem
      summary: 'Retrieves a ContainNonResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ContainNonResource resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/html:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - ContainNonResource
      operationId: deleteContainNonResourceItem
      summary: 'Removes the ContainNonResource resource.'
      responses:
        204:
          description: 'ContainNonResource resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - ContainNonResource
      operationId: putContainNonResourceItem
      summary: 'Replaces the ContainNonResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ContainNonResource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/html:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          text/html:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
        description: 'The updated ContainNonResource resource'
    patch:
      tags:
        - ContainNonResource
      operationId: patchContainNonResourceItem
      summary: 'Updates the ContainNonResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ContainNonResource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
            text/html:
              schema:
                $ref: '#/components/schemas/ContainNonResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          application/json:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
          text/html:
            schema:
              $ref: '#/components/schemas/ContainNonResource'
        description: 'The updated ContainNonResource resource'
  /containers:
    get:
      tags:
        - Container
      operationId: getContainerCollection
      summary: 'Retrieves the collection of Container resources.'
      responses:
        200:
          description: 'Container collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Container
      operationId: postContainerCollection
      summary: 'Creates a Container resource.'
      responses:
        201:
          description: 'Container resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/xml:
              schema:
                $ref: '#/components/schemas/Container'
            text/xml:
              schema:
                $ref: '#/components/schemas/Container'
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
            text/html:
              schema:
                $ref: '#/components/schemas/Container'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/xml:
            schema:
              $ref: '#/components/schemas/Container'
          text/xml:
            schema:
              $ref: '#/components/schemas/Container'
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          text/html:
            schema:
              $ref: '#/components/schemas/Container'
        description: 'The new Container resource'
  '/containers/{id}':
    get:
      tags:
        - Container
      operationId: getContainerItem
      summary: 'Retrieves a Container resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Container resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/xml:
              schema:
                $ref: '#/components/schemas/Container'
            text/xml:
              schema:
                $ref: '#/components/schemas/Container'
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
            text/html:
              schema:
                $ref: '#/components/schemas/Container'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Container
      operationId: deleteContainerItem
      summary: 'Removes the Container resource.'
      responses:
        204:
          description: 'Container resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Container
      operationId: putContainerItem
      summary: 'Replaces the Container resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Container resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/xml:
              schema:
                $ref: '#/components/schemas/Container'
            text/xml:
              schema:
                $ref: '#/components/schemas/Container'
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
            text/html:
              schema:
                $ref: '#/components/schemas/Container'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/xml:
            schema:
              $ref: '#/components/schemas/Container'
          text/xml:
            schema:
              $ref: '#/components/schemas/Container'
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          text/html:
            schema:
              $ref: '#/components/schemas/Container'
        description: 'The updated Container resource'
    patch:
      tags:
        - Container
      operationId: patchContainerItem
      summary: 'Updates the Container resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Container resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Container'
            application/xml:
              schema:
                $ref: '#/components/schemas/Container'
            text/xml:
              schema:
                $ref: '#/components/schemas/Container'
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
            text/html:
              schema:
                $ref: '#/components/schemas/Container'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Container'
          application/xml:
            schema:
              $ref: '#/components/schemas/Container'
          text/xml:
            schema:
              $ref: '#/components/schemas/Container'
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
          text/html:
            schema:
              $ref: '#/components/schemas/Container'
        description: 'The updated Container resource'
  '/containers/{id}/nodes':
    get:
      tags:
        - Node
        - Container
      operationId: api_containers_nodes_get_subresource
      summary: 'Retrieves the collection of Node resources.'
      responses:
        200:
          description: 'Node collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /custom/denormalization:
    post:
      tags:
        - CustomActionDummy
      operationId: custom_denormalizationCustomActionDummyCollection
      summary: 'Creates a CustomActionDummy resource.'
      responses:
        201:
          description: 'CustomActionDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
        description: 'The new CustomActionDummy resource'
  '/custom/{id}/normalization':
    get:
      tags:
        - CustomActionDummy
      operationId: custom_normalizationCustomActionDummyItem
      summary: 'Retrieves a CustomActionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomActionDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
        404:
          description: 'Resource not found'
  /custom_action_collection_dummies:
    get:
      tags:
        - CustomActionDummy
      operationId: get_customCustomActionDummyCollection
      summary: 'Retrieves the collection of CustomActionDummy resources.'
      responses:
        200:
          description: 'CustomActionDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  '/custom_action_collection_dummies/{id}':
    get:
      tags:
        - CustomActionDummy
      operationId: get_customCustomActionDummyItem
      summary: 'Retrieves a CustomActionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomActionDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
        404:
          description: 'Resource not found'
  /custom_action_dummies:
    get:
      tags:
        - CustomActionDummy
      operationId: getCustomActionDummyCollection
      summary: 'Retrieves the collection of CustomActionDummy resources.'
      responses:
        200:
          description: 'CustomActionDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomActionDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  '/custom_action_dummies/{id}':
    get:
      tags:
        - CustomActionDummy
      operationId: getCustomActionDummyItem
      summary: 'Retrieves a CustomActionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomActionDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
        404:
          description: 'Resource not found'
  /custom_generated_identifiers:
    get:
      tags:
        - CustomGeneratedIdentifier
      operationId: getCustomGeneratedIdentifierCollection
      summary: 'Retrieves the collection of CustomGeneratedIdentifier resources.'
      responses:
        200:
          description: 'CustomGeneratedIdentifier collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomGeneratedIdentifier'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CustomGeneratedIdentifier
      operationId: postCustomGeneratedIdentifierCollection
      summary: 'Creates a CustomGeneratedIdentifier resource.'
      responses:
        201:
          description: 'CustomGeneratedIdentifier resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
        description: 'The new CustomGeneratedIdentifier resource'
  '/custom_generated_identifiers/{id}':
    get:
      tags:
        - CustomGeneratedIdentifier
      operationId: getCustomGeneratedIdentifierItem
      summary: 'Retrieves a CustomGeneratedIdentifier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomGeneratedIdentifier resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CustomGeneratedIdentifier
      operationId: deleteCustomGeneratedIdentifierItem
      summary: 'Removes the CustomGeneratedIdentifier resource.'
      responses:
        204:
          description: 'CustomGeneratedIdentifier resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CustomGeneratedIdentifier
      operationId: putCustomGeneratedIdentifierItem
      summary: 'Replaces the CustomGeneratedIdentifier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomGeneratedIdentifier resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
        description: 'The updated CustomGeneratedIdentifier resource'
    patch:
      tags:
        - CustomGeneratedIdentifier
      operationId: patchCustomGeneratedIdentifierItem
      summary: 'Updates the CustomGeneratedIdentifier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomGeneratedIdentifier resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomGeneratedIdentifier'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomGeneratedIdentifier'
        description: 'The updated CustomGeneratedIdentifier resource'
  /custom_identifier_dummies:
    get:
      tags:
        - CustomIdentifierDummy
      operationId: getCustomIdentifierDummyCollection
      summary: 'Retrieves the collection of CustomIdentifierDummy resources.'
      responses:
        200:
          description: 'CustomIdentifierDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomIdentifierDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CustomIdentifierDummy
      operationId: postCustomIdentifierDummyCollection
      summary: 'Creates a CustomIdentifierDummy resource.'
      responses:
        201:
          description: 'CustomIdentifierDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
        description: 'The new CustomIdentifierDummy resource'
  '/custom_identifier_dummies/{id}':
    get:
      tags:
        - CustomIdentifierDummy
      operationId: getCustomIdentifierDummyItem
      summary: 'Retrieves a CustomIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomIdentifierDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CustomIdentifierDummy
      operationId: deleteCustomIdentifierDummyItem
      summary: 'Removes the CustomIdentifierDummy resource.'
      responses:
        204:
          description: 'CustomIdentifierDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CustomIdentifierDummy
      operationId: putCustomIdentifierDummyItem
      summary: 'Replaces the CustomIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
        description: 'The updated CustomIdentifierDummy resource'
    patch:
      tags:
        - CustomIdentifierDummy
      operationId: patchCustomIdentifierDummyItem
      summary: 'Updates the CustomIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomIdentifierDummy'
        description: 'The updated CustomIdentifierDummy resource'
  /custom_normalized_dummies:
    get:
      tags:
        - CustomNormalizedDummy
      operationId: getCustomNormalizedDummyCollection
      summary: 'Retrieves the collection of CustomNormalizedDummy resources.'
      responses:
        200:
          description: 'CustomNormalizedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomNormalizedDummy-output'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CustomNormalizedDummy
      operationId: postCustomNormalizedDummyCollection
      summary: 'Creates a CustomNormalizedDummy resource.'
      responses:
        201:
          description: 'CustomNormalizedDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
        description: 'The new CustomNormalizedDummy resource'
  '/custom_normalized_dummies/{id}':
    get:
      tags:
        - CustomNormalizedDummy
      operationId: getCustomNormalizedDummyItem
      summary: 'Retrieves a CustomNormalizedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomNormalizedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CustomNormalizedDummy
      operationId: deleteCustomNormalizedDummyItem
      summary: 'Removes the CustomNormalizedDummy resource.'
      responses:
        204:
          description: 'CustomNormalizedDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CustomNormalizedDummy
      operationId: putCustomNormalizedDummyItem
      summary: 'Replaces the CustomNormalizedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomNormalizedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
        description: 'The updated CustomNormalizedDummy resource'
    patch:
      tags:
        - CustomNormalizedDummy
      operationId: patchCustomNormalizedDummyItem
      summary: 'Updates the CustomNormalizedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomNormalizedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomNormalizedDummy-output'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomNormalizedDummy-input'
        description: 'The updated CustomNormalizedDummy resource'
  /custom_writable_identifier_dummies:
    get:
      tags:
        - CustomWritableIdentifierDummy
      operationId: getCustomWritableIdentifierDummyCollection
      summary: 'Retrieves the collection of CustomWritableIdentifierDummy resources.'
      responses:
        200:
          description: 'CustomWritableIdentifierDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomWritableIdentifierDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - CustomWritableIdentifierDummy
      operationId: postCustomWritableIdentifierDummyCollection
      summary: 'Creates a CustomWritableIdentifierDummy resource.'
      responses:
        201:
          description: 'CustomWritableIdentifierDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        description: 'The new CustomWritableIdentifierDummy resource'
  '/custom_writable_identifier_dummies/{id}':
    get:
      tags:
        - CustomWritableIdentifierDummy
      operationId: getCustomWritableIdentifierDummyItem
      summary: 'Retrieves a CustomWritableIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomWritableIdentifierDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - CustomWritableIdentifierDummy
      operationId: deleteCustomWritableIdentifierDummyItem
      summary: 'Removes the CustomWritableIdentifierDummy resource.'
      responses:
        204:
          description: 'CustomWritableIdentifierDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - CustomWritableIdentifierDummy
      operationId: putCustomWritableIdentifierDummyItem
      summary: 'Replaces the CustomWritableIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomWritableIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        description: 'The updated CustomWritableIdentifierDummy resource'
    patch:
      tags:
        - CustomWritableIdentifierDummy
      operationId: patchCustomWritableIdentifierDummyItem
      summary: 'Updates the CustomWritableIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomWritableIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomWritableIdentifierDummy'
        description: 'The updated CustomWritableIdentifierDummy resource'
  /deprecated_resources:
    get:
      tags:
        - DeprecatedResource
      operationId: getDeprecatedResourceCollection
      deprecated: true
      summary: 'Retrieves the collection of DeprecatedResource resources.'
      responses:
        200:
          description: 'DeprecatedResource collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeprecatedResource'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DeprecatedResource
      operationId: postDeprecatedResourceCollection
      deprecated: true
      summary: 'Creates a DeprecatedResource resource.'
      responses:
        201:
          description: 'DeprecatedResource resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/html:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          text/html:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
        description: 'The new DeprecatedResource resource'
  '/deprecated_resources/{id}':
    get:
      tags:
        - DeprecatedResource
      operationId: getDeprecatedResourceItem
      deprecated: true
      summary: 'Retrieves a DeprecatedResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DeprecatedResource resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/html:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DeprecatedResource
      operationId: deleteDeprecatedResourceItem
      deprecated: true
      summary: 'Removes the DeprecatedResource resource.'
      responses:
        204:
          description: 'DeprecatedResource resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DeprecatedResource
      operationId: putDeprecatedResourceItem
      deprecated: true
      summary: 'Replaces the DeprecatedResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DeprecatedResource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/html:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          text/html:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
        description: 'The updated DeprecatedResource resource'
    patch:
      tags:
        - DeprecatedResource
      operationId: patchDeprecatedResourceItem
      deprecated: true
      summary: 'Updates the DeprecatedResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DeprecatedResource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            application/json:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
            text/html:
              schema:
                $ref: '#/components/schemas/DeprecatedResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          application/json:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
          text/html:
            schema:
              $ref: '#/components/schemas/DeprecatedResource'
        description: 'The updated DeprecatedResource resource'
  /dummies:
    get:
      tags:
        - Dummy
      operationId: getDummyCollection
      summary: 'Retrieves the collection of Dummy resources.'
      responses:
        200:
          description: 'Dummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dummy'
      parameters:
        -
          name: dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: relatedDummy.embeddedDummy.dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'relatedDummy.name[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'dummyBoolean[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'relatedDummy[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: dummyFloat
          in: query
          required: false
          schema:
            type: number
        -
          name: 'dummyFloat[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
          style: form
          explode: true
        -
          name: dummyPrice
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.symfony]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[dummyDate]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: alias
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummy.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: relatedDummies
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummies[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dummy
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummies.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'properties[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Dummy
      operationId: postDummyCollection
      summary: 'Creates a Dummy resource.'
      responses:
        201:
          description: 'Dummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                $ref: '#/components/schemas/Dummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/json:
            schema:
              $ref: '#/components/schemas/Dummy'
          text/html:
            schema:
              $ref: '#/components/schemas/Dummy'
        description: 'The new Dummy resource'
  '/dummies/{id}':
    get:
      tags:
        - Dummy
      operationId: getDummyItem
      summary: 'Retrieves a Dummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Dummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                $ref: '#/components/schemas/Dummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Dummy
      operationId: deleteDummyItem
      summary: 'Removes the Dummy resource.'
      responses:
        204:
          description: 'Dummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Dummy
      operationId: putDummyItem
      summary: 'Replaces the Dummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Dummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                $ref: '#/components/schemas/Dummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/json:
            schema:
              $ref: '#/components/schemas/Dummy'
          text/html:
            schema:
              $ref: '#/components/schemas/Dummy'
        description: 'The updated Dummy resource'
    patch:
      tags:
        - Dummy
      operationId: patchDummyItem
      summary: 'Updates the Dummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Dummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                $ref: '#/components/schemas/Dummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/Dummy'
          application/json:
            schema:
              $ref: '#/components/schemas/Dummy'
          text/html:
            schema:
              $ref: '#/components/schemas/Dummy'
        description: 'The updated Dummy resource'
  '/dummies/{id}/related_dummies':
    get:
      tags:
        - RelatedDummy
        - Dummy
      operationId: api_dummies_related_dummies_get_subresource
      summary: 'Retrieves the collection of RelatedDummy resources.'
      responses:
        200:
          description: 'RelatedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/dummies/{id}/related_dummies/{relatedDummies}':
    get:
      tags:
        - RelatedDummy
      operationId: api_dummies_related_dummies_item_get_subresource
      summary: 'Retrieves a RelatedDummy resource.'
      responses:
        200:
          description: 'RelatedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/dummies/{id}/related_dummies/{relatedDummies}/related_to_dummy_friends':
    get:
      tags:
        - RelatedToDummyFriend
        - RelatedDummy
      operationId: api_dummies_related_dummies_item_related_to_dummy_friends_get_subresource
      summary: 'Retrieves the collection of RelatedToDummyFriend resources.'
      responses:
        200:
          description: 'RelatedToDummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
  '/dummies/{id}/related_dummies/{relatedDummies}/third_level':
    get:
      tags:
        - ThirdLevel
        - RelatedDummy
      operationId: api_dummies_related_dummies_item_third_level_get_subresource
      summary: 'Retrieves a ThirdLevel resource.'
      responses:
        200:
          description: 'ThirdLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
  '/dummies/{id}/related_dummies/{relatedDummies}/third_level/fourth_level':
    get:
      tags:
        - FourthLevel
        - ThirdLevel
      operationId: api_dummies_related_dummies_item_third_level_fourth_level_get_subresource
      summary: 'Retrieves a FourthLevel resource.'
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
  /dummy_aggregate_offers:
    get:
      tags:
        - DummyAggregateOffer
      operationId: getDummyAggregateOfferCollection
      summary: 'Retrieves the collection of DummyAggregateOffer resources.'
      responses:
        200:
          description: 'DummyAggregateOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyAggregateOffer
      operationId: postDummyAggregateOfferCollection
      summary: 'Creates a DummyAggregateOffer resource.'
      responses:
        201:
          description: 'DummyAggregateOffer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
        description: 'The new DummyAggregateOffer resource'
  '/dummy_aggregate_offers/{id}':
    get:
      tags:
        - DummyAggregateOffer
      operationId: getDummyAggregateOfferItem
      summary: 'Retrieves a DummyAggregateOffer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyAggregateOffer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyAggregateOffer
      operationId: deleteDummyAggregateOfferItem
      summary: 'Removes the DummyAggregateOffer resource.'
      responses:
        204:
          description: 'DummyAggregateOffer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyAggregateOffer
      operationId: putDummyAggregateOfferItem
      summary: 'Replaces the DummyAggregateOffer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyAggregateOffer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
        description: 'The updated DummyAggregateOffer resource'
    patch:
      tags:
        - DummyAggregateOffer
      operationId: patchDummyAggregateOfferItem
      summary: 'Updates the DummyAggregateOffer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyAggregateOffer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyAggregateOffer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyAggregateOffer'
        description: 'The updated DummyAggregateOffer resource'
  '/dummy_aggregate_offers/{id}/offers':
    get:
      tags:
        - DummyOffer
        - DummyAggregateOffer
      operationId: api_dummy_aggregate_offers_offers_get_subresource
      summary: 'Retrieves the collection of DummyOffer resources.'
      responses:
        200:
          description: 'DummyOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /dummy_car_colors:
    get:
      tags:
        - DummyCarColor
      operationId: getDummyCarColorCollection
      summary: 'Retrieves the collection of DummyCarColor resources.'
      responses:
        200:
          description: 'DummyCarColor collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCarColor'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyCarColor
      operationId: postDummyCarColorCollection
      summary: 'Creates a DummyCarColor resource.'
      responses:
        201:
          description: 'DummyCarColor resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
        description: 'The new DummyCarColor resource'
  '/dummy_car_colors/{id}':
    get:
      tags:
        - DummyCarColor
      operationId: getDummyCarColorItem
      summary: 'Retrieves a DummyCarColor resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCarColor resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyCarColor
      operationId: deleteDummyCarColorItem
      summary: 'Removes the DummyCarColor resource.'
      responses:
        204:
          description: 'DummyCarColor resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyCarColor
      operationId: putDummyCarColorItem
      summary: 'Replaces the DummyCarColor resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCarColor resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
        description: 'The updated DummyCarColor resource'
    patch:
      tags:
        - DummyCarColor
      operationId: patchDummyCarColorItem
      summary: 'Updates the DummyCarColor resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCarColor resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCarColor'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCarColor'
        description: 'The updated DummyCarColor resource'
  /dummy_cars:
    get:
      tags:
        - DummyCar
      operationId: getDummyCarCollection
      summary: 'Retrieves the collection of DummyCar resources.'
      responses:
        200:
          description: 'DummyCar collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCar-colors'
      parameters:
        -
          name: 'availableAt[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableAt[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableAt[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableAt[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: canSell
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'foobar[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'foobargroups[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'foobargroups_override[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: colors.prop
          in: query
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyCar
      operationId: postDummyCarCollection
      summary: 'Creates a DummyCar resource.'
      responses:
        201:
          description: 'DummyCar resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCar'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCar'
        description: 'The new DummyCar resource'
  '/dummy_cars/{id}':
    get:
      tags: []
      operationId: getDummyCarItem
      summary: 'Retrieves a DummyCar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCar resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
        404:
          description: 'Resource not found'
    put:
      tags:
        - DummyCar
      operationId: putDummyCarItem
      summary: 'Replaces the DummyCar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCar resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCar-colors'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCar'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCar'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCar'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCar'
        description: 'The updated DummyCar resource'
    delete:
      tags:
        - DummyCar
      operationId: deleteDummyCarItem
      summary: 'Removes the DummyCar resource.'
      responses:
        204:
          description: 'DummyCar resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /dummy_custom_formats:
    get:
      tags:
        - DummyCustomFormat
      operationId: getDummyCustomFormatCollection
      summary: 'Retrieves the collection of DummyCustomFormat resources.'
      responses:
        200:
          description: 'DummyCustomFormat collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyCustomFormat'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyCustomFormat
      operationId: postDummyCustomFormatCollection
      summary: 'Creates a DummyCustomFormat resource.'
      responses:
        201:
          description: 'DummyCustomFormat resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
        description: 'The new DummyCustomFormat resource'
  '/dummy_custom_formats/{id}':
    get:
      tags:
        - DummyCustomFormat
      operationId: getDummyCustomFormatItem
      summary: 'Retrieves a DummyCustomFormat resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCustomFormat resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyCustomFormat
      operationId: deleteDummyCustomFormatItem
      summary: 'Removes the DummyCustomFormat resource.'
      responses:
        204:
          description: 'DummyCustomFormat resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyCustomFormat
      operationId: putDummyCustomFormatItem
      summary: 'Replaces the DummyCustomFormat resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCustomFormat resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
        description: 'The updated DummyCustomFormat resource'
    patch:
      tags:
        - DummyCustomFormat
      operationId: patchDummyCustomFormatItem
      summary: 'Updates the DummyCustomFormat resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyCustomFormat resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyCustomFormat'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyCustomFormat'
        description: 'The updated DummyCustomFormat resource'
  /dummy_dates:
    get:
      tags:
        - DummyDate
      operationId: getDummyDateCollection
      summary: 'Retrieves the collection of DummyDate resources.'
      responses:
        200:
          description: 'DummyDate collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyDate'
      parameters:
        -
          name: 'dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyDate
      operationId: postDummyDateCollection
      summary: 'Creates a DummyDate resource.'
      responses:
        201:
          description: 'DummyDate resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyDate'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyDate'
        description: 'The new DummyDate resource'
  '/dummy_dates/{id}':
    get:
      tags:
        - DummyDate
      operationId: getDummyDateItem
      summary: 'Retrieves a DummyDate resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyDate resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyDate'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyDate
      operationId: deleteDummyDateItem
      summary: 'Removes the DummyDate resource.'
      responses:
        204:
          description: 'DummyDate resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyDate
      operationId: putDummyDateItem
      summary: 'Replaces the DummyDate resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyDate resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyDate'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyDate'
        description: 'The updated DummyDate resource'
    patch:
      tags:
        - DummyDate
      operationId: patchDummyDateItem
      summary: 'Updates the DummyDate resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyDate resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyDate'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyDate'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyDate'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyDate'
        description: 'The updated DummyDate resource'
  /dummy_entity_with_constructors:
    get:
      tags:
        - DummyEntityWithConstructor
      operationId: getDummyEntityWithConstructorCollection
      summary: 'Retrieves the collection of DummyEntityWithConstructor resources.'
      responses:
        200:
          description: 'DummyEntityWithConstructor collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyEntityWithConstructor'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyEntityWithConstructor
      operationId: postDummyEntityWithConstructorCollection
      summary: 'Creates a DummyEntityWithConstructor resource.'
      responses:
        201:
          description: 'DummyEntityWithConstructor resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor'
        description: 'The new DummyEntityWithConstructor resource'
  '/dummy_entity_with_constructors/{id}':
    get:
      tags:
        - DummyEntityWithConstructor
      operationId: getDummyEntityWithConstructorItem
      summary: 'Retrieves a DummyEntityWithConstructor resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyEntityWithConstructor resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
        404:
          description: 'Resource not found'
    put:
      tags:
        - DummyEntityWithConstructor
      operationId: putDummyEntityWithConstructorItem
      summary: 'Replaces the DummyEntityWithConstructor resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyEntityWithConstructor resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyEntityWithConstructor'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyEntityWithConstructor-put'
        description: 'The updated DummyEntityWithConstructor resource'
  /dummy_friends:
    get:
      tags:
        - DummyFriend
      operationId: getDummyFriendCollection
      summary: 'Retrieves the collection of DummyFriend resources.'
      responses:
        200:
          description: 'DummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyFriend'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyFriend
      operationId: postDummyFriendCollection
      summary: 'Creates a DummyFriend resource.'
      responses:
        201:
          description: 'DummyFriend resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyFriend'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyFriend'
        description: 'The new DummyFriend resource'
  '/dummy_friends/{id}':
    get:
      tags:
        - DummyFriend
      operationId: getDummyFriendItem
      summary: 'Retrieves a DummyFriend resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyFriend resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyFriend'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyFriend
      operationId: deleteDummyFriendItem
      summary: 'Removes the DummyFriend resource.'
      responses:
        204:
          description: 'DummyFriend resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyFriend
      operationId: putDummyFriendItem
      summary: 'Replaces the DummyFriend resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyFriend resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyFriend'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyFriend'
        description: 'The updated DummyFriend resource'
    patch:
      tags:
        - DummyFriend
      operationId: patchDummyFriendItem
      summary: 'Updates the DummyFriend resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyFriend resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyFriend'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyFriend'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyFriend'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyFriend'
        description: 'The updated DummyFriend resource'
  /dummy_groups:
    get:
      tags:
        - DummyGroup
      operationId: getDummyGroupCollection
      summary: 'Retrieves the collection of DummyGroup resources.'
      responses:
        200:
          description: 'DummyGroup collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyGroup-dummy_read'
      parameters:
        -
          name: 'groups[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'override_groups[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'whitelisted_groups[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'override_whitelisted_groups[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyGroup
      operationId: postDummyGroupCollection
      summary: 'Creates a DummyGroup resource.'
      responses:
        201:
          description: 'DummyGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
        description: 'The new DummyGroup resource'
  '/dummy_groups/{id}':
    get:
      tags:
        - DummyGroup
      operationId: getDummyGroupItem
      summary: 'Retrieves a DummyGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyGroup
      operationId: deleteDummyGroupItem
      summary: 'Removes the DummyGroup resource.'
      responses:
        204:
          description: 'DummyGroup resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyGroup
      operationId: putDummyGroupItem
      summary: 'Replaces the DummyGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
        description: 'The updated DummyGroup resource'
    patch:
      tags:
        - DummyGroup
      operationId: patchDummyGroupItem
      summary: 'Updates the DummyGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyGroup-dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyGroup-dummy_write'
        description: 'The updated DummyGroup resource'
  /dummy_immutable_dates:
    get:
      tags:
        - DummyImmutableDate
      operationId: getDummyImmutableDateCollection
      summary: 'Retrieves the collection of DummyImmutableDate resources.'
      responses:
        200:
          description: 'DummyImmutableDate collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyImmutableDate'
      parameters:
        -
          name: 'dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyImmutableDate
      operationId: postDummyImmutableDateCollection
      summary: 'Creates a DummyImmutableDate resource.'
      responses:
        201:
          description: 'DummyImmutableDate resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
        description: 'The new DummyImmutableDate resource'
  '/dummy_immutable_dates/{id}':
    get:
      tags:
        - DummyImmutableDate
      operationId: getDummyImmutableDateItem
      summary: 'Retrieves a DummyImmutableDate resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyImmutableDate resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyImmutableDate
      operationId: deleteDummyImmutableDateItem
      summary: 'Removes the DummyImmutableDate resource.'
      responses:
        204:
          description: 'DummyImmutableDate resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyImmutableDate
      operationId: putDummyImmutableDateItem
      summary: 'Replaces the DummyImmutableDate resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyImmutableDate resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
        description: 'The updated DummyImmutableDate resource'
    patch:
      tags:
        - DummyImmutableDate
      operationId: patchDummyImmutableDateItem
      summary: 'Updates the DummyImmutableDate resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyImmutableDate resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyImmutableDate'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyImmutableDate'
        description: 'The updated DummyImmutableDate resource'
  /dummy_input_outputs:
    get:
      tags:
        - DummyInputOutput
      operationId: getDummyInputOutputCollection
      summary: 'Retrieves the collection of DummyInputOutput resources.'
      responses:
        200:
          description: 'DummyInputOutput collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInputOutput'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyInputOutput
      operationId: postDummyInputOutputCollection
      summary: 'Creates a DummyInputOutput resource.'
      responses:
        201:
          description: 'DummyInputOutput resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
        description: 'The new DummyInputOutput resource'
  '/dummy_input_outputs/{id}':
    get:
      tags:
        - DummyInputOutput
      operationId: getDummyInputOutputItem
      summary: 'Retrieves a DummyInputOutput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyInputOutput resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyInputOutput
      operationId: deleteDummyInputOutputItem
      summary: 'Removes the DummyInputOutput resource.'
      responses:
        204:
          description: 'DummyInputOutput resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyInputOutput
      operationId: putDummyInputOutputItem
      summary: 'Replaces the DummyInputOutput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyInputOutput resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
        description: 'The updated DummyInputOutput resource'
    patch:
      tags:
        - DummyInputOutput
      operationId: patchDummyInputOutputItem
      summary: 'Updates the DummyInputOutput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyInputOutput resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInputOutput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyInputOutput'
        description: 'The updated DummyInputOutput resource'
  /dummy_inputs:
    get:
      tags:
        - DummyInput
      operationId: getDummyInputCollection
      summary: 'Retrieves the collection of DummyInput resources.'
      responses:
        200:
          description: 'DummyInput collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyInput'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyInput
      operationId: postDummyInputCollection
      summary: 'Creates a DummyInput resource.'
      responses:
        201:
          description: 'DummyInput resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyInput'
        description: 'The new DummyInput resource'
  '/dummy_inputs/{id}':
    get:
      tags:
        - DummyInput
      operationId: getDummyInputItem
      summary: 'Retrieves a DummyInput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyInput resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInput'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyInput
      operationId: deleteDummyInputItem
      summary: 'Removes the DummyInput resource.'
      responses:
        204:
          description: 'DummyInput resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyInput
      operationId: putDummyInputItem
      summary: 'Replaces the DummyInput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyInput resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyInput'
        description: 'The updated DummyInput resource'
    patch:
      tags:
        - DummyInput
      operationId: patchDummyInputItem
      summary: 'Updates the DummyInput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyInput resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyInput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyInput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyInput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyInput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyInput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyInput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyInput'
        description: 'The updated DummyInput resource'
  /dummy_mercures:
    get:
      tags:
        - DummyMercure
      operationId: getDummyMercureCollection
      summary: 'Retrieves the collection of DummyMercure resources.'
      responses:
        200:
          description: 'DummyMercure collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyMercure'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyMercure
      operationId: postDummyMercureCollection
      summary: 'Creates a DummyMercure resource.'
      responses:
        201:
          description: 'DummyMercure resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyMercure'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyMercure'
        description: 'The new DummyMercure resource'
  '/dummy_mercures/{id}':
    get:
      tags:
        - DummyMercure
      operationId: getDummyMercureItem
      summary: 'Retrieves a DummyMercure resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyMercure resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyMercure'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyMercure
      operationId: deleteDummyMercureItem
      summary: 'Removes the DummyMercure resource.'
      responses:
        204:
          description: 'DummyMercure resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyMercure
      operationId: putDummyMercureItem
      summary: 'Replaces the DummyMercure resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyMercure resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyMercure'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyMercure'
        description: 'The updated DummyMercure resource'
    patch:
      tags:
        - DummyMercure
      operationId: patchDummyMercureItem
      summary: 'Updates the DummyMercure resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyMercure resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyMercure'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyMercure'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyMercure'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyMercure'
        description: 'The updated DummyMercure resource'
  /dummy_offers:
    get:
      tags:
        - DummyOffer
      operationId: getDummyOfferCollection
      summary: 'Retrieves the collection of DummyOffer resources.'
      responses:
        200:
          description: 'DummyOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyOffer
      operationId: postDummyOfferCollection
      summary: 'Creates a DummyOffer resource.'
      responses:
        201:
          description: 'DummyOffer resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOffer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyOffer'
        description: 'The new DummyOffer resource'
  '/dummy_offers/{id}':
    get:
      tags:
        - DummyOffer
      operationId: getDummyOfferItem
      summary: 'Retrieves a DummyOffer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyOffer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOffer'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyOffer
      operationId: deleteDummyOfferItem
      summary: 'Removes the DummyOffer resource.'
      responses:
        204:
          description: 'DummyOffer resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyOffer
      operationId: putDummyOfferItem
      summary: 'Replaces the DummyOffer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyOffer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOffer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyOffer'
        description: 'The updated DummyOffer resource'
    patch:
      tags:
        - DummyOffer
      operationId: patchDummyOfferItem
      summary: 'Updates the DummyOffer resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyOffer resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOffer'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyOffer'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyOffer'
        description: 'The updated DummyOffer resource'
  /dummy_outputs:
    get:
      tags:
        - DummyOutput
      operationId: getDummyOutputCollection
      summary: 'Retrieves the collection of DummyOutput resources.'
      responses:
        200:
          description: 'DummyOutput collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOutput'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyOutput
      operationId: postDummyOutputCollection
      summary: 'Creates a DummyOutput resource.'
      responses:
        201:
          description: 'DummyOutput resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOutput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyOutput'
        description: 'The new DummyOutput resource'
  '/dummy_outputs/{id}':
    get:
      tags:
        - DummyOutput
      operationId: getDummyOutputItem
      summary: 'Retrieves a DummyOutput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyOutput resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOutput'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyOutput
      operationId: deleteDummyOutputItem
      summary: 'Removes the DummyOutput resource.'
      responses:
        204:
          description: 'DummyOutput resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyOutput
      operationId: putDummyOutputItem
      summary: 'Replaces the DummyOutput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyOutput resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOutput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyOutput'
        description: 'The updated DummyOutput resource'
    patch:
      tags:
        - DummyOutput
      operationId: patchDummyOutputItem
      summary: 'Updates the DummyOutput resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyOutput resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyOutput'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyOutput'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyOutput'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyOutput'
        description: 'The updated DummyOutput resource'
  /dummy_products:
    get:
      tags:
        - DummyProduct
      operationId: getDummyProductCollection
      summary: 'Retrieves the collection of DummyProduct resources.'
      responses:
        200:
          description: 'DummyProduct collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyProduct
      operationId: postDummyProductCollection
      summary: 'Creates a DummyProduct resource.'
      responses:
        201:
          description: 'DummyProduct resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProduct'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyProduct'
        description: 'The new DummyProduct resource'
  '/dummy_products/{id}':
    get:
      tags:
        - DummyProduct
      operationId: getDummyProductItem
      summary: 'Retrieves a DummyProduct resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyProduct resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProduct'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyProduct
      operationId: deleteDummyProductItem
      summary: 'Removes the DummyProduct resource.'
      responses:
        204:
          description: 'DummyProduct resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyProduct
      operationId: putDummyProductItem
      summary: 'Replaces the DummyProduct resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyProduct resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProduct'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyProduct'
        description: 'The updated DummyProduct resource'
    patch:
      tags:
        - DummyProduct
      operationId: patchDummyProductItem
      summary: 'Updates the DummyProduct resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyProduct resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProduct'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProduct'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyProduct'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyProduct'
        description: 'The updated DummyProduct resource'
  '/dummy_products/{id}/offers':
    get:
      tags:
        - DummyAggregateOffer
        - DummyProduct
      operationId: api_dummy_products_offers_get_subresource
      summary: 'Retrieves the collection of DummyAggregateOffer resources.'
      responses:
        200:
          description: 'DummyAggregateOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/dummy_products/{id}/offers/{offers}/offers':
    get:
      tags:
        - DummyOffer
        - DummyAggregateOffer
      operationId: api_dummy_products_offers_offers_get_subresource
      summary: 'Retrieves the collection of DummyOffer resources.'
      responses:
        200:
          description: 'DummyOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: offers
          in: path
          required: true
          schema:
            type: string
  '/dummy_products/{id}/related_products':
    get:
      tags:
        - DummyProduct
      operationId: api_dummy_products_related_products_get_subresource
      summary: 'Retrieves the collection of DummyProduct resources.'
      responses:
        200:
          description: 'DummyProduct collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProduct'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/dummy_products/{id}/related_products/{relatedProducts}/offers':
    get:
      tags:
        - DummyAggregateOffer
        - DummyProduct
      operationId: api_dummy_products_related_products_offers_get_subresource
      summary: 'Retrieves the collection of DummyAggregateOffer resources.'
      responses:
        200:
          description: 'DummyAggregateOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyAggregateOffer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedProducts
          in: path
          required: true
          schema:
            type: string
  '/dummy_products/{id}/related_products/{relatedProducts}/offers/{offers}/offers':
    get:
      tags:
        - DummyOffer
        - DummyAggregateOffer
      operationId: api_dummy_products_related_products_offers_offers_get_subresource
      summary: 'Retrieves the collection of DummyOffer resources.'
      responses:
        200:
          description: 'DummyOffer collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyOffer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedProducts
          in: path
          required: true
          schema:
            type: string
        -
          name: offers
          in: path
          required: true
          schema:
            type: string
  /dummy_properties:
    get:
      tags:
        - DummyProperty
      operationId: getDummyPropertyCollection
      summary: 'Retrieves the collection of DummyProperty resources.'
      responses:
        200:
          description: 'DummyProperty collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyProperty-dummy_read'
      parameters:
        -
          name: 'properties[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'whitelisted_properties[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'whitelisted_nested_properties[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyProperty
      operationId: postDummyPropertyCollection
      summary: 'Creates a DummyProperty resource.'
      responses:
        201:
          description: 'DummyProperty resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
        description: 'The new DummyProperty resource'
  '/dummy_properties/{id}':
    get:
      tags:
        - DummyProperty
      operationId: getDummyPropertyItem
      summary: 'Retrieves a DummyProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyProperty resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyProperty
      operationId: deleteDummyPropertyItem
      summary: 'Removes the DummyProperty resource.'
      responses:
        204:
          description: 'DummyProperty resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyProperty
      operationId: putDummyPropertyItem
      summary: 'Replaces the DummyProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
        description: 'The updated DummyProperty resource'
    patch:
      tags:
        - DummyProperty
      operationId: patchDummyPropertyItem
      summary: 'Updates the DummyProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyProperty-dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyProperty-dummy_write'
        description: 'The updated DummyProperty resource'
  /dummy_table_inheritance_children:
    get:
      tags:
        - DummyTableInheritanceChild
      operationId: getDummyTableInheritanceChildCollection
      summary: 'Retrieves the collection of DummyTableInheritanceChild resources.'
      responses:
        200:
          description: 'DummyTableInheritanceChild collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceChild'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyTableInheritanceChild
      operationId: postDummyTableInheritanceChildCollection
      summary: 'Creates a DummyTableInheritanceChild resource.'
      responses:
        201:
          description: 'DummyTableInheritanceChild resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
        description: 'The new DummyTableInheritanceChild resource'
  '/dummy_table_inheritance_children/{id}':
    get:
      tags:
        - DummyTableInheritanceChild
      operationId: getDummyTableInheritanceChildItem
      summary: 'Retrieves a DummyTableInheritanceChild resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceChild resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyTableInheritanceChild
      operationId: deleteDummyTableInheritanceChildItem
      summary: 'Removes the DummyTableInheritanceChild resource.'
      responses:
        204:
          description: 'DummyTableInheritanceChild resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyTableInheritanceChild
      operationId: putDummyTableInheritanceChildItem
      summary: 'Replaces the DummyTableInheritanceChild resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceChild resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
        description: 'The updated DummyTableInheritanceChild resource'
    patch:
      tags:
        - DummyTableInheritanceChild
      operationId: patchDummyTableInheritanceChildItem
      summary: 'Updates the DummyTableInheritanceChild resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceChild resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceChild'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceChild'
        description: 'The updated DummyTableInheritanceChild resource'
  /dummy_table_inheritance_different_children:
    get:
      tags:
        - DummyTableInheritanceDifferentChild
      operationId: getDummyTableInheritanceDifferentChildCollection
      summary: 'Retrieves the collection of DummyTableInheritanceDifferentChild resources.'
      responses:
        200:
          description: 'DummyTableInheritanceDifferentChild collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyTableInheritanceDifferentChild
      operationId: postDummyTableInheritanceDifferentChildCollection
      summary: 'Creates a DummyTableInheritanceDifferentChild resource.'
      responses:
        201:
          description: 'DummyTableInheritanceDifferentChild resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        description: 'The new DummyTableInheritanceDifferentChild resource'
  '/dummy_table_inheritance_different_children/{id}':
    get:
      tags:
        - DummyTableInheritanceDifferentChild
      operationId: getDummyTableInheritanceDifferentChildItem
      summary: 'Retrieves a DummyTableInheritanceDifferentChild resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceDifferentChild resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyTableInheritanceDifferentChild
      operationId: deleteDummyTableInheritanceDifferentChildItem
      summary: 'Removes the DummyTableInheritanceDifferentChild resource.'
      responses:
        204:
          description: 'DummyTableInheritanceDifferentChild resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyTableInheritanceDifferentChild
      operationId: putDummyTableInheritanceDifferentChildItem
      summary: 'Replaces the DummyTableInheritanceDifferentChild resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceDifferentChild resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        description: 'The updated DummyTableInheritanceDifferentChild resource'
    patch:
      tags:
        - DummyTableInheritanceDifferentChild
      operationId: patchDummyTableInheritanceDifferentChildItem
      summary: 'Updates the DummyTableInheritanceDifferentChild resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceDifferentChild resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceDifferentChild'
        description: 'The updated DummyTableInheritanceDifferentChild resource'
  /dummy_table_inheritance_relateds:
    get:
      tags:
        - DummyTableInheritanceRelated
      operationId: getDummyTableInheritanceRelatedCollection
      summary: 'Retrieves the collection of DummyTableInheritanceRelated resources.'
      responses:
        200:
          description: 'DummyTableInheritanceRelated collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyTableInheritanceRelated
      operationId: postDummyTableInheritanceRelatedCollection
      summary: 'Creates a DummyTableInheritanceRelated resource.'
      responses:
        201:
          description: 'DummyTableInheritanceRelated resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        description: 'The new DummyTableInheritanceRelated resource'
  '/dummy_table_inheritance_relateds/{id}':
    get:
      tags:
        - DummyTableInheritanceRelated
      operationId: getDummyTableInheritanceRelatedItem
      summary: 'Retrieves a DummyTableInheritanceRelated resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceRelated resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyTableInheritanceRelated
      operationId: deleteDummyTableInheritanceRelatedItem
      summary: 'Removes the DummyTableInheritanceRelated resource.'
      responses:
        204:
          description: 'DummyTableInheritanceRelated resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyTableInheritanceRelated
      operationId: putDummyTableInheritanceRelatedItem
      summary: 'Replaces the DummyTableInheritanceRelated resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceRelated resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        description: 'The updated DummyTableInheritanceRelated resource'
    patch:
      tags:
        - DummyTableInheritanceRelated
      operationId: patchDummyTableInheritanceRelatedItem
      summary: 'Updates the DummyTableInheritanceRelated resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritanceRelated resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritanceRelated-default'
        description: 'The updated DummyTableInheritanceRelated resource'
  /dummy_table_inheritances:
    get:
      tags:
        - DummyTableInheritance
      operationId: getDummyTableInheritanceCollection
      summary: 'Retrieves the collection of DummyTableInheritance resources.'
      responses:
        200:
          description: 'DummyTableInheritance collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyTableInheritance'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - DummyTableInheritance
      operationId: postDummyTableInheritanceCollection
      summary: 'Creates a DummyTableInheritance resource.'
      responses:
        201:
          description: 'DummyTableInheritance resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
        description: 'The new DummyTableInheritance resource'
  '/dummy_table_inheritances/{id}':
    get:
      tags:
        - DummyTableInheritance
      operationId: getDummyTableInheritanceItem
      summary: 'Retrieves a DummyTableInheritance resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritance resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyTableInheritance
      operationId: deleteDummyTableInheritanceItem
      summary: 'Removes the DummyTableInheritance resource.'
      responses:
        204:
          description: 'DummyTableInheritance resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyTableInheritance
      operationId: putDummyTableInheritanceItem
      summary: 'Replaces the DummyTableInheritance resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritance resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
        description: 'The updated DummyTableInheritance resource'
    patch:
      tags:
        - DummyTableInheritance
      operationId: patchDummyTableInheritanceItem
      summary: 'Updates the DummyTableInheritance resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyTableInheritance resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyTableInheritance'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyTableInheritance'
        description: 'The updated DummyTableInheritance resource'
  /dummy_validation:
    post:
      tags:
        - DummyValidation
      operationId: postDummyValidationCollection
      summary: 'Creates a DummyValidation resource.'
      responses:
        201:
          description: 'DummyValidation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyValidation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyValidation'
        description: 'The new DummyValidation resource'
  /dummy_validation/validation_groups:
    post:
      tags:
        - DummyValidation
      operationId: post_validation_groupsDummyValidationCollection
      summary: 'Creates a DummyValidation resource.'
      responses:
        201:
          description: 'DummyValidation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyValidation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyValidation'
        description: 'The new DummyValidation resource'
  /dummy_validation/validation_sequence:
    post:
      tags:
        - DummyValidation
      operationId: post_validation_sequenceDummyValidationCollection
      summary: 'Creates a DummyValidation resource.'
      responses:
        201:
          description: 'DummyValidation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyValidation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyValidation'
        description: 'The new DummyValidation resource'
  /dummy_validations:
    get:
      tags:
        - DummyValidation
      operationId: getDummyValidationCollection
      summary: 'Retrieves the collection of DummyValidation resources.'
      responses:
        200:
          description: 'DummyValidation collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DummyValidation'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  '/dummy_validations/{id}':
    get:
      tags:
        - DummyValidation
      operationId: getDummyValidationItem
      summary: 'Retrieves a DummyValidation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyValidation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyValidation'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - DummyValidation
      operationId: deleteDummyValidationItem
      summary: 'Removes the DummyValidation resource.'
      responses:
        204:
          description: 'DummyValidation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - DummyValidation
      operationId: putDummyValidationItem
      summary: 'Replaces the DummyValidation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyValidation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyValidation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyValidation'
        description: 'The updated DummyValidation resource'
    patch:
      tags:
        - DummyValidation
      operationId: patchDummyValidationItem
      summary: 'Updates the DummyValidation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'DummyValidation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/xml:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            application/json:
              schema:
                $ref: '#/components/schemas/DummyValidation'
            text/html:
              schema:
                $ref: '#/components/schemas/DummyValidation'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/xml:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          application/json:
            schema:
              $ref: '#/components/schemas/DummyValidation'
          text/html:
            schema:
              $ref: '#/components/schemas/DummyValidation'
        description: 'The updated DummyValidation resource'
  /embedded_dummies:
    get:
      tags:
        - EmbeddedDummy
      operationId: getEmbeddedDummyCollection
      summary: 'Retrieves the collection of EmbeddedDummy resources.'
      responses:
        200:
          description: 'EmbeddedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedDummy'
      parameters:
        -
          name: id
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummy.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: embeddedDummy.dummyName
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[embeddedDummy.dummyName]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.symfony]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[dummyDate]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'embeddedDummy.dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'embeddedDummy.dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'embeddedDummy.dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'embeddedDummy.dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: embeddedDummy.dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: relatedDummy.embeddedDummy.dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - EmbeddedDummy
      operationId: postEmbeddedDummyCollection
      summary: 'Creates a EmbeddedDummy resource.'
      responses:
        201:
          description: 'EmbeddedDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
        description: 'The new EmbeddedDummy resource'
  '/embedded_dummies/{id}':
    get:
      tags:
        - EmbeddedDummy
      operationId: getEmbeddedDummyItem
      summary: 'Retrieves a EmbeddedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'EmbeddedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
        404:
          description: 'Resource not found'
    put:
      tags:
        - EmbeddedDummy
      operationId: putEmbeddedDummyItem
      summary: 'Replaces the EmbeddedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'EmbeddedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/EmbeddedDummy'
        description: 'The updated EmbeddedDummy resource'
    delete:
      tags:
        - EmbeddedDummy
      operationId: deleteEmbeddedDummyItem
      summary: 'Removes the EmbeddedDummy resource.'
      responses:
        204:
          description: 'EmbeddedDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/embedded_dummies_groups/{id}':
    get:
      tags:
        - EmbeddedDummy
      operationId: groupsEmbeddedDummyItem
      summary: 'Retrieves a EmbeddedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'EmbeddedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
            text/html:
              schema:
                $ref: '#/components/schemas/EmbeddedDummy-embed'
        404:
          description: 'Resource not found'
  /fileconfigdummies:
    get:
      tags:
        - fileconfigdummy
      operationId: getFileconfigdummyCollection
      summary: 'Retrieves the collection of fileconfigdummy resources.'
      responses:
        200:
          description: 'fileconfigdummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileconfigdummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - fileconfigdummy
      operationId: postFileconfigdummyCollection
      summary: 'Creates a fileconfigdummy resource.'
      responses:
        201:
          description: 'fileconfigdummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            text/html:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
          application/json:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
          text/html:
            schema:
              $ref: '#/components/schemas/fileconfigdummy'
        description: 'The new fileconfigdummy resource'
  '/fileconfigdummies/{id}':
    get:
      tags:
        - fileconfigdummy
      operationId: custom_operationFileconfigdummyItem
      summary: 'Retrieves a fileconfigdummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'fileconfigdummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            application/json:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
            text/html:
              schema:
                $ref: '#/components/schemas/fileconfigdummy'
        404:
          description: 'Resource not found'
  /filter_validators:
    get:
      tags:
        - FilterValidator
      operationId: getFilterValidatorCollection
      summary: 'Retrieves the collection of FilterValidator resources.'
      responses:
        200:
          description: 'FilterValidator collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilterValidator'
      parameters:
        -
          name: required
          in: query
          required: true
          schema:
            type: string
        -
          name: not-required
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - FilterValidator
      operationId: postFilterValidatorCollection
      summary: 'Creates a FilterValidator resource.'
      responses:
        201:
          description: 'FilterValidator resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/FilterValidator'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          text/xml:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          text/html:
            schema:
              $ref: '#/components/schemas/FilterValidator'
        description: 'The new FilterValidator resource'
  '/filter_validators/{id}':
    get:
      tags:
        - FilterValidator
      operationId: getFilterValidatorItem
      summary: 'Retrieves a FilterValidator resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FilterValidator resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/FilterValidator'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - FilterValidator
      operationId: deleteFilterValidatorItem
      summary: 'Removes the FilterValidator resource.'
      responses:
        204:
          description: 'FilterValidator resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - FilterValidator
      operationId: putFilterValidatorItem
      summary: 'Replaces the FilterValidator resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FilterValidator resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/FilterValidator'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          text/xml:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          text/html:
            schema:
              $ref: '#/components/schemas/FilterValidator'
        description: 'The updated FilterValidator resource'
    patch:
      tags:
        - FilterValidator
      operationId: patchFilterValidatorItem
      summary: 'Updates the FilterValidator resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FilterValidator resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/xml:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            application/json:
              schema:
                $ref: '#/components/schemas/FilterValidator'
            text/html:
              schema:
                $ref: '#/components/schemas/FilterValidator'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/xml:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          text/xml:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterValidator'
          text/html:
            schema:
              $ref: '#/components/schemas/FilterValidator'
        description: 'The updated FilterValidator resource'
  /flex_configs:
    get:
      tags:
        - FlexConfig
      operationId: getFlexConfigCollection
      summary: 'Retrieves the collection of FlexConfig resources.'
      responses:
        200:
          description: 'FlexConfig collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlexConfig'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - FlexConfig
      operationId: postFlexConfigCollection
      summary: 'Creates a FlexConfig resource.'
      responses:
        201:
          description: 'FlexConfig resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/html:
              schema:
                $ref: '#/components/schemas/FlexConfig'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/xml:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          text/xml:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          text/html:
            schema:
              $ref: '#/components/schemas/FlexConfig'
        description: 'The new FlexConfig resource'
  '/flex_configs/{id}':
    get:
      tags:
        - FlexConfig
      operationId: getFlexConfigItem
      summary: 'Retrieves a FlexConfig resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FlexConfig resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/html:
              schema:
                $ref: '#/components/schemas/FlexConfig'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - FlexConfig
      operationId: deleteFlexConfigItem
      summary: 'Removes the FlexConfig resource.'
      responses:
        204:
          description: 'FlexConfig resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - FlexConfig
      operationId: putFlexConfigItem
      summary: 'Replaces the FlexConfig resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FlexConfig resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/html:
              schema:
                $ref: '#/components/schemas/FlexConfig'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/xml:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          text/xml:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          text/html:
            schema:
              $ref: '#/components/schemas/FlexConfig'
        description: 'The updated FlexConfig resource'
    patch:
      tags:
        - FlexConfig
      operationId: patchFlexConfigItem
      summary: 'Updates the FlexConfig resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FlexConfig resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/xml:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            application/json:
              schema:
                $ref: '#/components/schemas/FlexConfig'
            text/html:
              schema:
                $ref: '#/components/schemas/FlexConfig'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/xml:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          text/xml:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          application/json:
            schema:
              $ref: '#/components/schemas/FlexConfig'
          text/html:
            schema:
              $ref: '#/components/schemas/FlexConfig'
        description: 'The updated FlexConfig resource'
  /foo_dummies:
    get:
      tags:
        - FooDummy
      operationId: getFooDummyCollection
      summary: 'Retrieves the collection of FooDummy resources.'
      responses:
        200:
          description: 'FooDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FooDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - FooDummy
      operationId: postFooDummyCollection
      summary: 'Creates a FooDummy resource.'
      responses:
        201:
          description: 'FooDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/FooDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FooDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/FooDummy'
        description: 'The new FooDummy resource'
  '/foo_dummies/{id}':
    get:
      tags:
        - FooDummy
      operationId: getFooDummyItem
      summary: 'Retrieves a FooDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FooDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/FooDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - FooDummy
      operationId: deleteFooDummyItem
      summary: 'Removes the FooDummy resource.'
      responses:
        204:
          description: 'FooDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - FooDummy
      operationId: putFooDummyItem
      summary: 'Replaces the FooDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FooDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/FooDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FooDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/FooDummy'
        description: 'The updated FooDummy resource'
    patch:
      tags:
        - FooDummy
      operationId: patchFooDummyItem
      summary: 'Updates the FooDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FooDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/FooDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/FooDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/FooDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/FooDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/FooDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/FooDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/FooDummy'
        description: 'The updated FooDummy resource'
  /foos:
    get:
      tags:
        - Foo
      operationId: getFooCollection
      summary: 'Retrieves the collection of Foo resources.'
      responses:
        200:
          description: 'Foo collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foo'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Foo
      operationId: postFooCollection
      summary: 'Creates a Foo resource.'
      responses:
        201:
          description: 'Foo resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            text/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            application/json:
              schema:
                $ref: '#/components/schemas/Foo'
            text/html:
              schema:
                $ref: '#/components/schemas/Foo'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Foo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Foo'
          application/json:
            schema:
              $ref: '#/components/schemas/Foo'
          text/html:
            schema:
              $ref: '#/components/schemas/Foo'
        description: 'The new Foo resource'
  '/foos/{id}':
    get:
      tags:
        - Foo
      operationId: getFooItem
      summary: 'Retrieves a Foo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Foo resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            text/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            application/json:
              schema:
                $ref: '#/components/schemas/Foo'
            text/html:
              schema:
                $ref: '#/components/schemas/Foo'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Foo
      operationId: deleteFooItem
      summary: 'Removes the Foo resource.'
      responses:
        204:
          description: 'Foo resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Foo
      operationId: putFooItem
      summary: 'Replaces the Foo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Foo resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            text/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            application/json:
              schema:
                $ref: '#/components/schemas/Foo'
            text/html:
              schema:
                $ref: '#/components/schemas/Foo'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Foo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Foo'
          application/json:
            schema:
              $ref: '#/components/schemas/Foo'
          text/html:
            schema:
              $ref: '#/components/schemas/Foo'
        description: 'The updated Foo resource'
    patch:
      tags:
        - Foo
      operationId: patchFooItem
      summary: 'Updates the Foo resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Foo resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Foo'
            application/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            text/xml:
              schema:
                $ref: '#/components/schemas/Foo'
            application/json:
              schema:
                $ref: '#/components/schemas/Foo'
            text/html:
              schema:
                $ref: '#/components/schemas/Foo'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Foo'
          application/xml:
            schema:
              $ref: '#/components/schemas/Foo'
          text/xml:
            schema:
              $ref: '#/components/schemas/Foo'
          application/json:
            schema:
              $ref: '#/components/schemas/Foo'
          text/html:
            schema:
              $ref: '#/components/schemas/Foo'
        description: 'The updated Foo resource'
  /fourth_levels:
    get:
      tags:
        - FourthLevel
      operationId: getFourthLevelCollection
      summary: 'Retrieves the collection of FourthLevel resources.'
      responses:
        200:
          description: 'FourthLevel collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FourthLevel'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - FourthLevel
      operationId: postFourthLevelCollection
      summary: 'Creates a FourthLevel resource.'
      responses:
        201:
          description: 'FourthLevel resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          text/xml:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          text/html:
            schema:
              $ref: '#/components/schemas/FourthLevel'
        description: 'The new FourthLevel resource'
  '/fourth_levels/{id}':
    get:
      tags:
        - FourthLevel
      operationId: getFourthLevelItem
      summary: 'Retrieves a FourthLevel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - FourthLevel
      operationId: deleteFourthLevelItem
      summary: 'Removes the FourthLevel resource.'
      responses:
        204:
          description: 'FourthLevel resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - FourthLevel
      operationId: putFourthLevelItem
      summary: 'Replaces the FourthLevel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FourthLevel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          text/xml:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          text/html:
            schema:
              $ref: '#/components/schemas/FourthLevel'
        description: 'The updated FourthLevel resource'
    patch:
      tags:
        - FourthLevel
      operationId: patchFourthLevelItem
      summary: 'Updates the FourthLevel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'FourthLevel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          text/xml:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/FourthLevel'
          text/html:
            schema:
              $ref: '#/components/schemas/FourthLevel'
        description: 'The updated FourthLevel resource'
  /greetings:
    get:
      tags:
        - Greeting
      operationId: getGreetingCollection
      summary: 'Retrieves the collection of Greeting resources.'
      responses:
        200:
          description: 'Greeting collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Greeting
      operationId: postGreetingCollection
      summary: 'Creates a Greeting resource.'
      responses:
        201:
          description: 'Greeting resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/html:
              schema:
                $ref: '#/components/schemas/Greeting'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/xml:
            schema:
              $ref: '#/components/schemas/Greeting'
          text/xml:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting'
          text/html:
            schema:
              $ref: '#/components/schemas/Greeting'
        description: 'The new Greeting resource'
  '/greetings/{id}':
    get:
      tags:
        - Greeting
      operationId: getGreetingItem
      summary: 'Retrieves a Greeting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Greeting resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/html:
              schema:
                $ref: '#/components/schemas/Greeting'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Greeting
      operationId: deleteGreetingItem
      summary: 'Removes the Greeting resource.'
      responses:
        204:
          description: 'Greeting resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Greeting
      operationId: putGreetingItem
      summary: 'Replaces the Greeting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Greeting resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/html:
              schema:
                $ref: '#/components/schemas/Greeting'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/xml:
            schema:
              $ref: '#/components/schemas/Greeting'
          text/xml:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting'
          text/html:
            schema:
              $ref: '#/components/schemas/Greeting'
        description: 'The updated Greeting resource'
    patch:
      tags:
        - Greeting
      operationId: patchGreetingItem
      summary: 'Updates the Greeting resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Greeting resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/xml:
              schema:
                $ref: '#/components/schemas/Greeting'
            application/json:
              schema:
                $ref: '#/components/schemas/Greeting'
            text/html:
              schema:
                $ref: '#/components/schemas/Greeting'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/xml:
            schema:
              $ref: '#/components/schemas/Greeting'
          text/xml:
            schema:
              $ref: '#/components/schemas/Greeting'
          application/json:
            schema:
              $ref: '#/components/schemas/Greeting'
          text/html:
            schema:
              $ref: '#/components/schemas/Greeting'
        description: 'The updated Greeting resource'
  /jsonld_context_dummies:
    get:
      tags:
        - JsonldContextDummy
      operationId: getJsonldContextDummyCollection
      summary: 'Retrieves the collection of JsonldContextDummy resources.'
      responses:
        200:
          description: 'JsonldContextDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JsonldContextDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - JsonldContextDummy
      operationId: postJsonldContextDummyCollection
      summary: 'Creates a JsonldContextDummy resource.'
      responses:
        201:
          description: 'JsonldContextDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
        description: 'The new JsonldContextDummy resource'
  '/jsonld_context_dummies/{id}':
    get:
      tags:
        - JsonldContextDummy
      operationId: getJsonldContextDummyItem
      summary: 'Retrieves a JsonldContextDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'JsonldContextDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - JsonldContextDummy
      operationId: deleteJsonldContextDummyItem
      summary: 'Removes the JsonldContextDummy resource.'
      responses:
        204:
          description: 'JsonldContextDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - JsonldContextDummy
      operationId: putJsonldContextDummyItem
      summary: 'Replaces the JsonldContextDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'JsonldContextDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
        description: 'The updated JsonldContextDummy resource'
    patch:
      tags:
        - JsonldContextDummy
      operationId: patchJsonldContextDummyItem
      summary: 'Updates the JsonldContextDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'JsonldContextDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/JsonldContextDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/JsonldContextDummy'
        description: 'The updated JsonldContextDummy resource'
  /max_depth_dummies:
    get:
      tags:
        - MaxDepthDummy
      operationId: getMaxDepthDummyCollection
      summary: 'Retrieves the collection of MaxDepthDummy resources.'
      responses:
        200:
          description: 'MaxDepthDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthDummy-default'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - MaxDepthDummy
      operationId: postMaxDepthDummyCollection
      summary: 'Creates a MaxDepthDummy resource.'
      responses:
        201:
          description: 'MaxDepthDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          text/html:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
        description: 'The new MaxDepthDummy resource'
  '/max_depth_dummies/{id}':
    get:
      tags:
        - MaxDepthDummy
      operationId: getMaxDepthDummyItem
      summary: 'Retrieves a MaxDepthDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MaxDepthDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - MaxDepthDummy
      operationId: deleteMaxDepthDummyItem
      summary: 'Removes the MaxDepthDummy resource.'
      responses:
        204:
          description: 'MaxDepthDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - MaxDepthDummy
      operationId: putMaxDepthDummyItem
      summary: 'Replaces the MaxDepthDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MaxDepthDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          text/html:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
        description: 'The updated MaxDepthDummy resource'
    patch:
      tags:
        - MaxDepthDummy
      operationId: patchMaxDepthDummyItem
      summary: 'Updates the MaxDepthDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MaxDepthDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthDummy-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          application/json:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
          text/html:
            schema:
              $ref: '#/components/schemas/MaxDepthDummy-default'
        description: 'The updated MaxDepthDummy resource'
  /max_depth_eager_dummies:
    get:
      tags:
        - MaxDepthEagerDummy
      operationId: getMaxDepthEagerDummyCollection
      summary: 'Retrieves the collection of MaxDepthEagerDummy resources.'
      responses:
        200:
          description: 'MaxDepthEagerDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaxDepthEagerDummy-default'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - MaxDepthEagerDummy
      operationId: postMaxDepthEagerDummyCollection
      summary: 'Creates a MaxDepthEagerDummy resource.'
      responses:
        201:
          description: 'MaxDepthEagerDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          text/html:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        description: 'The new MaxDepthEagerDummy resource'
  '/max_depth_eager_dummies/{id}':
    get:
      tags:
        - MaxDepthEagerDummy
      operationId: getMaxDepthEagerDummyItem
      summary: 'Retrieves a MaxDepthEagerDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MaxDepthEagerDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - MaxDepthEagerDummy
      operationId: deleteMaxDepthEagerDummyItem
      summary: 'Removes the MaxDepthEagerDummy resource.'
      responses:
        204:
          description: 'MaxDepthEagerDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - MaxDepthEagerDummy
      operationId: putMaxDepthEagerDummyItem
      summary: 'Replaces the MaxDepthEagerDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MaxDepthEagerDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          text/html:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        description: 'The updated MaxDepthEagerDummy resource'
    patch:
      tags:
        - MaxDepthEagerDummy
      operationId: patchMaxDepthEagerDummyItem
      summary: 'Updates the MaxDepthEagerDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'MaxDepthEagerDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/xml:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            application/json:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
            text/html:
              schema:
                $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          text/xml:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          application/json:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
          text/html:
            schema:
              $ref: '#/components/schemas/MaxDepthEagerDummy-default'
        description: 'The updated MaxDepthEagerDummy resource'
  '/no_collection_dummies/{id}':
    get:
      tags:
        - NoCollectionDummy
      operationId: getNoCollectionDummyItem
      summary: 'Retrieves a NoCollectionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'NoCollectionDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - NoCollectionDummy
      operationId: deleteNoCollectionDummyItem
      summary: 'Removes the NoCollectionDummy resource.'
      responses:
        204:
          description: 'NoCollectionDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - NoCollectionDummy
      operationId: putNoCollectionDummyItem
      summary: 'Replaces the NoCollectionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'NoCollectionDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
        description: 'The updated NoCollectionDummy resource'
    patch:
      tags:
        - NoCollectionDummy
      operationId: patchNoCollectionDummyItem
      summary: 'Updates the NoCollectionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'NoCollectionDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/NoCollectionDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/NoCollectionDummy'
        description: 'The updated NoCollectionDummy resource'
  /nodes:
    get:
      tags:
        - Node
      operationId: getNodeCollection
      summary: 'Retrieves the collection of Node resources.'
      responses:
        200:
          description: 'Node collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Node
      operationId: postNodeCollection
      summary: 'Creates a Node resource.'
      responses:
        201:
          description: 'Node resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/xml:
              schema:
                $ref: '#/components/schemas/Node'
            text/xml:
              schema:
                $ref: '#/components/schemas/Node'
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
            text/html:
              schema:
                $ref: '#/components/schemas/Node'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/xml:
            schema:
              $ref: '#/components/schemas/Node'
          text/xml:
            schema:
              $ref: '#/components/schemas/Node'
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
          text/html:
            schema:
              $ref: '#/components/schemas/Node'
        description: 'The new Node resource'
  '/nodes/{id}':
    get:
      tags:
        - Node
      operationId: getNodeItem
      summary: 'Retrieves a Node resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Node resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/xml:
              schema:
                $ref: '#/components/schemas/Node'
            text/xml:
              schema:
                $ref: '#/components/schemas/Node'
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
            text/html:
              schema:
                $ref: '#/components/schemas/Node'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Node
      operationId: deleteNodeItem
      summary: 'Removes the Node resource.'
      responses:
        204:
          description: 'Node resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Node
      operationId: putNodeItem
      summary: 'Replaces the Node resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Node resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/xml:
              schema:
                $ref: '#/components/schemas/Node'
            text/xml:
              schema:
                $ref: '#/components/schemas/Node'
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
            text/html:
              schema:
                $ref: '#/components/schemas/Node'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/xml:
            schema:
              $ref: '#/components/schemas/Node'
          text/xml:
            schema:
              $ref: '#/components/schemas/Node'
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
          text/html:
            schema:
              $ref: '#/components/schemas/Node'
        description: 'The updated Node resource'
    patch:
      tags:
        - Node
      operationId: patchNodeItem
      summary: 'Updates the Node resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Node resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Node'
            application/xml:
              schema:
                $ref: '#/components/schemas/Node'
            text/xml:
              schema:
                $ref: '#/components/schemas/Node'
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
            text/html:
              schema:
                $ref: '#/components/schemas/Node'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Node'
          application/xml:
            schema:
              $ref: '#/components/schemas/Node'
          text/xml:
            schema:
              $ref: '#/components/schemas/Node'
          application/json:
            schema:
              $ref: '#/components/schemas/Node'
          text/html:
            schema:
              $ref: '#/components/schemas/Node'
        description: 'The updated Node resource'
  /overridden_operation_dummies:
    get:
      tags:
        - OverriddenOperationDummy
      operationId: getOverriddenOperationDummyCollection
      summary: 'Retrieves the collection of OverriddenOperationDummy resources.'
      responses:
        200:
          description: 'OverriddenOperationDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - OverriddenOperationDummy
      operationId: postOverriddenOperationDummyCollection
      summary: 'Creates a OverriddenOperationDummy resource.'
      responses:
        201:
          description: 'OverriddenOperationDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/xml:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            text/xml:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            text/html:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
          application/xml:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
          text/xml:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
          application/json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
          text/html:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_write'
        description: 'The new OverriddenOperationDummy resource'
  '/overridden_operation_dummies/{id}':
    get:
      tags:
        - OverriddenOperationDummy
      operationId: getOverriddenOperationDummyItem
      summary: 'Retrieves a OverriddenOperationDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OverriddenOperationDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
            application/xml:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
            text/xml:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
            application/json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
            text/html:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_get'
        404:
          description: 'Resource not found'
    put:
      tags:
        - OverriddenOperationDummy
      operationId: putOverriddenOperationDummyItem
      summary: 'Replaces the OverriddenOperationDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'OverriddenOperationDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
            application/xml:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
            text/xml:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
            application/json:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
            text/html:
              schema:
                $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
          application/xml:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
          text/xml:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
          application/json:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
          text/html:
            schema:
              $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_put'
        description: 'The updated OverriddenOperationDummy resource'
    delete:
      tags:
        - OverriddenOperationDummy
      operationId: deleteOverriddenOperationDummyItem
      summary: 'Removes the OverriddenOperationDummy resource.'
      responses:
        204:
          description: 'OverriddenOperationDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /override/swagger:
    get:
      tags:
        - OverriddenOperationDummy
      operationId: swaggerOverriddenOperationDummyCollection
      summary: 'Retrieves the collection of OverriddenOperationDummy resources.'
      responses:
        200:
          description: 'OverriddenOperationDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OverriddenOperationDummy-overridden_operation_dummy_read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  /people:
    get:
      tags:
        - Person
      operationId: getPersonCollection
      summary: 'Retrieves the collection of Person resources.'
      responses:
        200:
          description: 'Person collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person-people.pets'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Person
      operationId: postPersonCollection
      summary: 'Creates a Person resource.'
      responses:
        201:
          description: 'Person resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
          text/xml:
            schema:
              $ref: '#/components/schemas/Person'
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          text/html:
            schema:
              $ref: '#/components/schemas/Person'
        description: 'The new Person resource'
  '/people/{id}':
    get:
      tags:
        - Person
      operationId: getPersonItem
      summary: 'Retrieves a Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Person resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Person
      operationId: deletePersonItem
      summary: 'Removes the Person resource.'
      responses:
        204:
          description: 'Person resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Person
      operationId: putPersonItem
      summary: 'Replaces the Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
          text/xml:
            schema:
              $ref: '#/components/schemas/Person'
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          text/html:
            schema:
              $ref: '#/components/schemas/Person'
        description: 'The updated Person resource'
    patch:
      tags:
        - Person
      operationId: patchPersonItem
      summary: 'Updates the Person resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Person resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/xml:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            application/json:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
            text/html:
              schema:
                $ref: '#/components/schemas/Person-people.pets'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
          text/xml:
            schema:
              $ref: '#/components/schemas/Person'
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          text/html:
            schema:
              $ref: '#/components/schemas/Person'
        description: 'The updated Person resource'
  '/people/{id}/sent_greetings':
    get:
      tags:
        - Greeting
        - Person
      operationId: api_people_sent_greetings_get_subresource
      summary: 'Retrieves the collection of Greeting resources.'
      responses:
        200:
          description: 'Greeting collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Greeting'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /pets:
    get:
      tags:
        - Pet
      operationId: getPetCollection
      summary: 'Retrieves the collection of Pet resources.'
      responses:
        200:
          description: 'Pet collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Pet
      operationId: postPetCollection
      summary: 'Creates a Pet resource.'
      responses:
        201:
          description: 'Pet resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            text/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            text/html:
              schema:
                $ref: '#/components/schemas/Pet'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          text/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          text/html:
            schema:
              $ref: '#/components/schemas/Pet'
        description: 'The new Pet resource'
  '/pets/{id}':
    get:
      tags:
        - Pet
      operationId: getPetItem
      summary: 'Retrieves a Pet resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Pet resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            text/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            text/html:
              schema:
                $ref: '#/components/schemas/Pet'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Pet
      operationId: deletePetItem
      summary: 'Removes the Pet resource.'
      responses:
        204:
          description: 'Pet resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Pet
      operationId: putPetItem
      summary: 'Replaces the Pet resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Pet resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            text/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            text/html:
              schema:
                $ref: '#/components/schemas/Pet'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          text/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          text/html:
            schema:
              $ref: '#/components/schemas/Pet'
        description: 'The updated Pet resource'
    patch:
      tags:
        - Pet
      operationId: patchPetItem
      summary: 'Updates the Pet resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Pet resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            text/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            text/html:
              schema:
                $ref: '#/components/schemas/Pet'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          text/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          text/html:
            schema:
              $ref: '#/components/schemas/Pet'
        description: 'The updated Pet resource'
  /questions:
    get:
      tags:
        - Question
      operationId: getQuestionCollection
      summary: 'Retrieves the collection of Question resources.'
      responses:
        200:
          description: 'Question collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Question
      operationId: postQuestionCollection
      summary: 'Creates a Question resource.'
      responses:
        201:
          description: 'Question resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                $ref: '#/components/schemas/Question'
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
            text/html:
              schema:
                $ref: '#/components/schemas/Question'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question'
          text/xml:
            schema:
              $ref: '#/components/schemas/Question'
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          text/html:
            schema:
              $ref: '#/components/schemas/Question'
        description: 'The new Question resource'
  '/questions/{id}':
    get:
      tags:
        - Question
      operationId: getQuestionItem
      summary: 'Retrieves a Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Question resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                $ref: '#/components/schemas/Question'
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
            text/html:
              schema:
                $ref: '#/components/schemas/Question'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Question
      operationId: deleteQuestionItem
      summary: 'Removes the Question resource.'
      responses:
        204:
          description: 'Question resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Question
      operationId: putQuestionItem
      summary: 'Replaces the Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Question resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                $ref: '#/components/schemas/Question'
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
            text/html:
              schema:
                $ref: '#/components/schemas/Question'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question'
          text/xml:
            schema:
              $ref: '#/components/schemas/Question'
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          text/html:
            schema:
              $ref: '#/components/schemas/Question'
        description: 'The updated Question resource'
    patch:
      tags:
        - Question
      operationId: patchQuestionItem
      summary: 'Updates the Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Question resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                $ref: '#/components/schemas/Question'
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
            text/html:
              schema:
                $ref: '#/components/schemas/Question'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question'
          text/xml:
            schema:
              $ref: '#/components/schemas/Question'
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          text/html:
            schema:
              $ref: '#/components/schemas/Question'
        description: 'The updated Question resource'
  '/questions/{id}/answer':
    get:
      tags:
        - Answer
        - Question
      operationId: api_questions_answer_get_subresource
      summary: 'Retrieves a Answer resource.'
      responses:
        200:
          description: 'Answer resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Answer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            text/xml:
              schema:
                $ref: '#/components/schemas/Answer'
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
            text/html:
              schema:
                $ref: '#/components/schemas/Answer'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/questions/{id}/answer/related_questions':
    get:
      tags:
        - Question
        - Answer
      operationId: api_questions_answer_related_questions_get_subresource
      summary: 'Retrieves the collection of Question resources.'
      responses:
        200:
          description: 'Question collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /ramsey_uuid_dummies:
    get:
      tags:
        - RamseyUuidDummy
      operationId: getRamseyUuidDummyCollection
      summary: 'Retrieves the collection of RamseyUuidDummy resources.'
      responses:
        200:
          description: 'RamseyUuidDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RamseyUuidDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RamseyUuidDummy
      operationId: postRamseyUuidDummyCollection
      summary: 'Creates a RamseyUuidDummy resource.'
      responses:
        201:
          description: 'RamseyUuidDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
        description: 'The new RamseyUuidDummy resource'
  '/ramsey_uuid_dummies/{id}':
    get:
      tags:
        - RamseyUuidDummy
      operationId: getRamseyUuidDummyItem
      summary: 'Retrieves a RamseyUuidDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RamseyUuidDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RamseyUuidDummy
      operationId: deleteRamseyUuidDummyItem
      summary: 'Removes the RamseyUuidDummy resource.'
      responses:
        204:
          description: 'RamseyUuidDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RamseyUuidDummy
      operationId: putRamseyUuidDummyItem
      summary: 'Replaces the RamseyUuidDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RamseyUuidDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
        description: 'The updated RamseyUuidDummy resource'
    patch:
      tags:
        - RamseyUuidDummy
      operationId: patchRamseyUuidDummyItem
      summary: 'Updates the RamseyUuidDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RamseyUuidDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RamseyUuidDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RamseyUuidDummy'
        description: 'The updated RamseyUuidDummy resource'
  /readable_only_properties:
    get:
      tags:
        - ReadableOnlyProperty
      operationId: getReadableOnlyPropertyCollection
      summary: 'Retrieves the collection of ReadableOnlyProperty resources.'
      responses:
        200:
          description: 'ReadableOnlyProperty collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadableOnlyProperty'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - ReadableOnlyProperty
      operationId: postReadableOnlyPropertyCollection
      summary: 'Creates a ReadableOnlyProperty resource.'
      responses:
        201:
          description: 'ReadableOnlyProperty resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          text/xml:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          text/html:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
        description: 'The new ReadableOnlyProperty resource'
  '/readable_only_properties/{id}':
    get:
      tags:
        - ReadableOnlyProperty
      operationId: getReadableOnlyPropertyItem
      summary: 'Retrieves a ReadableOnlyProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ReadableOnlyProperty resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - ReadableOnlyProperty
      operationId: deleteReadableOnlyPropertyItem
      summary: 'Removes the ReadableOnlyProperty resource.'
      responses:
        204:
          description: 'ReadableOnlyProperty resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - ReadableOnlyProperty
      operationId: putReadableOnlyPropertyItem
      summary: 'Replaces the ReadableOnlyProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ReadableOnlyProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          text/xml:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          text/html:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
        description: 'The updated ReadableOnlyProperty resource'
    patch:
      tags:
        - ReadableOnlyProperty
      operationId: patchReadableOnlyPropertyItem
      summary: 'Updates the ReadableOnlyProperty resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ReadableOnlyProperty resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/xml:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            application/json:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
            text/html:
              schema:
                $ref: '#/components/schemas/ReadableOnlyProperty'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          text/xml:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          application/json:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
          text/html:
            schema:
              $ref: '#/components/schemas/ReadableOnlyProperty'
        description: 'The updated ReadableOnlyProperty resource'
  /related_dummies:
    get:
      tags:
        - RelatedDummy
      operationId: getRelatedDummyCollection
      summary: 'Retrieves the collection of RelatedDummy resources.'
      responses:
        200:
          description: 'RelatedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
      parameters:
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RelatedDummy
      operationId: postRelatedDummyCollection
      summary: 'Creates a RelatedDummy resource.'
      responses:
        201:
          description: 'RelatedDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
        description: 'The new RelatedDummy resource'
  '/related_dummies/{id}':
    get:
      tags:
        - RelatedDummy
      operationId: getRelatedDummyItem
      summary: 'Retrieves a RelatedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RelatedDummy
      operationId: deleteRelatedDummyItem
      summary: 'Removes the RelatedDummy resource.'
      responses:
        204:
          description: 'RelatedDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RelatedDummy
      operationId: putRelatedDummyItem
      summary: 'Replaces the RelatedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
        description: 'The updated RelatedDummy resource'
    patch:
      tags:
        - RelatedDummy
      operationId: patchRelatedDummyItem
      summary: 'Updates the RelatedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedDummy'
        description: 'The updated RelatedDummy resource'
  '/related_dummies/{id}/id':
    get:
      tags:
        - RelatedDummy
      operationId: api_related_dummies_id_get_subresource
      summary: 'Retrieves a RelatedDummy resource.'
      responses:
        200:
          description: 'RelatedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/related_dummies/{id}/id/related_to_dummy_friends':
    get:
      tags:
        - RelatedToDummyFriend
        - RelatedDummy
      operationId: api_related_dummies_id_related_to_dummy_friends_get_subresource
      summary: 'Retrieves the collection of RelatedToDummyFriend resources.'
      responses:
        200:
          description: 'RelatedToDummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
  '/related_dummies/{id}/id/third_level':
    get:
      tags:
        - ThirdLevel
        - RelatedDummy
      operationId: api_related_dummies_id_third_level_get_subresource
      summary: 'Retrieves a ThirdLevel resource.'
      responses:
        200:
          description: 'ThirdLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/related_dummies/{id}/id/third_level/fourth_level':
    get:
      tags:
        - FourthLevel
        - ThirdLevel
      operationId: api_related_dummies_id_third_level_fourth_level_get_subresource
      summary: 'Retrieves a FourthLevel resource.'
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/related_dummies/{id}/related_to_dummy_friends':
    get:
      tags:
        - RelatedToDummyFriend
        - RelatedDummy
      operationId: api_related_dummies_related_to_dummy_friends_get_subresource
      summary: 'Retrieves the collection of RelatedToDummyFriend resources.'
      responses:
        200:
          description: 'RelatedToDummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
  '/related_dummies/{id}/third_level':
    get:
      tags:
        - ThirdLevel
        - RelatedDummy
      operationId: api_related_dummies_third_level_get_subresource
      summary: 'Retrieves a ThirdLevel resource.'
      responses:
        200:
          description: 'ThirdLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/related_dummies/{id}/third_level/fourth_level':
    get:
      tags:
        - FourthLevel
        - ThirdLevel
      operationId: api_related_dummies_third_level_fourth_level_get_subresource
      summary: 'Retrieves a FourthLevel resource.'
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /related_normalized_dummies:
    get:
      tags:
        - RelatedNormalizedDummy
      operationId: getRelatedNormalizedDummyCollection
      summary: 'Retrieves the collection of RelatedNormalizedDummy resources.'
      responses:
        200:
          description: 'RelatedNormalizedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RelatedNormalizedDummy
      operationId: postRelatedNormalizedDummyCollection
      summary: 'Creates a RelatedNormalizedDummy resource.'
      responses:
        201:
          description: 'RelatedNormalizedDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
        description: 'The new RelatedNormalizedDummy resource'
  '/related_normalized_dummies/{id}':
    get:
      tags:
        - RelatedNormalizedDummy
      operationId: getRelatedNormalizedDummyItem
      summary: 'Retrieves a RelatedNormalizedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedNormalizedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RelatedNormalizedDummy
      operationId: deleteRelatedNormalizedDummyItem
      summary: 'Removes the RelatedNormalizedDummy resource.'
      responses:
        204:
          description: 'RelatedNormalizedDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RelatedNormalizedDummy
      operationId: putRelatedNormalizedDummyItem
      summary: 'Replaces the RelatedNormalizedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedNormalizedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
        description: 'The updated RelatedNormalizedDummy resource'
    patch:
      tags:
        - RelatedNormalizedDummy
      operationId: patchRelatedNormalizedDummyItem
      summary: 'Updates the RelatedNormalizedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedNormalizedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedNormalizedDummy-related_output_output'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedNormalizedDummy-related_input_input'
        description: 'The updated RelatedNormalizedDummy resource'
  /related_owned_dummies:
    get:
      tags:
        - RelatedOwnedDummy
      operationId: getRelatedOwnedDummyCollection
      summary: 'Retrieves the collection of RelatedOwnedDummy resources.'
      responses:
        200:
          description: 'RelatedOwnedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwnedDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RelatedOwnedDummy
      operationId: postRelatedOwnedDummyCollection
      summary: 'Creates a RelatedOwnedDummy resource.'
      responses:
        201:
          description: 'RelatedOwnedDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
        description: 'The new RelatedOwnedDummy resource'
  '/related_owned_dummies/{id}':
    get:
      tags:
        - RelatedOwnedDummy
      operationId: getRelatedOwnedDummyItem
      summary: 'Retrieves a RelatedOwnedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedOwnedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RelatedOwnedDummy
      operationId: deleteRelatedOwnedDummyItem
      summary: 'Removes the RelatedOwnedDummy resource.'
      responses:
        204:
          description: 'RelatedOwnedDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RelatedOwnedDummy
      operationId: putRelatedOwnedDummyItem
      summary: 'Replaces the RelatedOwnedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedOwnedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
        description: 'The updated RelatedOwnedDummy resource'
    patch:
      tags:
        - RelatedOwnedDummy
      operationId: patchRelatedOwnedDummyItem
      summary: 'Updates the RelatedOwnedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedOwnedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwnedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedOwnedDummy'
        description: 'The updated RelatedOwnedDummy resource'
  '/related_owned_dummies/{id}/owning_dummy':
    get:
      tags:
        - Dummy
        - RelatedOwnedDummy
      operationId: api_related_owned_dummies_owning_dummy_get_subresource
      summary: 'Retrieves a Dummy resource.'
      responses:
        200:
          description: 'Dummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                $ref: '#/components/schemas/Dummy'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: relatedDummy.embeddedDummy.dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'relatedDummy.name[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'dummyBoolean[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'relatedDummy[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: dummyFloat
          in: query
          required: false
          schema:
            type: number
        -
          name: 'dummyFloat[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
          style: form
          explode: true
        -
          name: dummyPrice
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.symfony]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[dummyDate]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: alias
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummy.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: relatedDummies
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummies[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dummy
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummies.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'properties[]'
          in: query
          required: false
          schema:
            type: string
  '/related_owned_dummies/{id}/owning_dummy/related_dummies':
    get:
      tags:
        - RelatedDummy
        - Dummy
      operationId: api_related_owned_dummies_owning_dummy_related_dummies_get_subresource
      summary: 'Retrieves the collection of RelatedDummy resources.'
      responses:
        200:
          description: 'RelatedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/related_owned_dummies/{id}/owning_dummy/related_dummies/{relatedDummies}':
    get:
      tags:
        - RelatedDummy
      operationId: api_related_owned_dummies_owning_dummy_related_dummies_item_get_subresource
      summary: 'Retrieves a RelatedDummy resource.'
      responses:
        200:
          description: 'RelatedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/related_owned_dummies/{id}/owning_dummy/related_dummies/{relatedDummies}/related_to_dummy_friends':
    get:
      tags:
        - RelatedToDummyFriend
        - RelatedDummy
      operationId: api_related_owned_dummies_owning_dummy_related_dummies_item_related_to_dummy_friends_get_subresource
      summary: 'Retrieves the collection of RelatedToDummyFriend resources.'
      responses:
        200:
          description: 'RelatedToDummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
  '/related_owned_dummies/{id}/owning_dummy/related_dummies/{relatedDummies}/third_level':
    get:
      tags:
        - ThirdLevel
        - RelatedDummy
      operationId: api_related_owned_dummies_owning_dummy_related_dummies_item_third_level_get_subresource
      summary: 'Retrieves a ThirdLevel resource.'
      responses:
        200:
          description: 'ThirdLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
  '/related_owned_dummies/{id}/owning_dummy/related_dummies/{relatedDummies}/third_level/fourth_level':
    get:
      tags:
        - FourthLevel
        - ThirdLevel
      operationId: api_related_owned_dummies_owning_dummy_related_dummies_item_third_level_fourth_level_get_subresource
      summary: 'Retrieves a FourthLevel resource.'
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
  /related_owning_dummies:
    get:
      tags:
        - RelatedOwningDummy
      operationId: getRelatedOwningDummyCollection
      summary: 'Retrieves the collection of RelatedOwningDummy resources.'
      responses:
        200:
          description: 'RelatedOwningDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedOwningDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RelatedOwningDummy
      operationId: postRelatedOwningDummyCollection
      summary: 'Creates a RelatedOwningDummy resource.'
      responses:
        201:
          description: 'RelatedOwningDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
        description: 'The new RelatedOwningDummy resource'
  '/related_owning_dummies/{id}':
    get:
      tags:
        - RelatedOwningDummy
      operationId: getRelatedOwningDummyItem
      summary: 'Retrieves a RelatedOwningDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedOwningDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RelatedOwningDummy
      operationId: deleteRelatedOwningDummyItem
      summary: 'Removes the RelatedOwningDummy resource.'
      responses:
        204:
          description: 'RelatedOwningDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RelatedOwningDummy
      operationId: putRelatedOwningDummyItem
      summary: 'Replaces the RelatedOwningDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedOwningDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
        description: 'The updated RelatedOwningDummy resource'
    patch:
      tags:
        - RelatedOwningDummy
      operationId: patchRelatedOwningDummyItem
      summary: 'Updates the RelatedOwningDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedOwningDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedOwningDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedOwningDummy'
        description: 'The updated RelatedOwningDummy resource'
  '/related_owning_dummies/{id}/owned_dummy':
    get:
      tags:
        - Dummy
        - RelatedOwningDummy
      operationId: api_related_owning_dummies_owned_dummy_get_subresource
      summary: 'Retrieves a Dummy resource.'
      responses:
        200:
          description: 'Dummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/Dummy'
            application/json:
              schema:
                $ref: '#/components/schemas/Dummy'
            text/html:
              schema:
                $ref: '#/components/schemas/Dummy'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: relatedDummy.embeddedDummy.dummyBoolean
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.dummyDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'relatedDummy.name[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'dummyBoolean[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'relatedDummy[exists]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: dummyFloat
          in: query
          required: false
          schema:
            type: number
        -
          name: 'dummyFloat[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: number
          style: form
          explode: true
        -
          name: dummyPrice
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.name]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[relatedDummy.symfony]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'order[dummyDate]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyFloat[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[between]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[gt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[gte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[lt]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dummyPrice[lte]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: alias
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummy.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummy.name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: relatedDummies
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedDummies[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dummy
          in: query
          required: false
          schema:
            type: string
        -
          name: relatedDummies.name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'properties[]'
          in: query
          required: false
          schema:
            type: string
  '/related_owning_dummies/{id}/owned_dummy/related_dummies':
    get:
      tags:
        - RelatedDummy
        - Dummy
      operationId: api_related_owning_dummies_owned_dummy_related_dummies_get_subresource
      summary: 'Retrieves the collection of RelatedDummy resources.'
      responses:
        200:
          description: 'RelatedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/related_owning_dummies/{id}/owned_dummy/related_dummies/{relatedDummies}':
    get:
      tags:
        - RelatedDummy
      operationId: api_related_owning_dummies_owned_dummy_related_dummies_item_get_subresource
      summary: 'Retrieves a RelatedDummy resource.'
      responses:
        200:
          description: 'RelatedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedDummy-friends'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedToDummyFriend.dummyFriend
          in: query
          required: false
          schema:
            type: string
        -
          name: 'relatedToDummyFriend.dummyFriend[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
  '/related_owning_dummies/{id}/owned_dummy/related_dummies/{relatedDummies}/related_to_dummy_friends':
    get:
      tags:
        - RelatedToDummyFriend
        - RelatedDummy
      operationId: api_related_owning_dummies_owned_dummy_related_dummies_item_related_to_dummy_friends_get_subresource
      summary: 'Retrieves the collection of RelatedToDummyFriend resources.'
      responses:
        200:
          description: 'RelatedToDummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
  '/related_owning_dummies/{id}/owned_dummy/related_dummies/{relatedDummies}/third_level':
    get:
      tags:
        - ThirdLevel
        - RelatedDummy
      operationId: api_related_owning_dummies_owned_dummy_related_dummies_item_third_level_get_subresource
      summary: 'Retrieves a ThirdLevel resource.'
      responses:
        200:
          description: 'ThirdLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
  '/related_owning_dummies/{id}/owned_dummy/related_dummies/{relatedDummies}/third_level/fourth_level':
    get:
      tags:
        - FourthLevel
        - ThirdLevel
      operationId: api_related_owning_dummies_owned_dummy_related_dummies_item_third_level_fourth_level_get_subresource
      summary: 'Retrieves a FourthLevel resource.'
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: relatedDummies
          in: path
          required: true
          schema:
            type: string
  /related_to_dummy_friends:
    get:
      tags:
        - RelatedToDummyFriend
      operationId: getRelatedToDummyFriendCollection
      summary: 'Retrieves the collection of RelatedToDummyFriend resources.'
      responses:
        200:
          description: 'RelatedToDummyFriend collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
      parameters:
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RelatedToDummyFriend
      operationId: postRelatedToDummyFriendCollection
      summary: 'Creates a RelatedToDummyFriend resource.'
      responses:
        201:
          description: 'RelatedToDummyFriend resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
        description: 'The new RelatedToDummyFriend resource'
  '/related_to_dummy_friends/{id}':
    get:
      tags:
        - RelatedToDummyFriend
      operationId: getRelatedToDummyFriendItem
      summary: 'Retrieves a RelatedToDummyFriend resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedToDummyFriend resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - RelatedToDummyFriend
      operationId: deleteRelatedToDummyFriendItem
      summary: 'Removes the RelatedToDummyFriend resource.'
      responses:
        204:
          description: 'RelatedToDummyFriend resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - RelatedToDummyFriend
      operationId: putRelatedToDummyFriendItem
      summary: 'Replaces the RelatedToDummyFriend resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedToDummyFriend resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
        description: 'The updated RelatedToDummyFriend resource'
    patch:
      tags:
        - RelatedToDummyFriend
      operationId: patchRelatedToDummyFriendItem
      summary: 'Updates the RelatedToDummyFriend resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelatedToDummyFriend resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
            text/html:
              schema:
                $ref: '#/components/schemas/RelatedToDummyFriend-fakemanytomany'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
          text/html:
            schema:
              $ref: '#/components/schemas/RelatedToDummyFriend'
        description: 'The updated RelatedToDummyFriend resource'
  /relation1s:
    get:
      tags:
        - Relation1
      operationId: getRelation1Collection
      summary: 'Retrieves the collection of Relation1 resources.'
      responses:
        200:
          description: 'Relation1 collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation1'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Relation1
      operationId: postRelation1Collection
      summary: 'Creates a Relation1 resource.'
      responses:
        201:
          description: 'Relation1 resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation1'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation1'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation1'
        description: 'The new Relation1 resource'
  '/relation1s/{id}':
    get:
      tags:
        - Relation1
      operationId: getRelation1Item
      summary: 'Retrieves a Relation1 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation1 resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation1'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Relation1
      operationId: deleteRelation1Item
      summary: 'Removes the Relation1 resource.'
      responses:
        204:
          description: 'Relation1 resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Relation1
      operationId: putRelation1Item
      summary: 'Replaces the Relation1 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation1 resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation1'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation1'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation1'
        description: 'The updated Relation1 resource'
    patch:
      tags:
        - Relation1
      operationId: patchRelation1Item
      summary: 'Updates the Relation1 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation1 resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation1'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation1'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation1'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation1'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation1'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation1'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation1'
        description: 'The updated Relation1 resource'
  /relation2s:
    get:
      tags:
        - Relation2
      operationId: getRelation2Collection
      summary: 'Retrieves the collection of Relation2 resources.'
      responses:
        200:
          description: 'Relation2 collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation2'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Relation2
      operationId: postRelation2Collection
      summary: 'Creates a Relation2 resource.'
      responses:
        201:
          description: 'Relation2 resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation2'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation2'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation2'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation2'
        description: 'The new Relation2 resource'
  '/relation2s/{id}':
    get:
      tags:
        - Relation2
      operationId: getRelation2Item
      summary: 'Retrieves a Relation2 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation2 resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation2'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Relation2
      operationId: deleteRelation2Item
      summary: 'Removes the Relation2 resource.'
      responses:
        204:
          description: 'Relation2 resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Relation2
      operationId: putRelation2Item
      summary: 'Replaces the Relation2 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation2 resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation2'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation2'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation2'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation2'
        description: 'The updated Relation2 resource'
    patch:
      tags:
        - Relation2
      operationId: patchRelation2Item
      summary: 'Updates the Relation2 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation2 resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation2'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation2'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation2'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation2'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation2'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation2'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation2'
        description: 'The updated Relation2 resource'
  /relation3s:
    get:
      tags:
        - Relation3
      operationId: getRelation3Collection
      summary: 'Retrieves the collection of Relation3 resources.'
      responses:
        200:
          description: 'Relation3 collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Relation3'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - Relation3
      operationId: postRelation3Collection
      summary: 'Creates a Relation3 resource.'
      responses:
        201:
          description: 'Relation3 resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation3'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation3'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation3'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation3'
        description: 'The new Relation3 resource'
  '/relation3s/{id}':
    get:
      tags:
        - Relation3
      operationId: getRelation3Item
      summary: 'Retrieves a Relation3 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation3 resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation3'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - Relation3
      operationId: deleteRelation3Item
      summary: 'Removes the Relation3 resource.'
      responses:
        204:
          description: 'Relation3 resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - Relation3
      operationId: putRelation3Item
      summary: 'Replaces the Relation3 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation3 resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation3'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation3'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation3'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation3'
        description: 'The updated Relation3 resource'
    patch:
      tags:
        - Relation3
      operationId: patchRelation3Item
      summary: 'Updates the Relation3 resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Relation3 resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/xml:
              schema:
                $ref: '#/components/schemas/Relation3'
            application/json:
              schema:
                $ref: '#/components/schemas/Relation3'
            text/html:
              schema:
                $ref: '#/components/schemas/Relation3'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/xml:
            schema:
              $ref: '#/components/schemas/Relation3'
          text/xml:
            schema:
              $ref: '#/components/schemas/Relation3'
          application/json:
            schema:
              $ref: '#/components/schemas/Relation3'
          text/html:
            schema:
              $ref: '#/components/schemas/Relation3'
        description: 'The updated Relation3 resource'
  /relation_embedders:
    get:
      tags:
        - RelationEmbedder
      operationId: getRelationEmbedderCollection
      summary: 'Retrieves the collection of RelationEmbedder resources.'
      responses:
        200:
          description: 'RelationEmbedder collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationEmbedder-barcelona'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - RelationEmbedder
      operationId: postRelationEmbedderCollection
      summary: 'Creates a RelationEmbedder resource.'
      responses:
        201:
          description: 'RelationEmbedder resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          text/html:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
        description: 'The new RelationEmbedder resource'
  '/relation_embedders/{id}':
    get:
      tags:
        - RelationEmbedder
      operationId: getRelationEmbedderItem
      summary: 'Retrieves a RelationEmbedder resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelationEmbedder resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
        404:
          description: 'Resource not found'
    put:
      tags:
        - RelationEmbedder
      operationId: putRelationEmbedderItem
      summary: 'Replaces the RelationEmbedder resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelationEmbedder resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/xml:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          text/xml:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
          text/html:
            schema:
              $ref: '#/components/schemas/RelationEmbedder-chicago'
        description: 'The updated RelationEmbedder resource'
    delete:
      tags:
        - RelationEmbedder
      operationId: deleteRelationEmbedderItem
      summary: 'Removes the RelationEmbedder resource.'
      responses:
        204:
          description: 'RelationEmbedder resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  '/relation_embedders/{id}/custom':
    get:
      tags:
        - RelationEmbedder
      operationId: custom_getRelationEmbedderItem
      summary: 'Retrieves a RelationEmbedder resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'RelationEmbedder resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/xml:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            application/json:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
            text/html:
              schema:
                $ref: '#/components/schemas/RelationEmbedder-barcelona'
        404:
          description: 'Resource not found'
  /resource_interfaces:
    get:
      tags:
        - ResourceInterface
      operationId: getResourceInterfaceCollection
      summary: 'Retrieves the collection of ResourceInterface resources.'
      responses:
        200:
          description: 'ResourceInterface collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceInterface'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
  '/resource_interfaces/{id}':
    get:
      tags:
        - ResourceInterface
      operationId: getResourceInterfaceItem
      summary: 'Retrieves a ResourceInterface resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ResourceInterface resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
            application/xml:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
            text/xml:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
            text/html:
              schema:
                $ref: '#/components/schemas/ResourceInterface'
        404:
          description: 'Resource not found'
  /secured_dummies:
    get:
      tags:
        - SecuredDummy
      operationId: getSecuredDummyCollection
      summary: 'Retrieves the collection of SecuredDummy resources.'
      responses:
        200:
          description: 'SecuredDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecuredDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - SecuredDummy
      operationId: postSecuredDummyCollection
      summary: 'Creates a SecuredDummy resource.'
      responses:
        201:
          description: 'SecuredDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/SecuredDummy'
        description: 'The new SecuredDummy resource'
  '/secured_dummies/{id}':
    get:
      tags:
        - SecuredDummy
      operationId: getSecuredDummyItem
      summary: 'Retrieves a SecuredDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'SecuredDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/SecuredDummy'
        404:
          description: 'Resource not found'
  /serializable_resources:
    get:
      tags:
        - SerializableResource
      operationId: getSerializableResourceCollection
      summary: 'Retrieves the collection of SerializableResource resources.'
      responses:
        200:
          description: 'SerializableResource collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SerializableResource'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - SerializableResource
      operationId: postSerializableResourceCollection
      summary: 'Creates a SerializableResource resource.'
      responses:
        201:
          description: 'SerializableResource resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/html:
              schema:
                $ref: '#/components/schemas/SerializableResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          text/html:
            schema:
              $ref: '#/components/schemas/SerializableResource'
        description: 'The new SerializableResource resource'
  '/serializable_resources/{id}':
    get:
      tags:
        - SerializableResource
      operationId: getSerializableResourceItem
      summary: 'Retrieves a SerializableResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'SerializableResource resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/html:
              schema:
                $ref: '#/components/schemas/SerializableResource'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - SerializableResource
      operationId: deleteSerializableResourceItem
      summary: 'Removes the SerializableResource resource.'
      responses:
        204:
          description: 'SerializableResource resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - SerializableResource
      operationId: putSerializableResourceItem
      summary: 'Replaces the SerializableResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'SerializableResource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/html:
              schema:
                $ref: '#/components/schemas/SerializableResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          text/html:
            schema:
              $ref: '#/components/schemas/SerializableResource'
        description: 'The updated SerializableResource resource'
    patch:
      tags:
        - SerializableResource
      operationId: patchSerializableResourceItem
      summary: 'Updates the SerializableResource resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'SerializableResource resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/xml:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            application/json:
              schema:
                $ref: '#/components/schemas/SerializableResource'
            text/html:
              schema:
                $ref: '#/components/schemas/SerializableResource'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/xml:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          text/xml:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          application/json:
            schema:
              $ref: '#/components/schemas/SerializableResource'
          text/html:
            schema:
              $ref: '#/components/schemas/SerializableResource'
        description: 'The updated SerializableResource resource'
  /short_custom/denormalization:
    post:
      tags:
        - CustomActionDummy
      operationId: short_custom_denormalizationCustomActionDummyCollection
      summary: 'Creates a CustomActionDummy resource.'
      responses:
        201:
          description: 'CustomActionDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/CustomActionDummy'
        description: 'The new CustomActionDummy resource'
  '/short_custom/{id}/normalization':
    get:
      tags:
        - CustomActionDummy
      operationId: short_custom_normalizationCustomActionDummyItem
      summary: 'Retrieves a CustomActionDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'CustomActionDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/CustomActionDummy'
        404:
          description: 'Resource not found'
  /single_file_configs:
    get:
      tags:
        - single_file_config
      operationId: getSingle_file_configCollection
      summary: 'Retrieves the collection of single_file_config resources.'
      responses:
        200:
          description: 'single_file_config collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/single_file_config'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - single_file_config
      operationId: postSingle_file_configCollection
      summary: 'Creates a single_file_config resource.'
      responses:
        201:
          description: 'single_file_config resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/html:
              schema:
                $ref: '#/components/schemas/single_file_config'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/xml:
            schema:
              $ref: '#/components/schemas/single_file_config'
          text/xml:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          text/html:
            schema:
              $ref: '#/components/schemas/single_file_config'
        description: 'The new single_file_config resource'
  '/single_file_configs/{id}':
    get:
      tags:
        - single_file_config
      operationId: getSingle_file_configItem
      summary: 'Retrieves a single_file_config resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'single_file_config resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/html:
              schema:
                $ref: '#/components/schemas/single_file_config'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - single_file_config
      operationId: deleteSingle_file_configItem
      summary: 'Removes the single_file_config resource.'
      responses:
        204:
          description: 'single_file_config resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - single_file_config
      operationId: putSingle_file_configItem
      summary: 'Replaces the single_file_config resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'single_file_config resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/html:
              schema:
                $ref: '#/components/schemas/single_file_config'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/xml:
            schema:
              $ref: '#/components/schemas/single_file_config'
          text/xml:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          text/html:
            schema:
              $ref: '#/components/schemas/single_file_config'
        description: 'The updated single_file_config resource'
    patch:
      tags:
        - single_file_config
      operationId: patchSingle_file_configItem
      summary: 'Updates the single_file_config resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'single_file_config resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/xml:
              schema:
                $ref: '#/components/schemas/single_file_config'
            application/json:
              schema:
                $ref: '#/components/schemas/single_file_config'
            text/html:
              schema:
                $ref: '#/components/schemas/single_file_config'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/xml:
            schema:
              $ref: '#/components/schemas/single_file_config'
          text/xml:
            schema:
              $ref: '#/components/schemas/single_file_config'
          application/json:
            schema:
              $ref: '#/components/schemas/single_file_config'
          text/html:
            schema:
              $ref: '#/components/schemas/single_file_config'
        description: 'The updated single_file_config resource'
  /third_levels:
    get:
      tags:
        - ThirdLevel
      operationId: getThirdLevelCollection
      summary: 'Retrieves the collection of ThirdLevel resources.'
      responses:
        200:
          description: 'ThirdLevel collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThirdLevel'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - ThirdLevel
      operationId: postThirdLevelCollection
      summary: 'Creates a ThirdLevel resource.'
      responses:
        201:
          description: 'ThirdLevel resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          text/xml:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          text/html:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
        description: 'The new ThirdLevel resource'
  '/third_levels/{id}':
    get:
      tags:
        - ThirdLevel
      operationId: getThirdLevelItem
      summary: 'Retrieves a ThirdLevel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ThirdLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - ThirdLevel
      operationId: deleteThirdLevelItem
      summary: 'Removes the ThirdLevel resource.'
      responses:
        204:
          description: 'ThirdLevel resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - ThirdLevel
      operationId: putThirdLevelItem
      summary: 'Replaces the ThirdLevel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ThirdLevel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          text/xml:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          text/html:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
        description: 'The updated ThirdLevel resource'
    patch:
      tags:
        - ThirdLevel
      operationId: patchThirdLevelItem
      summary: 'Updates the ThirdLevel resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'ThirdLevel resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/ThirdLevel'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/xml:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          text/xml:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
          text/html:
            schema:
              $ref: '#/components/schemas/ThirdLevel'
        description: 'The updated ThirdLevel resource'
  '/third_levels/{id}/fourth_level':
    get:
      tags:
        - FourthLevel
        - ThirdLevel
      operationId: api_third_levels_fourth_level_get_subresource
      summary: 'Retrieves a FourthLevel resource.'
      responses:
        200:
          description: 'FourthLevel resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            application/json:
              schema:
                $ref: '#/components/schemas/FourthLevel'
            text/html:
              schema:
                $ref: '#/components/schemas/FourthLevel'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
  /truncated_dummies:
    get:
      tags:
        - TruncatedDummy
      operationId: getTruncatedDummyCollection
      summary: 'Retrieves the collection of TruncatedDummy resources.'
      responses:
        200:
          description: 'TruncatedDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruncatedDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - TruncatedDummy
      operationId: postTruncatedDummyCollection
      summary: 'Creates a TruncatedDummy resource.'
      responses:
        201:
          description: 'TruncatedDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
        description: 'The new TruncatedDummy resource'
  '/truncated_dummies/{id}':
    get:
      tags:
        - TruncatedDummy
      operationId: getTruncatedDummyItem
      summary: 'Retrieves a TruncatedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'TruncatedDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - TruncatedDummy
      operationId: deleteTruncatedDummyItem
      summary: 'Removes the TruncatedDummy resource.'
      responses:
        204:
          description: 'TruncatedDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - TruncatedDummy
      operationId: putTruncatedDummyItem
      summary: 'Replaces the TruncatedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'TruncatedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
        description: 'The updated TruncatedDummy resource'
    patch:
      tags:
        - TruncatedDummy
      operationId: patchTruncatedDummyItem
      summary: 'Updates the TruncatedDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'TruncatedDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/TruncatedDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/TruncatedDummy'
        description: 'The updated TruncatedDummy resource'
  /upper_case_identifier_dummies:
    get:
      tags:
        - UpperCaseIdentifierDummy
      operationId: getUpperCaseIdentifierDummyCollection
      summary: 'Retrieves the collection of UpperCaseIdentifierDummy resources.'
      responses:
        200:
          description: 'UpperCaseIdentifierDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpperCaseIdentifierDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - UpperCaseIdentifierDummy
      operationId: postUpperCaseIdentifierDummyCollection
      summary: 'Creates a UpperCaseIdentifierDummy resource.'
      responses:
        201:
          description: 'UpperCaseIdentifierDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        description: 'The new UpperCaseIdentifierDummy resource'
  '/upper_case_identifier_dummies/{id}':
    get:
      tags:
        - UpperCaseIdentifierDummy
      operationId: getUpperCaseIdentifierDummyItem
      summary: 'Retrieves a UpperCaseIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UpperCaseIdentifierDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - UpperCaseIdentifierDummy
      operationId: deleteUpperCaseIdentifierDummyItem
      summary: 'Removes the UpperCaseIdentifierDummy resource.'
      responses:
        204:
          description: 'UpperCaseIdentifierDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - UpperCaseIdentifierDummy
      operationId: putUpperCaseIdentifierDummyItem
      summary: 'Replaces the UpperCaseIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UpperCaseIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        description: 'The updated UpperCaseIdentifierDummy resource'
    patch:
      tags:
        - UpperCaseIdentifierDummy
      operationId: patchUpperCaseIdentifierDummyItem
      summary: 'Updates the UpperCaseIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UpperCaseIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/UpperCaseIdentifierDummy'
        description: 'The updated UpperCaseIdentifierDummy resource'
  /users:
    get:
      tags:
        - User
      operationId: getUserCollection
      summary: 'Retrieves the collection of User resources.'
      responses:
        200:
          description: 'User collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-user_user-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - User
      operationId: postUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          text/xml:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
        description: 'The new User resource'
  '/users/{id}':
    get:
      tags:
        - User
      operationId: getUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - User
      operationId: deleteUserItem
      summary: 'Removes the User resource.'
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - User
      operationId: putUserItem
      summary: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          text/xml:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
        description: 'The updated User resource'
    patch:
      tags:
        - User
      operationId: patchUserItem
      summary: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/xml:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-user_user-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          text/xml:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-user_user-write'
        description: 'The updated User resource'
  /uuid_identifier_dummies:
    get:
      tags:
        - UuidIdentifierDummy
      operationId: getUuidIdentifierDummyCollection
      summary: 'Retrieves the collection of UuidIdentifierDummy resources.'
      responses:
        200:
          description: 'UuidIdentifierDummy collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UuidIdentifierDummy'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - UuidIdentifierDummy
      operationId: postUuidIdentifierDummyCollection
      summary: 'Creates a UuidIdentifierDummy resource.'
      responses:
        201:
          description: 'UuidIdentifierDummy resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
        description: 'The new UuidIdentifierDummy resource'
  '/uuid_identifier_dummies/{id}':
    get:
      tags:
        - UuidIdentifierDummy
      operationId: getUuidIdentifierDummyItem
      summary: 'Retrieves a UuidIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UuidIdentifierDummy resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - UuidIdentifierDummy
      operationId: deleteUuidIdentifierDummyItem
      summary: 'Removes the UuidIdentifierDummy resource.'
      responses:
        204:
          description: 'UuidIdentifierDummy resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - UuidIdentifierDummy
      operationId: putUuidIdentifierDummyItem
      summary: 'Replaces the UuidIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UuidIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
        description: 'The updated UuidIdentifierDummy resource'
    patch:
      tags:
        - UuidIdentifierDummy
      operationId: patchUuidIdentifierDummyItem
      summary: 'Updates the UuidIdentifierDummy resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'UuidIdentifierDummy resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/xml:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            application/json:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
            text/html:
              schema:
                $ref: '#/components/schemas/UuidIdentifierDummy'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/xml:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          text/xml:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          application/json:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
          text/html:
            schema:
              $ref: '#/components/schemas/UuidIdentifierDummy'
        description: 'The updated UuidIdentifierDummy resource'
  /vo_dummy_cars:
    get:
      tags:
        - VoDummyCar
      operationId: getVoDummyCarCollection
      summary: 'Retrieves the collection of VoDummyCar resources.'
      responses:
        200:
          description: 'VoDummyCar collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyCar-read_write'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - VoDummyCar
      operationId: postVoDummyCarCollection
      summary: 'Creates a VoDummyCar resource.'
      responses:
        201:
          description: 'VoDummyCar resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
        description: 'The new VoDummyCar resource'
  '/vo_dummy_cars/{id}':
    get:
      tags:
        - VoDummyCar
      operationId: getVoDummyCarItem
      summary: 'Retrieves a VoDummyCar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyCar resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - VoDummyCar
      operationId: deleteVoDummyCarItem
      summary: 'Removes the VoDummyCar resource.'
      responses:
        204:
          description: 'VoDummyCar resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - VoDummyCar
      operationId: putVoDummyCarItem
      summary: 'Replaces the VoDummyCar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyCar resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
        description: 'The updated VoDummyCar resource'
    patch:
      tags:
        - VoDummyCar
      operationId: patchVoDummyCarItem
      summary: 'Updates the VoDummyCar resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyCar resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyCar-read_write'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyCar-write'
        description: 'The updated VoDummyCar resource'
  /vo_dummy_drivers:
    get:
      tags:
        - VoDummyDriver
      operationId: getVoDummyDriverCollection
      summary: 'Retrieves the collection of VoDummyDriver resources.'
      responses:
        200:
          description: 'VoDummyDriver collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyDriver'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - VoDummyDriver
      operationId: postVoDummyDriverCollection
      summary: 'Creates a VoDummyDriver resource.'
      responses:
        201:
          description: 'VoDummyDriver resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
        description: 'The new VoDummyDriver resource'
  '/vo_dummy_drivers/{id}':
    get:
      tags:
        - VoDummyDriver
      operationId: getVoDummyDriverItem
      summary: 'Retrieves a VoDummyDriver resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyDriver resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - VoDummyDriver
      operationId: deleteVoDummyDriverItem
      summary: 'Removes the VoDummyDriver resource.'
      responses:
        204:
          description: 'VoDummyDriver resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - VoDummyDriver
      operationId: putVoDummyDriverItem
      summary: 'Replaces the VoDummyDriver resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyDriver resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
        description: 'The updated VoDummyDriver resource'
    patch:
      tags:
        - VoDummyDriver
      operationId: patchVoDummyDriverItem
      summary: 'Updates the VoDummyDriver resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyDriver resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyDriver'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyDriver'
        description: 'The updated VoDummyDriver resource'
  /vo_dummy_inspections:
    get:
      tags:
        - VoDummyInspection
      operationId: getVoDummyInspectionCollection
      summary: 'Retrieves the collection of VoDummyInspection resources.'
      responses:
        200:
          description: 'VoDummyInspection collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInspection'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - VoDummyInspection
      operationId: postVoDummyInspectionCollection
      summary: 'Creates a VoDummyInspection resource.'
      responses:
        201:
          description: 'VoDummyInspection resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
        description: 'The new VoDummyInspection resource'
  '/vo_dummy_inspections/{id}':
    get:
      tags:
        - VoDummyInspection
      operationId: getVoDummyInspectionItem
      summary: 'Retrieves a VoDummyInspection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyInspection resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - VoDummyInspection
      operationId: deleteVoDummyInspectionItem
      summary: 'Removes the VoDummyInspection resource.'
      responses:
        204:
          description: 'VoDummyInspection resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - VoDummyInspection
      operationId: putVoDummyInspectionItem
      summary: 'Replaces the VoDummyInspection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyInspection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
        description: 'The updated VoDummyInspection resource'
    patch:
      tags:
        - VoDummyInspection
      operationId: patchVoDummyInspectionItem
      summary: 'Updates the VoDummyInspection resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyInspection resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInspection'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyInspection'
        description: 'The updated VoDummyInspection resource'
  /vo_dummy_insurance_companies:
    get:
      tags:
        - VoDummyInsuranceCompany
      operationId: getVoDummyInsuranceCompanyCollection
      summary: 'Retrieves the collection of VoDummyInsuranceCompany resources.'
      responses:
        200:
          description: 'VoDummyInsuranceCompany collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoDummyInsuranceCompany'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - VoDummyInsuranceCompany
      operationId: postVoDummyInsuranceCompanyCollection
      summary: 'Creates a VoDummyInsuranceCompany resource.'
      responses:
        201:
          description: 'VoDummyInsuranceCompany resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
        description: 'The new VoDummyInsuranceCompany resource'
  '/vo_dummy_insurance_companies/{id}':
    get:
      tags:
        - VoDummyInsuranceCompany
      operationId: getVoDummyInsuranceCompanyItem
      summary: 'Retrieves a VoDummyInsuranceCompany resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyInsuranceCompany resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - VoDummyInsuranceCompany
      operationId: deleteVoDummyInsuranceCompanyItem
      summary: 'Removes the VoDummyInsuranceCompany resource.'
      responses:
        204:
          description: 'VoDummyInsuranceCompany resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - VoDummyInsuranceCompany
      operationId: putVoDummyInsuranceCompanyItem
      summary: 'Replaces the VoDummyInsuranceCompany resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyInsuranceCompany resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
        description: 'The updated VoDummyInsuranceCompany resource'
    patch:
      tags:
        - VoDummyInsuranceCompany
      operationId: patchVoDummyInsuranceCompanyItem
      summary: 'Updates the VoDummyInsuranceCompany resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'VoDummyInsuranceCompany resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            application/json:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
            text/html:
              schema:
                $ref: '#/components/schemas/VoDummyInsuranceCompany'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          application/json:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
          text/html:
            schema:
              $ref: '#/components/schemas/VoDummyInsuranceCompany'
        description: 'The updated VoDummyInsuranceCompany resource'
  /writable_ids:
    get:
      tags:
        - WritableId
      operationId: getWritableIdCollection
      summary: 'Retrieves the collection of WritableId resources.'
      responses:
        200:
          description: 'WritableId collection response'
          content:
            application/ld+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WritableId'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
        -
          name: itemsPerPage
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
        -
          name: pagination
          in: query
          required: false
          description: 'Enable or disable pagination'
          schema:
            type: boolean
    post:
      tags:
        - WritableId
      operationId: postWritableIdCollection
      summary: 'Creates a WritableId resource.'
      responses:
        201:
          description: 'WritableId resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/json:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/html:
              schema:
                $ref: '#/components/schemas/WritableId'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/xml:
            schema:
              $ref: '#/components/schemas/WritableId'
          text/xml:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/json:
            schema:
              $ref: '#/components/schemas/WritableId'
          text/html:
            schema:
              $ref: '#/components/schemas/WritableId'
        description: 'The new WritableId resource'
  '/writable_ids/{id}':
    get:
      tags:
        - WritableId
      operationId: getWritableIdItem
      summary: 'Retrieves a WritableId resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'WritableId resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/json:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/html:
              schema:
                $ref: '#/components/schemas/WritableId'
        404:
          description: 'Resource not found'
    delete:
      tags:
        - WritableId
      operationId: deleteWritableIdItem
      summary: 'Removes the WritableId resource.'
      responses:
        204:
          description: 'WritableId resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
    put:
      tags:
        - WritableId
      operationId: putWritableIdItem
      summary: 'Replaces the WritableId resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'WritableId resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/json:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/html:
              schema:
                $ref: '#/components/schemas/WritableId'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/xml:
            schema:
              $ref: '#/components/schemas/WritableId'
          text/xml:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/json:
            schema:
              $ref: '#/components/schemas/WritableId'
          text/html:
            schema:
              $ref: '#/components/schemas/WritableId'
        description: 'The updated WritableId resource'
    patch:
      tags:
        - WritableId
      operationId: patchWritableIdItem
      summary: 'Updates the WritableId resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'WritableId resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/xml:
              schema:
                $ref: '#/components/schemas/WritableId'
            application/json:
              schema:
                $ref: '#/components/schemas/WritableId'
            text/html:
              schema:
                $ref: '#/components/schemas/WritableId'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/xml:
            schema:
              $ref: '#/components/schemas/WritableId'
          text/xml:
            schema:
              $ref: '#/components/schemas/WritableId'
          application/json:
            schema:
              $ref: '#/components/schemas/WritableId'
          text/html:
            schema:
              $ref: '#/components/schemas/WritableId'
        description: 'The updated WritableId resource'
servers:
  -
    url: /
components:
  schemas:
    AbstractDummy:
      type: object
      description: 'Abstract Dummy.'
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        instance:
          description: 'a concrete thing'
          type: string
      required:
        - name
    Answer:
      type: object
      description: Answer.
      properties:
        id:
          readOnly: true
          type: integer
        content:
          type: string
        question:
          type: string
        relatedQuestions:
          type: array
          items:
            type: string
    Answer-foobar:
      type: object
      description: Answer.
      properties:
        id:
          readOnly: true
          type: integer
        content:
          type: string
        question:
          type: string
        relatedQuestions:
          type: array
          items:
            type: string
    ArrayFilterValidator:
      type: object
      description: 'Filter Validator entity.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'A name'
          type: string
    CircularReference:
      type: object
      description: 'Circular Reference.'
      properties:
        id:
          type: integer
        parent:
          $ref: '#/components/schemas/CircularReference'
        children:
          type: array
          items:
            $ref: '#/components/schemas/CircularReference'
    CircularReference-circular:
      type: object
      description: 'Circular Reference.'
      properties:
        parent:
          $ref: '#/components/schemas/CircularReference-circular'
        children:
          type: array
          items:
            $ref: '#/components/schemas/CircularReference-circular'
    CompositeItem:
      type: object
      description: 'Composite Item.'
      properties:
        id:
          readOnly: true
          type: integer
        field1:
          type: string
        compositeValues:
          readOnly: true
          type: array
          items:
            type: string
    CompositeLabel:
      type: object
      description: 'Composite Label.'
      properties:
        id:
          readOnly: true
          type: integer
        value:
          type: string
    CompositePrimitiveItem:
      type: object
      description: 'Composite Primitive Item.'
      properties:
        name:
          type: string
        year:
          type: integer
        description:
          type: string
    CompositeRelation:
      type: object
      description: 'Composite Relation.'
      properties:
        value:
          type: string
        compositeItem:
          type: string
        compositeLabel:
          type: string
    ConcreteDummy:
      type: object
      description: 'Concrete Dummy.'
      required:
        - instance
        - name
      properties:
        instance:
          description: 'a concrete thing'
          type: string
        id:
          readOnly: true
          type: integer
        name:
          type: string
    ContainNonResource:
      type: object
      description: 'Resource linked to a standard object.'
      properties:
        id:
          type: integer
        nested:
          type: string
        notAResource:
          type: string
    Container:
      type: object
      description: ''
      properties:
        id:
          description: UUID
          type: string
        nodes:
          readOnly: true
          type: array
          items:
            type: string
    CustomActionDummy:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        foo:
          type: string
    CustomGeneratedIdentifier:
      type: object
      description: 'Custom identifier.'
      properties:
        id:
          readOnly: true
          type: string
    CustomIdentifierDummy:
      type: object
      description: 'Custom Identifier Dummy.'
      properties:
        customId:
          readOnly: true
          description: 'The custom identifier'
          type: integer
        name:
          description: 'The dummy name'
          type: string
    CustomNormalizedDummy-input:
      type: object
      description: 'Custom Normalized Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        alias:
          description: 'The dummy name alias'
          type: string
      required:
        - name
    CustomNormalizedDummy-output:
      type: object
      description: 'Custom Normalized Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        alias:
          description: 'The dummy name alias'
          type: string
      required:
        - name
    CustomNormalizedDummy-related_input_input:
      type: object
      description: 'Custom Normalized Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        alias:
          description: 'The dummy name alias'
          type: string
      required:
        - name
    CustomNormalizedDummy-related_output_output:
      type: object
      description: 'Custom Normalized Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        alias:
          description: 'The dummy name alias'
          type: string
      required:
        - name
    CustomWritableIdentifierDummy:
      type: object
      description: 'Custom Writable Identifier Dummy.'
      properties:
        slug:
          description: 'The special identifier'
          type: string
        name:
          description: 'The dummy name'
          type: string
    DeprecatedResource:
      type: object
      description: ''
      properties:
        id:
          type: string
        deprecatedField:
          type: string
    Dummy:
      type: object
      description: Dummy.
      properties:
        description:
          description: 'A short description of the item'
          type: string
        dummy:
          description: 'A dummy'
          type: string
        dummyBoolean:
          description: 'A dummy boolean'
          type: boolean
        dummyDate:
          description: 'A dummy date'
          type: string
          format: date-time
        dummyFloat:
          description: 'A dummy float'
          type: number
        dummyPrice:
          description: 'A dummy price'
          type: string
        relatedDummy:
          description: 'A related dummy'
          type: string
        relatedDummies:
          description: 'Several dummies'
          type: array
          items:
            type: string
        jsonData:
          description: 'serialize data'
          type: array
          items:
            type: string
        arrayData:
          type: array
          items:
            type: string
        name_converted:
          type: string
        relatedOwnedDummy:
          type: string
        relatedOwningDummy:
          type: string
        id:
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        alias:
          description: 'The dummy name alias'
          type: string
        role:
          readOnly: true
        foo:
          description: foo
          type: array
          items:
            type: string
      required:
        - name
    DummyAggregateOffer:
      type: object
      description: 'Dummy Aggregate Offer.'
      properties:
        offers:
          type: array
          items:
            type: string
        id:
          readOnly: true
          description: 'The id'
          type: integer
        value:
          description: 'The dummy aggregate offer value'
          type: integer
        product:
          description: 'The dummy product'
          type: string
    DummyCar:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The entity Id'
          type: integer
        colors:
          description: 'Something else'
          type: array
          items:
            $ref: '#/components/schemas/DummyCarColor'
        name:
          type: string
        canSell:
          type: boolean
        availableAt:
          type: string
          format: date-time
    DummyCar-colors:
      type: object
      description: ''
      properties:
        colors:
          description: 'Something else'
          type: array
          items:
            $ref: '#/components/schemas/DummyCarColor-colors'
    DummyCarColor:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The entity Id'
          type: integer
        car:
          type: string
        prop:
          type: string
      required:
        - car
        - prop
    DummyCarColor-colors:
      type: object
      description: ''
      required:
        - prop
      properties:
        prop:
          type: string
    DummyCustomFormat:
      type: object
      description: ''
      properties:
        id:
          description: 'The id'
          type: integer
        name:
          type: string
      required:
        - name
    DummyDate:
      type: object
      description: 'Dummy Date.'
      properties:
        dummyDate:
          description: 'The dummy date'
          type: string
          format: date-time
        id:
          readOnly: true
          description: 'The id'
          type: integer
    DummyEntityWithConstructor:
      type: object
      description: 'Dummy entity built with constructor.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        foo:
          type: string
        bar:
          type: string
        baz:
          type: string
    DummyEntityWithConstructor-put:
      type: object
      description: 'Dummy entity built with constructor.'
      properties:
        baz:
          type: string
    DummyFriend:
      type: object
      description: 'Dummy Friend.'
      properties:
        id:
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
      required:
        - name
    DummyFriend-fakemanytomany:
      type: object
      description: 'Dummy Friend.'
      required:
        - name
      properties:
        name:
          description: 'The dummy name'
          type: string
    DummyFriend-friends:
      type: object
      description: 'Dummy Friend.'
      required:
        - name
      properties:
        name:
          description: 'The dummy name'
          type: string
    DummyGroup-dummy_read:
      type: object
      description: DummyGroup.
      properties:
        id:
          readOnly: true
          type: integer
        foo:
          type: string
        bar:
          type: string
        baz:
          readOnly: true
          type: string
    DummyGroup-dummy_write:
      type: object
      description: DummyGroup.
      properties:
        foo:
          type: string
        bar:
          type: string
        qux:
          type: string
    DummyImmutableDate:
      type: object
      description: 'Dummy Immutable Date.'
      properties:
        dummyDate:
          description: 'The dummy date'
          type: string
          format: date-time
        id:
          readOnly: true
          description: 'The id'
          type: integer
    DummyInput:
      type: object
      description: 'Dummy Input.'
      properties:
        id:
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
    DummyInputOutput:
      type: object
      description: 'Dummy InputOutput.'
      properties:
        id:
          description: 'The id'
          type: integer
    DummyMercure:
      type: object
      description: ''
      properties:
        id:
          type: string
    DummyOffer:
      type: object
      description: 'Dummy Offer.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        value:
          description: 'The dummy aggregate offer value'
          type: integer
        aggregate:
          description: 'The dummy aggregate offer value'
          type: string
    DummyOutput:
      type: object
      description: 'Dummy Output.'
      properties:
        id:
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
    DummyProduct:
      type: object
      description: 'Dummy Product.'
      properties:
        offers:
          type: array
          items:
            type: string
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The tour name'
          type: string
        relatedProducts:
          type: array
          items:
            type: string
        parent:
          type: string
    DummyProperty-dummy_read:
      type: object
      description: DummyProperty.
      properties:
        id:
          readOnly: true
          type: integer
        foo:
          type: string
        bar:
          type: string
        baz:
          type: string
        group:
          $ref: '#/components/schemas/DummyGroup-dummy_read'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/DummyGroup-dummy_read'
    DummyProperty-dummy_write:
      type: object
      description: DummyProperty.
      properties:
        foo:
          type: string
        bar:
          type: string
        baz:
          type: string
        group:
          $ref: '#/components/schemas/DummyGroup-dummy_write'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/DummyGroup-dummy_write'
    DummyTableInheritance:
      type: object
      description: ''
      properties:
        name:
          type: string
        id:
          readOnly: true
          type: integer
        parent:
          type: string
        email:
          description: 'The dummy email'
          type: string
        nickname:
          readOnly: true
    DummyTableInheritance-default:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        email:
          description: 'The dummy email'
          type: string
        parent:
          type: string
        nickname:
          readOnly: true
    DummyTableInheritanceChild:
      type: object
      description: ''
      properties:
        nickname:
          description: 'The dummy nickname'
          type: string
        name:
          type: string
        id:
          readOnly: true
          type: integer
        parent:
          type: string
    DummyTableInheritanceDifferentChild:
      type: object
      description: ''
      properties:
        email:
          description: 'The dummy email'
          type: string
        name:
          type: string
        id:
          readOnly: true
          type: integer
        parent:
          type: string
    DummyTableInheritanceRelated-default:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        children:
          description: 'Related children'
          type: array
          items:
            $ref: '#/components/schemas/DummyTableInheritance-default'
    DummyValidation:
      type: object
      description: ''
      properties:
        id:
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        title:
          description: 'The dummy title'
          type: string
        code:
          description: 'The dummy code'
          type: string
    EmbeddedDummy:
      type: object
      description: 'Embedded Dummy.'
      properties:
        dummyDate:
          description: 'A dummy date'
          type: string
          format: date-time
        embeddedDummy:
          type: string
        relatedDummy:
          description: 'A related dummy'
          type: string
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
    EmbeddedDummy-embed:
      type: object
      description: 'Embedded Dummy.'
      properties:
        name:
          description: 'The dummy name'
          type: string
        embeddedDummy:
          type: string
    FilterValidator:
      type: object
      description: 'Filter Validator entity.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'A name'
          type: string
    FlexConfig:
      type: object
      description: 'This entity is configure in tests/Fixtures/app/config/api_platform/flex.yaml.'
      properties:
        id:
          readOnly: true
          type: integer
    Foo:
      type: object
      description: Foo.
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The foo name'
          type: string
        bar:
          description: 'The foo bar'
          type: string
    FooDummy:
      type: object
      description: FooDummy.
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The foo name'
          type: string
        dummy:
          description: 'The foo dummy'
          type: string
    FourthLevel:
      type: object
      description: 'Fourth Level.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        level:
          type: integer
    Greeting:
      type: object
      description: ''
      properties:
        message:
          type: string
        sender:
          type: string
        recipient:
          type: string
        id:
          readOnly: true
          type: integer
    JsonldContextDummy:
      type: object
      description: 'Jsonld Context Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        person:
          description: 'The dummy person'
          type: string
    MaxDepthDummy-default:
      type: object
      description: '*'
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        child:
          $ref: '#/components/schemas/MaxDepthDummy-default'
    MaxDepthEagerDummy-default:
      type: object
      description: '*'
      properties:
        id:
          readOnly: true
          type: integer
        name:
          type: string
        child:
          $ref: '#/components/schemas/MaxDepthEagerDummy-default'
    NoCollectionDummy:
      type: object
      description: 'No Collection Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
    Node:
      type: object
      description: ''
      properties:
        container:
          type: string
        serial:
          description: 'Node serial'
          type: integer
    OverriddenOperationDummy-overridden_operation_dummy_get:
      type: object
      description: 'Overridden Operation Dummy.'
      required:
        - name
      properties:
        name:
          description: 'The dummy name'
          type: string
        alias:
          readOnly: true
          description: 'The dummy name alias'
          type: string
        description:
          description: 'A short description of the item'
          type: string
    OverriddenOperationDummy-overridden_operation_dummy_put:
      type: object
      description: 'Overridden Operation Dummy.'
      properties:
        alias:
          readOnly: true
          description: 'The dummy name alias'
          type: string
        description:
          description: 'A short description of the item'
          type: string
    OverriddenOperationDummy-overridden_operation_dummy_read:
      type: object
      description: 'Overridden Operation Dummy.'
      required:
        - name
      properties:
        name:
          description: 'The dummy name'
          type: string
        alias:
          readOnly: true
          description: 'The dummy name alias'
          type: string
        description:
          description: 'A short description of the item'
          type: string
    OverriddenOperationDummy-overridden_operation_dummy_write:
      type: object
      description: 'Overridden Operation Dummy.'
      required:
        - name
      properties:
        name:
          description: 'The dummy name'
          type: string
        description:
          description: 'A short description of the item'
          type: string
        notGettable:
          type: string
    Person:
      type: object
      description: Person.
      properties:
        name:
          type: string
        pets:
          type: array
          items:
            type: string
        sentGreetings:
          type: array
          items:
            type: string
        id:
          readOnly: true
          type: integer
    Person-people.pets:
      type: object
      description: Person.
      properties:
        name:
          type: string
        pets:
          type: array
          items:
            type: string
    Pet:
      type: object
      description: Pet.
      properties:
        name:
          type: string
        people:
          type: array
          items:
            type: string
        id:
          readOnly: true
          type: integer
    Question:
      type: object
      description: ''
      properties:
        content:
          type: string
        id:
          readOnly: true
          type: integer
        answer:
          type: string
    RamseyUuidDummy:
      type: object
      description: ''
      properties:
        id:
          type: string
    ReadableOnlyProperty:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          readOnly: true
          description: 'The foo name'
          type: string
    RelatedDummy:
      type: object
      description: 'Related Dummy.'
      externalDocs:
        url: 'https://schema.org/Product'
      properties:
        name:
          description: 'A name'
          type: string
        dummyDate:
          description: 'A dummy date'
          type: string
          format: date-time
        thirdLevel:
          $ref: '#/components/schemas/ThirdLevel'
        relatedToDummyFriend:
          type: array
          items:
            $ref: '#/components/schemas/RelatedToDummyFriend'
        dummyBoolean:
          description: 'A dummy bool'
          type: boolean
        embeddedDummy:
          type: string
        id:
          type: integer
        symfony:
          type: string
        age:
          type: integer
    RelatedDummy-barcelona:
      type: object
      description: 'Related Dummy.'
      externalDocs:
        url: 'https://schema.org/Product'
      properties:
        symfony:
          type: string
        thirdLevel:
          $ref: '#/components/schemas/ThirdLevel-barcelona'
    RelatedDummy-chicago:
      type: object
      description: 'Related Dummy.'
      externalDocs:
        url: 'https://schema.org/Product'
      properties:
        symfony:
          type: string
        thirdLevel:
          $ref: '#/components/schemas/ThirdLevel-chicago'
    RelatedDummy-friends:
      type: object
      description: 'Related Dummy.'
      externalDocs:
        url: 'https://schema.org/Product'
      properties:
        id:
          type: integer
        name:
          description: 'A name'
          type: string
        symfony:
          type: string
        dummyDate:
          description: 'A dummy date'
          type: string
          format: date-time
        thirdLevel:
          $ref: '#/components/schemas/ThirdLevel-friends'
        relatedToDummyFriend:
          type: array
          items:
            $ref: '#/components/schemas/RelatedToDummyFriend-friends'
        dummyBoolean:
          description: 'A dummy bool'
          type: boolean
        embeddedDummy:
          type: string
        age:
          type: integer
    RelatedNormalizedDummy-related_input_input:
      type: object
      description: 'Related to Normalized Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        customNormalizedDummy:
          description: 'Several Normalized dummies'
          type: array
          items:
            $ref: '#/components/schemas/CustomNormalizedDummy-related_input_input'
      required:
        - name
    RelatedNormalizedDummy-related_output_output:
      type: object
      description: 'Related to Normalized Dummy.'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        customNormalizedDummy:
          description: 'Several Normalized dummies'
          type: array
          items:
            $ref: '#/components/schemas/CustomNormalizedDummy-related_output_output'
      required:
        - name
    RelatedOwnedDummy:
      type: object
      description: 'Related Owned Dummy.'
      externalDocs:
        url: 'https://schema.org/Product'
      properties:
        name:
          description: 'A name'
          type: string
        owningDummy:
          type: string
        id:
          type: integer
    RelatedOwningDummy:
      type: object
      description: 'Related Owning Dummy.'
      externalDocs:
        url: 'https://schema.org/Product'
      properties:
        name:
          description: 'A name'
          type: string
        ownedDummy:
          type: string
        id:
          type: integer
    RelatedToDummyFriend:
      type: object
      description: 'Related To Dummy Friend represent an association table for a manytomany relation.'
      required:
        - name
        - dummyFriend
        - relatedDummy
      properties:
        name:
          description: 'The dummy name'
          type: string
        description:
          description: 'The dummy description'
          type: string
        dummyFriend:
          $ref: '#/components/schemas/DummyFriend'
        relatedDummy:
          $ref: '#/components/schemas/RelatedDummy'
    RelatedToDummyFriend-fakemanytomany:
      type: object
      description: 'Related To Dummy Friend represent an association table for a manytomany relation.'
      required:
        - name
        - dummyFriend
      properties:
        name:
          description: 'The dummy name'
          type: string
        description:
          description: 'The dummy description'
          type: string
        dummyFriend:
          $ref: '#/components/schemas/DummyFriend-fakemanytomany'
    RelatedToDummyFriend-friends:
      type: object
      description: 'Related To Dummy Friend represent an association table for a manytomany relation.'
      required:
        - name
        - dummyFriend
      properties:
        name:
          description: 'The dummy name'
          type: string
        description:
          description: 'The dummy description'
          type: string
        dummyFriend:
          $ref: '#/components/schemas/DummyFriend-friends'
    Relation1:
      type: object
      description: ''
      properties:
        id:
          type: integer
        relation2:
          type: string
    Relation2:
      type: object
      description: ''
      properties:
        id:
          type: integer
        relation1s:
          type: array
          items:
            type: string
    Relation3:
      type: object
      description: ''
      properties:
        id:
          type: integer
        relation2s:
          type: array
          items:
            type: string
    RelationEmbedder-barcelona:
      type: object
      description: 'Relation Embedder.'
      properties:
        krondstadt:
          type: string
        anotherRelated:
          $ref: '#/components/schemas/RelatedDummy-barcelona'
        related:
          $ref: '#/components/schemas/RelatedDummy-barcelona'
    RelationEmbedder-chicago:
      type: object
      description: 'Relation Embedder.'
      properties:
        paris:
          type: string
        krondstadt:
          type: string
        anotherRelated:
          $ref: '#/components/schemas/RelatedDummy-chicago'
        related:
          $ref: '#/components/schemas/RelatedDummy-chicago'
    ResourceInterface:
      type: object
      properties:
        foo:
          readOnly: true
          type: string
    SecuredDummy:
      type: object
      description: 'Secured resource.'
      properties:
        id:
          readOnly: true
          type: integer
        title:
          description: 'The title'
          type: string
        description:
          description: 'The description'
          type: string
        owner:
          description: 'The owner'
          type: string
      required:
        - title
        - owner
    SerializableResource:
      type: object
      description: 'Resource linked to an external API.'
      properties:
        id:
          type: integer
        foo:
          type: string
        bar:
          type: string
    ThirdLevel:
      type: object
      description: 'Third Level.'
      properties:
        fourthLevel:
          type: string
        id:
          readOnly: true
          description: 'The id'
          type: integer
        level:
          type: integer
        test:
          type: boolean
    ThirdLevel-barcelona:
      type: object
      description: 'Third Level.'
      properties:
        level:
          type: integer
        fourthLevel:
          type: string
    ThirdLevel-chicago:
      type: object
      description: 'Third Level.'
      properties:
        level:
          type: integer
        fourthLevel:
          type: string
    ThirdLevel-friends:
      type: object
      description: 'Third Level.'
      properties:
        fourthLevel:
          type: string
    TruncatedDummy:
      type: object
      description: ''
      properties:
        value:
          type: string
        id:
          readOnly: true
          type: integer
    UpperCaseIdentifierDummy:
      type: object
      description: 'UpperCaseIdentifier dummy.'
      properties:
        Uuid:
          description: 'The custom identifier'
          type: string
        name:
          description: 'The dummy name'
          type: string
    User-user_user-read:
      type: object
      description: 'A User.'
      properties:
        email:
          type: string
        fullname:
          type: string
        username:
          type: string
    User-user_user-write:
      type: object
      description: 'A User.'
      properties:
        email:
          type: string
        fullname:
          type: string
        plainPassword:
          type: string
        username:
          type: string
    UuidIdentifierDummy:
      type: object
      description: 'Custom identifier dummy.'
      properties:
        uuid:
          description: 'The custom identifier'
          type: string
        name:
          description: 'The dummy name'
          type: string
    VoDummyCar-read_write:
      type: object
      description: ''
      properties:
        mileage:
          type: integer
        bodyType:
          type: string
        inspections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VoDummyInspection-read_write'
        make:
          type: string
        insuranceCompany:
          $ref: '#/components/schemas/VoDummyInsuranceCompany-read_write'
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/VoDummyDriver-read_write'
    VoDummyCar-write:
      type: object
      description: ''
      properties:
        mileage:
          type: integer
        bodyType:
          type: string
        inspections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VoDummyInspection-write'
        make:
          type: string
        insuranceCompany:
          $ref: '#/components/schemas/VoDummyInsuranceCompany-write'
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/VoDummyDriver-write'
    VoDummyDriver:
      type: object
      description: ''
      properties:
        firstName:
          type: string
        lastName:
          type: string
        id:
          readOnly: true
          type: integer
    VoDummyDriver-read_write:
      type: object
      description: ''
      properties:
        firstName:
          type: string
        lastName:
          type: string
    VoDummyDriver-write:
      type: object
      description: ''
      properties:
        firstName:
          type: string
        lastName:
          type: string
    VoDummyInspection:
      type: object
      description: ''
      properties:
        accepted:
          type: boolean
        car:
          type: string
        performed:
          type: string
          format: date-time
        id:
          readOnly: true
          type: integer
    VoDummyInspection-read_write:
      type: object
      description: ''
      properties:
        accepted:
          type: boolean
        car:
          type: string
        performed:
          type: string
          format: date-time
    VoDummyInspection-write:
      type: object
      description: ''
      properties:
        accepted:
          type: boolean
        car:
          type: string
        performed:
          type: string
          format: date-time
    VoDummyInsuranceCompany:
      type: object
      description: ''
      properties:
        name:
          type: string
        id:
          readOnly: true
          type: integer
    VoDummyInsuranceCompany-read_write:
      type: object
      description: ''
      properties:
        name:
          type: string
    VoDummyInsuranceCompany-write:
      type: object
      description: ''
      properties:
        name:
          type: string
    WritableId:
      type: object
      description: ''
      properties:
        id:
          type: string
        name:
          type: string
    fileconfigdummy:
      type: object
      description: 'Dummy resource'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
        foo:
          description: 'The dummy foo'
          type: string
    single_file_config:
      type: object
      description: 'File configured resource'
      properties:
        id:
          readOnly: true
          description: 'The id'
          type: integer
        name:
          description: 'The dummy name'
          type: string
