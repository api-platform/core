<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="api_platform.serializer" alias="serializer" />
        <service id="api_platform.property_accessor" alias="property_accessor" public="false" />
        <service id="api_platform.property_info" alias="property_info" public="false" />
        <service id="api_platform.negotiator" class="Negotiation\Negotiator" public="false" />

        <service id="api_platform.resource_class_resolver" class="ApiPlatform\Core\Api\ResourceClassResolver" public="false">
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
        </service>

        <service id="api_platform.operation_method_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\OperationMethodResolver" public="false">
            <argument type="service" id="api_platform.router" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
        </service>

        <service id="api_platform.route_name_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouteNameResolver" public="false">
            <argument type="service" id="api_platform.router" />
        </service>

        <service id="api_platform.route_name_resolver.cached" class="ApiPlatform\Core\Bridge\Symfony\Routing\CachedRouteNameResolver" decorates="api_platform.route_name_resolver" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.route_name_resolver" />
            <argument type="service" id="api_platform.route_name_resolver.cached.inner" />
        </service>

        <service id="api_platform.route_loader" class="ApiPlatform\Core\Bridge\Symfony\Routing\ApiLoader" public="false">
            <argument type="service" id="kernel" />
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.operation_path_resolver.custom" />
            <argument type="service" id="service_container" />
            <argument>%api_platform.formats%</argument>
            <argument>%api_platform.resource_class_directories%</argument>
            <argument type="service" id="api_platform.subresource_operation_factory" />
            <argument>%api_platform.graphql.enabled%</argument>

            <tag name="routing.loader" />
        </service>

        <service id="api_platform.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\Router" public="false">
            <argument type="service" id="router" />
        </service>

        <service id="api_platform.iri_converter" class="ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter" public="false">
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="service" id="api_platform.item_data_provider" />
            <argument type="service" id="api_platform.route_name_resolver" />
            <argument type="service" id="api_platform.router" />
            <argument type="service" id="api_platform.property_accessor" />
            <argument type="service" id="api_platform.identifiers_extractor.cached" />
        </service>

        <!-- Serializer -->

        <service id="api_platform.serializer.context_builder" class="ApiPlatform\Core\Serializer\SerializerContextBuilder" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
        </service>

        <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Core\Serializer\SerializerFilterContextBuilder" decorates="api_platform.serializer.context_builder" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.filter_locator" />
            <argument type="service" id="api_platform.serializer.context_builder.filter.inner" />
        </service>

        <service id="api_platform.serializer.property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" abstract="true" />

        <service id="api_platform.serializer.group_filter" class="ApiPlatform\Core\Serializer\Filter\GroupFilter" public="false" abstract="true" />

        <service id="api_platform.serializer.normalizer.item" class="ApiPlatform\Core\Serializer\ItemNormalizer" public="false">
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="service" id="api_platform.iri_converter" />
            <argument type="service" id="api_platform.resource_class_resolver" />
            <argument type="service" id="api_platform.property_accessor" />
            <argument type="service" id="api_platform.name_converter" on-invalid="ignore" />
            <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore" />

            <tag name="serializer.normalizer" />
        </service>

        <!-- Resources Operations path resolver -->

        <service id="api_platform.operation_path_resolver" alias="api_platform.operation_path_resolver.router" public="false" />

        <service id="api_platform.operation_path_resolver.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver" public="false">
            <argument type="service" id="api_platform.router" />
            <argument type="service" id="api_platform.operation_path_resolver.custom" />
            <argument type="service" id="api_platform.subresource_operation_factory" />
        </service>

        <service id="api_platform.operation_path_resolver.custom" class="ApiPlatform\Core\PathResolver\CustomOperationPathResolver" public="false">
            <argument type="service" id="api_platform.operation_path_resolver.generator" />
        </service>

        <service id="api_platform.operation_path_resolver.generator" class="ApiPlatform\Core\PathResolver\OperationPathResolver" public="false">
            <argument type="service" id="api_platform.path_segment_name_generator" />
        </service>

        <service id="api_platform.operation_path_resolver.underscore" class="ApiPlatform\Core\PathResolver\UnderscoreOperationPathResolver" public="false">
            <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.underscore" instead.</deprecated>
        </service>

        <service id="api_platform.operation_path_resolver.dash" class="ApiPlatform\Core\PathResolver\DashOperationPathResolver" public="false">
            <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.dash" instead.</deprecated>
        </service>

        <!-- Path name generator -->

        <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator" public="false" />
        <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Core\Operation\DashPathSegmentNameGenerator" public="false" />

        <!-- Event listeners -->

        <!-- kernel.request priority must be < 8 to be executed after the Firewall -->
        <service id="api_platform.listener.request.add_format" class="ApiPlatform\Core\EventListener\AddFormatListener">
            <argument type="service" id="api_platform.negotiator" />
            <argument>%api_platform.formats%</argument>

            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="7" />
        </service>

        <service id="api_platform.listener.request.read" class="ApiPlatform\Core\EventListener\ReadListener">
            <argument type="service" id="api_platform.collection_data_provider" />
            <argument type="service" id="api_platform.item_data_provider" />
            <argument type="service" id="api_platform.subresource_data_provider" />

            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="4" />
        </service>

        <service id="api_platform.listener.request.deserialize" class="ApiPlatform\Core\EventListener\DeserializeListener">
            <argument type="service" id="api_platform.serializer" />
            <argument type="service" id="api_platform.serializer.context_builder" />
            <argument>%api_platform.formats%</argument>

            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2" />
        </service>

        <service id="api_platform.listener.view.serialize" class="ApiPlatform\Core\EventListener\SerializeListener">
            <argument type="service" id="api_platform.serializer" />
            <argument type="service" id="api_platform.serializer.context_builder" />

            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="16" />
        </service>

        <service id="api_platform.listener.view.respond" class="ApiPlatform\Core\EventListener\RespondListener">
            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="8" />
        </service>

        <service id="api_platform.listener.exception.validation" class="ApiPlatform\Core\Bridge\Symfony\Validator\EventListener\ValidationExceptionListener">
            <argument type="service" id="api_platform.serializer" />
            <argument>%api_platform.error_formats%</argument>

            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" />
        </service>

        <service id="api_platform.listener.exception" class="ApiPlatform\Core\EventListener\ExceptionListener">
            <argument>api_platform.action.exception</argument>
            <argument type="service" id="logger" on-invalid="null" />

            <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96" />
            <tag name="monolog.logger" channel="request" />
        </service>

        <!-- Action -->

        <service id="api_platform.action.placeholder" class="ApiPlatform\Core\Action\PlaceholderAction" />
        <service id="api_platform.action.get_collection" alias="api_platform.action.placeholder" />
        <service id="api_platform.action.post_collection" alias="api_platform.action.placeholder" />
        <service id="api_platform.action.get_item" alias="api_platform.action.placeholder" />
        <service id="api_platform.action.put_item" alias="api_platform.action.placeholder" />
        <service id="api_platform.action.delete_item" alias="api_platform.action.placeholder" />
        <service id="api_platform.action.get_subresource" alias="api_platform.action.placeholder" />

        <service id="api_platform.action.entrypoint" class="ApiPlatform\Core\Action\EntrypointAction">
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
        </service>

        <service id="api_platform.action.documentation" class="ApiPlatform\Core\Documentation\Action\DocumentationAction">
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
            <argument>%api_platform.title%</argument>
            <argument>%api_platform.description%</argument>
            <argument>%api_platform.version%</argument>
            <argument>%api_platform.formats%</argument>
        </service>

        <service id="api_platform.action.exception" class="ApiPlatform\Core\Action\ExceptionAction">
            <argument type="service" id="api_platform.serializer" />
            <argument>%api_platform.error_formats%</argument>
            <argument>%api_platform.exception_to_status%</argument>
        </service>

        <!-- Identifiers extractor -->

        <service id="api_platform.identifiers_extractor" class="ApiPlatform\Core\Api\IdentifiersExtractor" public="false">
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="service" id="api_platform.property_accessor" />
        </service>

        <service id="api_platform.identifiers_extractor.cached" class="ApiPlatform\Core\Api\CachedIdentifiersExtractor" decorates="api_platform.identifiers_extractor" public="false">
            <argument type="service" id="api_platform.cache.identifiers_extractor" />
            <argument type="service" id="api_platform.identifiers_extractor.cached.inner" />
            <argument type="service" id="api_platform.property_accessor" />
        </service>

        <!-- Subresources -->

        <service id="api_platform.subresource_operation_factory" class="ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="service" id="api_platform.path_segment_name_generator" />
        </service>

        <service id="api_platform.subresource_operation_factory.cached" class="ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory" decorates="api_platform.subresource_operation_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.subresource_operation_factory" />
            <argument type="service" id="api_platform.subresource_operation_factory.cached.inner" />
        </service>

        <!-- Cache -->

        <service id="api_platform.cache.route_name_resolver" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>

        <service id="api_platform.cache.identifiers_extractor" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>

        <service id="api_platform.cache.subresource_operation_factory" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>
    </services>

</container>
