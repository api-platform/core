<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="api_platform.serializer" alias="serializer" />

        <service id="api_platform.property_accessor" alias="property_accessor" public="false" />

        <service id="api_platform.property_info" alias="property_info" public="false" />

        <service id="api_platform.resource_class_resolver" class="ApiPlatform\Core\Api\ResourceClassResolver" public="false">
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
        </service>

        <service id="api_platform.operation_method_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\OperationMethodResolver" public="false">
            <argument type="service" id="api_platform.router" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
        </service>

        <service id="api_platform.route_loader" class="ApiPlatform\Core\Bridge\Symfony\Routing\ApiLoader" public="false">
            <argument type="service" id="kernel" />
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.routing.resource_path_generator" />
            <argument type="service" id="service_container" />
            <tag name="routing.loader" />
        </service>

        <service id="api_platform.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\Router" public="false">
            <argument type="service" id="router" />
        </service>

        <service id="api_platform.iri_converter" class="ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter" public="false">
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="service" id="api_platform.item_data_provider" />
            <argument type="service" id="api_platform.router" />
            <argument type="service" id="api_platform.property_accessor" />
        </service>

        <service id="api_platform.negotiator" class="Negotiation\Negotiator" public="false" />

        <!-- Resource path generators -->

        <service id="api_platform.routing.resource_path_generator.underscore" class="ApiPlatform\Core\Routing\UnderscoreResourcePathGenerator" public="false" />

        <service id="api_platform.routing.resource_path_generator.dash" class="ApiPlatform\Core\Routing\DashResourcePathGenerator" public="false" />

        <!-- Event listeners -->

        <service id="api_platform.listener.request.format" class="ApiPlatform\Core\EventListener\FormatRequestListener">
            <argument type="service" id="api_platform.negotiator" />
            <argument>%api_platform.supported_formats%</argument>

            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
        </service>

        <service id="api_platform.listener.view.deserializer" class="ApiPlatform\Core\EventListener\DeserializerViewListener">
            <argument type="service" id="api_platform.serializer" />

            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="30" />
        </service>

        <service id="api_platform.listener.view.validation" class="ApiPlatform\Core\Bridge\Symfony\Validator\EventListener\ViewListener">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="validator" />

            <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="20" />
        </service>

        <!-- Action -->

        <service id="api_platform.action.get_collection" class="ApiPlatform\Core\Action\GetCollectionAction">
            <argument type="service" id="api_platform.collection_data_provider" />
        </service>

        <service id="api_platform.action.post_collection" class="ApiPlatform\Core\Action\NullAction" />

        <service id="api_platform.action.get_item" class="ApiPlatform\Core\Action\GetItemAction">
            <argument type="service" id="api_platform.item_data_provider" />
        </service>

        <service id="api_platform.action.put_item" alias="api_platform.action.get_item" />

        <service id="api_platform.action.delete_item" alias="api_platform.action.get_item" />
    </services>

</container>
