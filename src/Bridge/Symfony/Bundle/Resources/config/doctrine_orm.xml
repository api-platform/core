<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
            <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory" />
        </service>

        <service id="api_platform.doctrine.orm.data_persister" class="ApiPlatform\Core\Bridge\Doctrine\Common\DataPersister" public="false">
            <argument type="service" id="doctrine" />

            <tag name="api_platform.data_persister" priority="-1000" />
        </service>

        <service id="api_platform.doctrine.orm.collection_data_provider" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument type="tagged" tag="api_platform.doctrine.orm.query_extension.collection" />
        </service>

        <service id="api_platform.doctrine.orm.item_data_provider" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="tagged" tag="api_platform.doctrine.orm.query_extension.item" />
        </service>

        <service id="api_platform.doctrine.orm.subresource_data_provider" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="tagged" tag="api_platform.doctrine.orm.query_extension.collection" />
            <argument type="tagged" tag="api_platform.doctrine.orm.query_extension.item" />
        </service>

        <service id="api_platform.doctrine.orm.default.collection_data_provider" parent="api_platform.doctrine.orm.collection_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\CollectionDataProvider">
            <tag name="api_platform.collection_data_provider" />
        </service>

        <service id="api_platform.doctrine.orm.default.item_data_provider" parent="api_platform.doctrine.orm.item_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\ItemDataProvider">
            <tag name="api_platform.item_data_provider" />
        </service>

        <service id="api_platform.doctrine.orm.default.subresource_data_provider" parent="api_platform.doctrine.orm.subresource_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\SubresourceDataProvider">
            <tag name="api_platform.subresource_data_provider" />
        </service>

        <!-- Filter -->

        <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument type="service" id="api_platform.iri_converter" />
            <argument type="service" id="api_platform.property_accessor" />
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter" />

        <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument>%api_platform.collection.order_parameter_name%</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter" />

        <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter" />

        <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter" />

        <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter" />

        <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter" />

        <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" public="false" abstract="true">
            <argument type="service" id="doctrine" />
            <argument>null</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter" />

        <!-- Metadata loader -->

        <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory" decoration-priority="40" public="false">
            <argument type="service" id="doctrine" />
            <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" />
        </service>

        <!-- Doctrine Query extensions -->

        <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" public="false">
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument>%api_platform.eager_loading.max_joins%</argument>
            <argument>%api_platform.eager_loading.force_eager%</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>%api_platform.eager_loading.fetch_partial%</argument>
            <argument type="service" id="serializer.mapping.class_metadata_factory" />

            <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8" />
            <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-8" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading" />

        <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.filter_locator" />

            <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter" />

        <!-- This needs to be executed right after the filter extension -->

        <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument>%api_platform.eager_loading.force_eager%</argument>
            <argument type="service" id="api_platform.resource_class_resolver" />

            <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading" />

        <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" public="false">
            <argument type="service" id="doctrine" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.pagination" />

            <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination" />

        <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" public="false">
            <argument>%api_platform.collection.order%</argument>
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />

            <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32" />
        </service>
        <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order" />
    </services>

</container>
