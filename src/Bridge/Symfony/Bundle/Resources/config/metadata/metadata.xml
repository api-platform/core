<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Resource name collection -->

        <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceNameCollectionFactory" decorates="api_platform.metadata.resource.name_collection_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.metadata.resource" />
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached.inner" />
        </service>
        <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory" />

        <!-- Resource metadata -->
        <service id="api_platform.metadata.resource.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="30" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.input_output.inner" />
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="20" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.short_name.inner" />
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="10" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.operation.inner" />
            <argument>%api_platform.formats%</argument>
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.metadata.resource" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached.inner" />
        </service>

        <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" alias="api_platform.metadata.resource.metadata_factory" />

        <!-- Property name collection -->

        <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.property_info" />
        <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory" />

        <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyNameCollectionFactory" public="false">
            <argument type="service" id="api_platform.property_info" />
        </service>

        <service id="api_platform.metadata.property.name_collection_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyNameCollectionFactory" decorates="api_platform.metadata.property.name_collection_factory" decoration-priority="10" public="false">
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory.inherited.inner" />
        </service>

        <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyNameCollectionFactory" decorates="api_platform.metadata.property.name_collection_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.metadata.property" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached.inner" />
        </service>

        <!-- Property metadata -->

        <!-- The PropertyInfo decorator must always be the first decorator, it will create the metadata if it doesn't exist -->
        <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory" decoration-priority="40" public="false">
            <argument type="service" id="api_platform.property_info" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info.inner" />
        </service>

        <service id="api_platform.metadata.property.metadata_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory" decoration-priority="40" public="false">
            <argument type="service" id="api_platform.metadata.resource.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.inherited.inner" />
        </service>

        <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory" decoration-priority="30" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="serializer.mapping.class_metadata_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer.inner" />
        </service>

        <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.metadata.property" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.cached.inner" />
        </service>

        <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory" />

        <!-- Cache -->

        <service id="api_platform.cache.metadata.resource" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>

        <service id="api_platform.cache.metadata.property" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>
    </services>

</container>
