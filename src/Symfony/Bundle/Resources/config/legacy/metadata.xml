<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="api_platform.metadata.resource.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="30" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.input_output.inner" />
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="20" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.short_name.inner" />
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="10" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.operation.inner" />
            <argument>%api_platform.patch_formats%</argument>
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.formats" class="ApiPlatform\Core\Metadata\Resource\Factory\FormatsResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="5" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.formats.inner" />
            <argument>%api_platform.formats%</argument>
            <argument>%api_platform.patch_formats%</argument>
        </service>

        <service id="api_platform.metadata.resource.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory" decorates="api_platform.metadata.resource.metadata_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.metadata.resource.legacy" />
            <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached.inner" />
        </service>

        <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" alias="api_platform.metadata.resource.metadata_factory" />

        <service id="api_platform.cache.metadata.resource.legacy" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>


        <!-- property metadata factory  -->

        <!-- The PropertyInfo decorator must always be the first decorator, it will create the metadata if it doesn't exist -->
        <service id="api_platform.metadata.property.metadata_factory.property_info.legacy" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory.legacy" decoration-priority="40" public="false">
            <argument type="service" id="api_platform.property_info" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info.legacy.inner" />
        </service>

        <service id="api_platform.metadata.property.metadata_factory.serializer.legacy" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory.legacy" decoration-priority="30" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="serializer.mapping.class_metadata_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer.legacy.inner" />
            <argument type="service" id="api_platform.resource_class_resolver" />
        </service>

        <service id="api_platform.metadata.property.metadata_factory.cached.legacy" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory.legacy" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.metadata.property.legacy" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.cached.legacy.inner" />
        </service>

        <service id="api_platform.metadata.property.metadata_factory.default_property.legacy" class="ApiPlatform\Core\Metadata\Property\Factory\DefaultPropertyMetadataFactory" decorates="api_platform.metadata.property.metadata_factory.legacy" decoration-priority="30" public="false">
            <argument type="service" id="api_platform.metadata.property.metadata_factory.default_property.legacy.inner" />
        </service>

        <service id="api_platform.metadata.extractor.xml.legacy" class="ApiPlatform\Core\Metadata\Extractor\XmlExtractor" public="false">
            <argument type="collection" />
            <argument type="service" id="service_container" />
        </service>
        <service id="api_platform.metadata.property.metadata_factory.legacy" alias="api_platform.metadata.property.metadata_factory.xml.legacy" />
        <service id="api_platform.metadata.property.metadata_factory.xml.legacy" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
            <argument type="service" id="api_platform.metadata.extractor.xml.legacy" />
        </service>

        <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.legacy" />

        <service id="api_platform.cache.metadata.property.legacy" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>

        <!-- XML -->
        <service id="api_platform.metadata.resource.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
            <argument type="service" id="api_platform.metadata.extractor.xml.legacy" />
        </service>
        <service id="api_platform.metadata.resource.metadata_factory" alias="api_platform.metadata.resource.metadata_factory.xml" />

        <service id="api_platform.metadata.resource.name_collection_factory.xml.legacy" class="ApiPlatform\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
            <argument type="service" id="api_platform.metadata.extractor.xml.legacy" />
        </service>

        <service id="api_platform.subresource_operation_factory.cached" class="ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory" decorates="api_platform.subresource_operation_factory" decoration-priority="-10" public="false">
            <argument type="service" id="api_platform.cache.subresource_operation_factory" />
            <argument type="service" id="api_platform.subresource_operation_factory.cached.inner" />
        </service>

        <service id="api_platform.cache.subresource_operation_factory" parent="cache.system" public="false">
            <tag name="cache.pool" />
        </service>

        <!-- Subresources -->
        <service id="api_platform.subresource_operation_factory" class="ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory" public="false">
            <argument type="service" id="api_platform.metadata.resource.metadata_factory" />
            <argument type="service" id="api_platform.metadata.property.name_collection_factory" />
            <argument type="service" id="api_platform.metadata.property.metadata_factory.legacy" />
            <argument type="service" id="api_platform.path_segment_name_generator" />
            <argument type="service" id="api_platform.identifiers_extractor.cached" />
        </service>

    </services>
</container>
