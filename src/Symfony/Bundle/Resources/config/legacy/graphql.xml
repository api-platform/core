<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="api_platform.graphql.resolver.factory.item" class="ApiPlatform\GraphQl\Resolver\Factory\ItemResolverFactory" public="false">
            <argument type="service" id="api_platform.graphql.resolver.stage.read" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security_post_denormalize" />
            <argument type="service" id="api_platform.graphql.resolver.stage.serialize" />
            <argument type="service" id="api_platform.graphql.resolver_locator" />
        </service>

        <service id="api_platform.graphql.resolver.factory.collection" class="ApiPlatform\GraphQl\Resolver\Factory\CollectionResolverFactory" public="false">
            <argument type="service" id="api_platform.graphql.resolver.stage.read" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security_post_denormalize" />
            <argument type="service" id="api_platform.graphql.resolver.stage.serialize" />
            <argument type="service" id="api_platform.graphql.resolver_locator" />
        </service>

        <service id="api_platform.graphql.resolver.factory.item_mutation" class="ApiPlatform\GraphQl\Resolver\Factory\ItemMutationResolverFactory" public="false">
            <argument type="service" id="api_platform.graphql.resolver.stage.read" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security_post_denormalize" />
            <argument type="service" id="api_platform.graphql.resolver.stage.serialize" />
            <argument type="service" id="api_platform.graphql.resolver.stage.deserialize" />
            <argument type="service" id="api_platform.graphql.resolver.stage.write" />
            <argument type="service" id="api_platform.graphql.resolver.stage.validate" />
            <argument type="service" id="api_platform.graphql.resolver_locator" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security_post_validation" />
        </service>

        <service id="api_platform.graphql.resolver.factory.item_subscription" class="ApiPlatform\GraphQl\Resolver\Factory\ItemSubscriptionResolverFactory" public="false">
            <argument type="service" id="api_platform.graphql.resolver.stage.read" />
            <argument type="service" id="api_platform.graphql.resolver.stage.security" />
            <argument type="service" id="api_platform.graphql.resolver.stage.serialize" />
            <argument type="service" id="api_platform.graphql.subscription.subscription_manager" />
            <argument type="service" id="api_platform.graphql.subscription.mercure_iri_generator" on-invalid="ignore" />
        </service>

        <service id="api_platform.graphql.resolver.stage.write" class="ApiPlatform\GraphQl\Resolver\Stage\WriteStage" public="false">
            <argument type="service" id="api_platform.state_processor.locator" />
            <argument type="service" id="api_platform.graphql.serializer.context_builder" />
        </service>
        <service id="api_platform.graphql.resolver.stage.read" class="ApiPlatform\GraphQl\Resolver\Stage\ReadStage" public="false">
            <argument type="service" id="api_platform.symfony.iri_converter" />
            <argument type="service" id="api_platform.state_provider.locator" />
            <argument type="service" id="api_platform.graphql.serializer.context_builder" />
            <argument>%api_platform.graphql.nesting_separator%</argument>
        </service>
        <service id="api_platform.graphql.resolver.stage.security" class="ApiPlatform\GraphQl\Resolver\Stage\SecurityStage" public="false">
            <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore" />
        </service>

        <service id="api_platform.graphql.resolver.stage.security_post_denormalize" class="ApiPlatform\GraphQl\Resolver\Stage\SecurityPostDenormalizeStage" public="false">
            <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore" />
        </service>

        <service id="api_platform.graphql.resolver.stage.security_post_validation" class="ApiPlatform\GraphQl\Resolver\Stage\SecurityPostValidationStage" public="false">
            <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore" />
        </service>

        <service id="api_platform.graphql.resolver.stage.serialize" class="ApiPlatform\GraphQl\Resolver\Stage\SerializeStage" public="false">
            <argument type="service" id="serializer" />
            <argument type="service" id="api_platform.graphql.serializer.context_builder" />
            <argument type="service" id="api_platform.pagination" />
        </service>

        <service id="api_platform.graphql.resolver.stage.deserialize" class="ApiPlatform\GraphQl\Resolver\Stage\DeserializeStage" public="false">
            <argument type="service" id="serializer" />
            <argument type="service" id="api_platform.graphql.serializer.context_builder" />
        </service>

        <service id="api_platform.graphql.resolver.stage.validate" class="ApiPlatform\GraphQl\Resolver\Stage\ValidateStage" public="false">
            <argument type="service" id="api_platform.validator" />
        </service>
    </services>
</container>
